2020-10-12 08:57:14,102 [28883] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2020-10-12 08:57:14,102 [28883] DEBUG    root:93: [JupyterRequire] Initializing comms.
2020-10-12 08:57:14,105 [28883] INFO     root:247: [JupyterRequire] Initializing comms.
2020-10-12 08:57:14,110 [28883] DEBUG    root:197: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2020-10-12 08:57:14,112 [28883] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2020-10-12 08:57:14,114 [28883] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2020-10-12 08:57:23,198 [28878] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2020-10-12 08:57:23,199 [28878] DEBUG    root:93: [JupyterRequire] Initializing comms.
2020-10-12 08:57:23,200 [28878] INFO     root:247: [JupyterRequire] Initializing comms.
2020-10-12 08:57:23,201 [28883] DEBUG    matplotlib:278: [JupyterRequire] CONFIGDIR=/home/wfct0p/.config/matplotlib
2020-10-12 08:57:23,205 [28878] DEBUG    root:197: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2020-10-12 08:57:23,207 [28878] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2020-10-12 08:57:23,209 [28878] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2020-10-12 08:57:23,224 [28883] DEBUG    matplotlib:278: [JupyterRequire] (private) matplotlib data path: /home/wfct0p/.local/lib/python3.7/site-packages/matplotlib/mpl-data
2020-10-12 08:57:23,260 [28883] DEBUG    matplotlib:278: [JupyterRequire] matplotlib data path: /home/wfct0p/.local/lib/python3.7/site-packages/matplotlib/mpl-data
2020-10-12 08:57:23,262 [28883] DEBUG    matplotlib:1009: [JupyterRequire] loaded rc file /home/wfct0p/.local/lib/python3.7/site-packages/matplotlib/mpl-data/matplotlibrc
2020-10-12 08:57:23,268 [28883] DEBUG    matplotlib:1598: [JupyterRequire] matplotlib version 3.2.1
2020-10-12 08:57:23,270 [28883] DEBUG    matplotlib:1599: [JupyterRequire] interactive is False
2020-10-12 08:57:23,272 [28883] DEBUG    matplotlib:1600: [JupyterRequire] platform is linux
2020-10-12 08:57:23,274 [28883] DEBUG    matplotlib:1601: [JupyterRequire] loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', 'zipimport', '_frozen_importlib_external', '_io', 'marshal', 'posix', 'encodings', 'codecs', '_codecs', 'encodings.aliases', 'encodings.utf_8', '_signal', '__main__', 'encodings.latin_1', 'io', 'abc', '_abc', '_bootlocale', '_locale', 'site', 'os', 'stat', '_stat', 'posixpath', 'genericpath', 'os.path', '_collections_abc', '_sitebuiltins', 'types', 'importlib', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib.util', 'importlib.abc', 'importlib.machinery', 'contextlib', 'collections', 'operator', '_operator', 'keyword', 'heapq', '_heapq', 'itertools', 'reprlib', '_collections', 'functools', '_functools', 'mpl_toolkits', 'sphinxcontrib', 'runpy', 'pkgutil', 'weakref', '_weakrefset', 'ipykernel', 'ipykernel._version', 'ipykernel.connect', '__future__', 'json', 'json.decoder', 're', 'enum', 'sre_compile', '_sre', 'sre_parse', 'sre_constants', 'copyreg', 'json.scanner', '_json', 'json.encoder', 'subprocess', 'time', 'signal', 'errno', '_posixsubprocess', 'select', 'selectors', 'collections.abc', 'math', 'threading', 'traceback', 'linecache', 'tokenize', 'token', 'IPython', 'IPython.core', 'IPython.core.getipython', 'IPython.core.release', 'IPython.core.application', 'atexit', 'copy', 'glob', 'fnmatch', 'logging', 'string', '_string', 'shutil', 'zlib', 'bz2', '_compression', '_bz2', 'lzma', '_lzma', 'pwd', 'grp', 'traitlets', 'traitlets.traitlets', 'inspect', 'dis', 'opcode', '_opcode', 'six', 'struct', '_struct', 'traitlets.utils', 'traitlets.utils.getargspec', 'traitlets.utils.importstring', 'ipython_genutils', 'ipython_genutils._version', 'ipython_genutils.py3compat', 'ipython_genutils.encoding', 'locale', 'platform', 'traitlets.utils.sentinel', 'traitlets.utils.bunch', 'traitlets._version', 'traitlets.config', 'traitlets.config.application', 'decorator', 'traitlets.config.configurable', 'traitlets.config.loader', 'argparse', 'gettext', 'ast', '_ast', 'ipython_genutils.path', 'random', 'hashlib', '_hashlib', '_blake2', '_sha3', 'bisect', '_bisect', '_random', 'ipython_genutils.text', 'textwrap', 'ipython_genutils.importstring', 'IPython.core.crashhandler', 'pprint', 'IPython.core.ultratb', 'pydoc', 'urllib', 'urllib.parse', 'IPython.core.debugger', 'bdb', 'IPython.utils', 'IPython.utils.PyColorize', 'IPython.utils.coloransi', 'IPython.utils.ipstruct', 'IPython.utils.colorable', 'pygments', 'pygments.util', 'IPython.utils.py3compat', 'IPython.utils.encoding', 'IPython.core.excolors', 'IPython.testing', 'IPython.testing.skipdoctest', 'pdb', 'cmd', 'code', 'codeop', 'IPython.core.display_trap', 'IPython.utils.path', 'IPython.utils.process', 'IPython.utils._process_posix', 'pexpect', 'pexpect.exceptions', 'pexpect.utils', 'pexpect.expect', 'pexpect.pty_spawn', 'pty', 'tty', 'termios', 'ptyprocess', 'ptyprocess.ptyprocess', 'fcntl', 'resource', 'ptyprocess.util', 'pexpect.spawnbase', 'pexpect.run', 'IPython.utils._process_common', 'shlex', 'IPython.utils.decorators', 'IPython.utils.data', 'IPython.utils.terminal', 'IPython.utils.sysinfo', 'IPython.utils._sysinfo', 'IPython.core.profiledir', 'IPython.paths', 'tempfile', 'IPython.utils.importstring', 'IPython.terminal', 'IPython.terminal.embed', 'IPython.core.compilerop', 'IPython.core.magic_arguments', 'IPython.core.error', 'IPython.utils.text', 'pathlib', 'ntpath', 'IPython.core.magic', 'getopt', 'IPython.core.oinspect', 'IPython.core.page', 'IPython.core.display', 'binascii', 'mimetypes', 'IPython.lib', 'IPython.lib.security', 'getpass', 'IPython.lib.pretty', 'datetime', '_datetime', 'IPython.utils.openpy', 'IPython.utils.dir2', 'IPython.utils.wildcard', 'pygments.lexers', 'pygments.lexers._mapping', 'pygments.modeline', 'pygments.plugin', 'pygments.lexers.python', 'pygments.lexer', 'pygments.filter', 'pygments.filters', 'pygments.token', 'pygments.regexopt', 'pygments.unistring', 'pygments.formatters', 'pygments.formatters._mapping', 'pygments.formatters.html', 'pygments.formatter', 'pygments.styles', 'IPython.core.inputtransformer2', 'typing', 'typing.io', 'typing.re', 'IPython.core.interactiveshell', 'asyncio', 'asyncio.base_events', 'concurrent', 'concurrent.futures', 'concurrent.futures._base', 'socket', '_socket', 'ssl', '_ssl', 'base64', 'asyncio.constants', 'asyncio.coroutines', 'asyncio.base_futures', 'asyncio.format_helpers', 'asyncio.log', 'asyncio.events', 'contextvars', '_contextvars', 'asyncio.base_tasks', '_asyncio', 'asyncio.futures', 'asyncio.protocols', 'asyncio.sslproto', 'asyncio.transports', 'asyncio.tasks', 'asyncio.locks', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.unix_events', 'asyncio.base_subprocess', 'asyncio.selector_events', 'pickleshare', 'pickle', '_compat_pickle', '_pickle', 'IPython.core.prefilter', 'IPython.core.autocall', 'IPython.core.macro', 'IPython.core.splitinput', 'IPython.core.alias', 'IPython.core.builtin_trap', 'IPython.core.events', 'backcall', 'backcall.backcall', 'IPython.core.displayhook', 'IPython.core.displaypub', 'IPython.core.extensions', 'IPython.core.formatters', 'IPython.utils.sentinel', 'IPython.core.history', 'sqlite3', 'sqlite3.dbapi2', '_sqlite3', 'IPython.core.logger', 'IPython.core.payload', 'IPython.core.usage', 'IPython.display', 'IPython.lib.display', 'html', 'html.entities', 'IPython.utils.io', 'IPython.utils.capture', 'IPython.utils.strdispatch', 'IPython.core.hooks', 'IPython.utils.syspathcontext', 'IPython.utils.tempdir', 'IPython.utils.contexts', 'IPython.core.async_helpers', 'IPython.terminal.interactiveshell', 'prompt_toolkit', 'prompt_toolkit.application', 'prompt_toolkit.application.application', 'prompt_toolkit.buffer', 'prompt_toolkit.application.current', 'prompt_toolkit.eventloop', 'prompt_toolkit.eventloop.base', 'prompt_toolkit.log', 'prompt_toolkit.eventloop.coroutine', 'prompt_toolkit.eventloop.defaults', 'prompt_toolkit.utils', 'six.moves', 'wcwidth', 'wcwidth.wcwidth', 'wcwidth.table_wide', 'wcwidth.table_zero', 'prompt_toolkit.cache', 'prompt_toolkit.eventloop.future', 'prompt_toolkit.eventloop.context', 'prompt_toolkit.eventloop.async_generator', 'queue', '_queue', 'six.moves.queue', 'prompt_toolkit.eventloop.event', 'prompt_toolkit.application.run_in_terminal', 'prompt_toolkit.auto_suggest', 'prompt_toolkit.filters', 'prompt_toolkit.filters.base', 'prompt_toolkit.filters.app', 'prompt_toolkit.enums', 'prompt_toolkit.filters.utils', 'prompt_toolkit.filters.cli', 'prompt_toolkit.clipboard', 'prompt_toolkit.clipboard.base', 'prompt_toolkit.selection', 'prompt_toolkit.clipboard.in_memory', 'prompt_toolkit.completion', 'prompt_toolkit.completion.base', 'prompt_toolkit.completion.filesystem', 'prompt_toolkit.completion.word_completer', 'prompt_toolkit.completion.fuzzy_completer', 'prompt_toolkit.document', 'prompt_toolkit.history', 'prompt_toolkit.search', 'prompt_toolkit.key_binding', 'prompt_toolkit.key_binding.key_bindings', 'prompt_toolkit.keys', 'prompt_toolkit.key_binding.vi_state', 'prompt_toolkit.validation', 'prompt_toolkit.input', 'prompt_toolkit.input.base', 'prompt_toolkit.input.defaults', 'prompt_toolkit.input.typeahead', 'prompt_toolkit.key_binding.bindings', 'prompt_toolkit.key_binding.bindings.page_navigation', 'prompt_toolkit.key_binding.bindings.scroll', 'prompt_toolkit.key_binding.defaults', 'prompt_toolkit.key_binding.bindings.basic', 'prompt_toolkit.key_binding.key_processor', 'prompt_toolkit.key_binding.bindings.named_commands', 'prompt_toolkit.key_binding.bindings.completion', 'prompt_toolkit.key_binding.bindings.emacs', 'prompt_toolkit.key_binding.bindings.vi', 'prompt_toolkit.input.vt100_parser', 'prompt_toolkit.input.ansi_escape_sequences', 'prompt_toolkit.key_binding.digraphs', 'prompt_toolkit.key_binding.bindings.mouse', 'prompt_toolkit.layout', 'prompt_toolkit.layout.containers', 'prompt_toolkit.layout.controls', 'prompt_toolkit.formatted_text', 'prompt_toolkit.formatted_text.base', 'prompt_toolkit.formatted_text.html', 'xml', 'xml.dom', 'xml.dom.domreg', 'xml.dom.minidom', 'xml.dom.minicompat', 'xml.dom.xmlbuilder', 'xml.dom.NodeFilter', 'prompt_toolkit.formatted_text.ansi', 'prompt_toolkit.output', 'prompt_toolkit.output.base', 'prompt_toolkit.layout.screen', 'prompt_toolkit.output.defaults', 'prompt_toolkit.output.color_depth', 'prompt_toolkit.output.vt100', 'prompt_toolkit.styles', 'prompt_toolkit.styles.base', 'prompt_toolkit.styles.defaults', 'prompt_toolkit.styles.style', 'prompt_toolkit.styles.named_colors', 'prompt_toolkit.styles.pygments', 'prompt_toolkit.styles.style_transformation', 'colorsys', 'array', 'prompt_toolkit.formatted_text.pygments', 'prompt_toolkit.formatted_text.utils', 'prompt_toolkit.lexers', 'prompt_toolkit.lexers.base', 'prompt_toolkit.lexers.pygments', 'prompt_toolkit.mouse_events', 'prompt_toolkit.layout.processors', 'prompt_toolkit.layout.utils', 'prompt_toolkit.layout.dimension', 'prompt_toolkit.layout.margins', 'prompt_toolkit.layout.layout', 'prompt_toolkit.layout.menus', 'prompt_toolkit.renderer', 'prompt_toolkit.layout.mouse_handlers', 'prompt_toolkit.key_binding.bindings.cpr', 'prompt_toolkit.key_binding.emacs_state', 'prompt_toolkit.layout.dummy', 'prompt_toolkit.application.dummy', 'prompt_toolkit.shortcuts', 'prompt_toolkit.shortcuts.dialogs', 'prompt_toolkit.key_binding.bindings.focus', 'prompt_toolkit.widgets', 'prompt_toolkit.widgets.base', 'prompt_toolkit.widgets.toolbars', 'prompt_toolkit.widgets.dialogs', 'prompt_toolkit.widgets.menus', 'prompt_toolkit.shortcuts.prompt', 'prompt_toolkit.key_binding.bindings.auto_suggest', 'prompt_toolkit.key_binding.bindings.open_in_editor', 'prompt_toolkit.shortcuts.utils', 'prompt_toolkit.shortcuts.progress_bar', 'prompt_toolkit.shortcuts.progress_bar.base', 'prompt_toolkit.shortcuts.progress_bar.formatters', 'prompt_toolkit.patch_stdout', 'pygments.style', 'IPython.terminal.debugger', 'IPython.core.completer', 'unicodedata', 'IPython.core.latex_symbols', 'IPython.utils.generics', 'jedi', 'jedi.api', 'parso', 'parso.parser', 'parso.tree', 'parso._compatibility', 'parso.utils', 'parso.pgen2', 'parso.pgen2.generator', 'parso.pgen2.grammar_parser', 'parso.python', 'parso.python.tokenize', 'parso.python.token', 'parso.grammar', 'parso.python.diff', 'difflib', 'parso.python.parser', 'parso.python.tree', 'parso.python.prefix', 'parso.cache', 'gc', 'parso.python.errors', 'parso.normalizer', 'parso.python.pep8', 'parso.file_io', 'jedi._compatibility', 'jedi.parser_utils', 'jedi.debug', 'colorama', 'colorama.initialise', 'colorama.ansitowin32', 'colorama.ansi', 'colorama.winterm', 'colorama.win32', 'ctypes', '_ctypes', 'ctypes._endian', 'jedi.settings', 'jedi.cache', 'jedi.api.classes', 'jedi.evaluate', 'jedi.evaluate.utils', 'jedi.evaluate.imports', 'jedi.evaluate.sys_path', 'jedi.evaluate.cache', 'jedi.evaluate.base_context', 'jedi.common', 'jedi.common.context', 'jedi.evaluate.helpers', 'jedi.common.utils', 'jedi.evaluate.compiled', 'jedi.evaluate.compiled.context', 'jedi.evaluate.filters', 'jedi.evaluate.flow_analysis', 'jedi.evaluate.recursion', 'jedi.evaluate.lazy_context', 'jedi.evaluate.compiled.access', 'jedi.evaluate.compiled.getattr_static', 'jedi.evaluate.compiled.fake', 'jedi.evaluate.analysis', 'jedi.evaluate.context', 'jedi.evaluate.context.module', 'jedi.evaluate.context.klass', 'jedi.evaluate.context.function', 'jedi.evaluate.docstrings', 'jedi.evaluate.pep0484', 'jedi.evaluate.arguments', 'jedi.evaluate.context.iterable', 'jedi.evaluate.param', 'jedi.evaluate.context.asynchronous', 'jedi.evaluate.parser_cache', 'jedi.evaluate.context.instance', 'jedi.evaluate.syntax_tree', 'jedi.evaluate.finder', 'jedi.api.keywords', 'pydoc_data', 'pydoc_data.topics', 'jedi.api.interpreter', 'jedi.evaluate.compiled.mixed', 'jedi.api.helpers', 'jedi.api.completion', 'jedi.api.environment', 'filecmp', 'jedi.evaluate.compiled.subprocess', 'jedi.evaluate.compiled.subprocess.functions', 'jedi.api.exceptions', 'jedi.api.project', 'jedi.evaluate.usages', 'IPython.terminal.ptutils', 'IPython.terminal.shortcuts', 'IPython.terminal.magics', 'IPython.lib.clipboard', 'IPython.terminal.pt_inputhooks', 'IPython.terminal.prompts', 'IPython.terminal.ipapp', 'IPython.core.magics', 'IPython.core.magics.auto', 'IPython.core.magics.basic', 'IPython.core.magics.code', 'urllib.request', 'email', 'http', 'http.client', 'email.parser', 'email.feedparser', 'email.errors', 'email._policybase', 'email.header', 'email.quoprimime', 'email.base64mime', 'email.charset', 'email.encoders', 'quopri', 'email.utils', 'email._parseaddr', 'calendar', 'email.message', 'uu', 'email._encoded_words', 'email.iterators', 'urllib.error', 'urllib.response', 'IPython.core.magics.config', 'IPython.core.magics.display', 'IPython.core.magics.execution', 'timeit', 'cProfile', '_lsprof', 'profile', 'pstats', 'IPython.utils.module_paths', 'IPython.utils.timing', 'IPython.core.magics.extension', 'IPython.core.magics.history', 'IPython.core.magics.logging', 'IPython.core.magics.namespace', 'IPython.core.magics.osm', 'IPython.core.magics.packaging', 'IPython.core.magics.pylab', 'IPython.core.pylabtools', 'IPython.core.magics.script', 'IPython.lib.backgroundjobs', 'IPython.core.shellapp', 'IPython.extensions', 'IPython.extensions.storemagic', 'IPython.utils.frame', 'jupyter_client', 'jupyter_client._version', 'jupyter_client.connect', 'zmq', 'zmq.backend', 'zmq.backend.select', 'zmq.backend.cython', 'zmq.backend.cython.constants', 'cython_runtime', 'zmq.backend.cython.error', '_cython_0_29_5', 'zmq.backend.cython.message', 'zmq.error', 'zmq.backend.cython.context', 'zmq.backend.cython.socket', 'zmq.backend.cython.utils', 'zmq.backend.cython._poll', 'zmq.backend.cython._version', 'zmq.backend.cython._device', 'zmq.backend.cython._proxy_steerable', 'zmq.sugar', 'zmq.sugar.constants', 'zmq.utils', 'zmq.utils.constant_names', 'zmq.sugar.context', 'zmq.sugar.attrsettr', 'zmq.sugar.socket', 'zmq.sugar.poll', 'zmq.utils.jsonapi', 'zmq.utils.strtypes', 'zmq.sugar.frame', 'zmq.sugar.tracker', 'zmq.sugar.version', 'zmq.sugar.stopwatch', 'jupyter_client.localinterfaces', 'jupyter_core', 'jupyter_core.version', 'jupyter_core.paths', 'jupyter_client.launcher', 'traitlets.log', 'jupyter_client.client', 'jupyter_client.channels', 'jupyter_client.channelsabc', 'jupyter_client.clientabc', 'jupyter_client.manager', 'jupyter_client.kernelspec', 'jupyter_client.managerabc', 'jupyter_client.blocking', 'jupyter_client.blocking.client', 'jupyter_client.blocking.channels', 'jupyter_client.multikernelmanager', 'uuid', 'ipykernel.kernelapp', 'tornado', 'tornado.ioloop', 'numbers', 'tornado.concurrent', 'tornado.log', 'logging.handlers', 'tornado.escape', 'tornado.util', 'tornado.speedups', 'curses', '_curses', 'zmq.eventloop', 'zmq.eventloop.ioloop', 'tornado.platform', 'tornado.platform.asyncio', 'tornado.gen', 'zmq.eventloop.zmqstream', 'ipykernel.iostream', 'imp', 'jupyter_client.session', 'hmac', 'jupyter_client.jsonutil', 'dateutil', 'dateutil._version', 'dateutil.parser', 'dateutil.parser._parser', 'decimal', '_decimal', 'dateutil.relativedelta', 'dateutil._common', 'dateutil.tz', 'dateutil.tz.tz', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.parser.isoparser', '_strptime', 'jupyter_client.adapter', 'ipykernel.heartbeat', 'ipykernel.ipkernel', 'IPython.utils.tokenutil', 'ipykernel.comm', 'ipykernel.comm.manager', 'ipykernel.comm.comm', 'ipykernel.kernelbase', 'tornado.queues', 'tornado.locks', 'ipykernel.jsonutil', 'ipykernel.zmqshell', 'IPython.core.payloadpage', 'ipykernel.displayhook', 'ipykernel.parentpoller', 'encodings.idna', 'stringprep', 'faulthandler', 'ipykernel.datapub', 'ipykernel.serialize', 'ipykernel.pickleutil', 'ipykernel.codeutil', 'IPython.core.completerlib', 'storemagic', 'ipywidgets', 'ipywidgets._version', 'ipywidgets.widgets', 'ipywidgets.widgets.widget', 'ipywidgets.widgets.domwidget', 'ipywidgets.widgets.trait_types', 'ipywidgets.widgets.util', 'ipywidgets.widgets.widget_layout', 'ipywidgets.widgets.widget_style', 'ipywidgets.widgets.valuewidget', 'ipywidgets.widgets.widget_core', 'ipywidgets.widgets.widget_bool', 'ipywidgets.widgets.widget_description', 'ipywidgets.widgets.widget_button', 'ipywidgets.widgets.widget_box', 'ipywidgets.widgets.docutils', 'ipywidgets.widgets.widget_float', 'ipywidgets.widgets.widget_int', 'ipywidgets.widgets.widget_color', 'ipywidgets.widgets.widget_date', 'ipywidgets.widgets.widget_output', 'ipywidgets.widgets.widget_selection', 'ipywidgets.widgets.widget_selectioncontainer', 'ipywidgets.widgets.widget_string', 'ipywidgets.widgets.widget_controller', 'ipywidgets.widgets.interaction', 'ipywidgets.widgets.widget_link', 'ipywidgets.widgets.widget_media', 'ipywidgets.widgets.widget_templates', 'ipywidgets.widgets.widget_upload', 'jupyter_require', 'daiquiri', 'logging.config', 'socketserver', 'daiquiri.output', 'syslog', 'daiquiri.formatter', 'pythonjsonlogger', 'pythonjsonlogger.jsonlogger', 'daiquiri.handlers', 'jupyter_require.__about__', 'jupyter_require.notebook', 'csscompressor', 'jupyter_require.core', 'jupyter_require.magic', 'jupyter_nbutils', 'jupyter_nbutils.__about__', 'jupyter_nbutils.config', 'jupyter_nbutils.utils', 'matplotlib', 'distutils', 'distutils.version', 'matplotlib.cbook', 'gzip', 'numpy', 'numpy._globals', 'numpy.__config__', 'numpy.version', 'numpy._distributor_init', 'numpy.core', 'numpy.core.multiarray', 'numpy.core.overrides', 'numpy.core._multiarray_umath', 'numpy.compat', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.core.umath', 'numpy.core.numerictypes', 'numpy.core._string_helpers', 'numpy.core._type_aliases', 'numpy.core._dtype', 'numpy.core.numeric', 'numpy.core.shape_base', 'numpy.core._asarray', 'numpy.core.fromnumeric', 'numpy.core._methods', 'numpy.core._exceptions', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._add_newdocs', 'numpy.core._multiarray_tests', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'numpy._pytesttester', 'numpy.lib', 'numpy.lib.mixins', 'numpy.lib.scimath', 'numpy.lib.type_check', 'numpy.lib.ufunclike', 'numpy.lib.index_tricks', 'numpy.matrixlib', 'numpy.matrixlib.defmatrix', 'numpy.linalg', 'numpy.linalg.linalg', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.lib.function_base', 'numpy.lib.histograms', 'numpy.lib.stride_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.npyio', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.financial', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.fft', 'numpy.fft._pocketfft', 'numpy.fft._pocketfft_internal', 'numpy.fft.helper', 'numpy.polynomial', 'numpy.polynomial.polynomial', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.random', 'numpy.random._pickle', 'numpy.random.mtrand', 'numpy.random._bit_generator', '_cython_0_29_16', 'numpy.random._common', 'secrets', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.ctypeslib', 'numpy.ma', 'numpy.ma.core', 'numpy.ma.extras', 'matplotlib.cbook.deprecation', 'matplotlib.rcsetup', 'matplotlib.fontconfig_pattern', 'pyparsing', 'matplotlib.colors', 'matplotlib.docstring', 'matplotlib._color_data', 'cycler', 'matplotlib._version', 'matplotlib.ft2font', 'kiwisolver']
2020-10-12 08:57:23,764 [28883] DEBUG    matplotlib:278: [JupyterRequire] CACHEDIR=/home/wfct0p/.cache/matplotlib
2020-10-12 08:57:23,818 [28883] DEBUG    matplotlib.font_manager:1348: [JupyterRequire] Using fontManager instance from /home/wfct0p/.cache/matplotlib/fontlist-v310.json
2020-10-12 08:57:26,078 [28883] DEBUG    matplotlib.pyplot:225: [JupyterRequire] Loaded backend module://ipykernel.pylab.backend_inline version unknown.
2020-10-12 08:57:26,083 [28883] DEBUG    matplotlib.pyplot:225: [JupyterRequire] Loaded backend module://ipykernel.pylab.backend_inline version unknown.
2020-10-12 08:57:26,142 [28883] DEBUG    matplotlib.pyplot:225: [JupyterRequire] Loaded backend module://ipykernel.pylab.backend_inline version unknown.
2020-10-12 08:57:26,687 [28883] DEBUG    shapely.geos:73: [JupyterRequire] Found GEOS DLL: <CDLL '/home/wfct0p/.local/lib/python3.7/site-packages/shapely/.libs/libgeos_c-5031f9ac.so.1.13.1', handle 562ff5e034c0 at 0x7ff551be75c0>, using it.
2020-10-12 08:57:26,750 [28883] DEBUG    shapely.geos:38: [JupyterRequire] Trying `CDLL(libc.so.6)`
2020-10-12 08:57:26,751 [28883] DEBUG    shapely.geos:55: [JupyterRequire] Library path: 'libc.so.6'
2020-10-12 08:57:26,753 [28883] DEBUG    shapely.geos:56: [JupyterRequire] DLL: <CDLL 'libc.so.6', handle 7ff5549c84f0 at 0x7ff551c332e8>
2020-10-12 08:57:37,407 [28883] DEBUG    Fiona:143: [JupyterRequire] Set GDAL_DATA = '/opt/conda/share/gdal'
2020-10-12 08:57:37,409 [28883] DEBUG    Fiona:143: [JupyterRequire] Set PROJ_LIB = '/opt/conda/share/proj'
2020-10-12 08:57:37,485 [28883] DEBUG    fiona:287: [JupyterRequire] Creating a not-responsible GDALEnv in drivers()
2020-10-12 08:57:37,487 [28883] DEBUG    Fiona:75: [JupyterRequire] GDAL_DATA: /opt/conda/share/gdal
2020-10-12 08:57:37,489 [28883] DEBUG    Fiona:75: [JupyterRequire] PROJ_LIB: /opt/conda/share/proj
2020-10-12 08:57:37,491 [28883] DEBUG    Fiona:145: [JupyterRequire] GDAL_DATA: /opt/conda/share/gdal
2020-10-12 08:57:37,493 [28883] DEBUG    Fiona:145: [JupyterRequire] PROJ_LIB: /opt/conda/share/proj
2020-10-12 08:57:37,495 [28883] DEBUG    Fiona:153: [JupyterRequire] Userencoding: 'utf8'
2020-10-12 08:57:37,497 [28883] DEBUG    Fiona:153: [JupyterRequire] ENCODING open option set to b'UTF8'
2020-10-12 08:57:37,596 [28883] DEBUG    Fiona:203: [JupyterRequire] Got coordinate system
2020-10-12 08:57:37,599 [28883] DEBUG    Fiona:210: [JupyterRequire] Got coordinate system
2020-10-12 08:57:37,616 [28883] DEBUG    Fiona:247: [JupyterRequire] Index: 0
2020-10-12 08:57:37,667 [28883] DEBUG    fiona.collection:404: [JupyterRequire] Flushed buffer
2020-10-12 08:57:37,670 [28883] DEBUG    fiona.collection:406: [JupyterRequire] Stopped session
2020-10-12 08:57:41,333 [28883] DEBUG    fiona:287: [JupyterRequire] Creating a not-responsible GDALEnv in drivers()
2020-10-12 08:57:41,337 [28883] DEBUG    Fiona:75: [JupyterRequire] GDAL_DATA: /opt/conda/share/gdal
2020-10-12 08:57:41,338 [28883] DEBUG    Fiona:75: [JupyterRequire] PROJ_LIB: /opt/conda/share/proj
2020-10-12 08:57:41,342 [28883] DEBUG    Fiona:145: [JupyterRequire] GDAL_DATA: /opt/conda/share/gdal
2020-10-12 08:57:41,344 [28883] DEBUG    Fiona:145: [JupyterRequire] PROJ_LIB: /opt/conda/share/proj
2020-10-12 08:57:41,346 [28883] DEBUG    Fiona:153: [JupyterRequire] Userencoding: None
2020-10-12 08:57:41,350 [28883] DEBUG    Fiona:203: [JupyterRequire] Got coordinate system
2020-10-12 08:57:41,352 [28883] DEBUG    Fiona:210: [JupyterRequire] Got coordinate system
2020-10-12 08:57:41,354 [28883] DEBUG    Fiona:247: [JupyterRequire] Index: 0
2020-10-12 08:57:42,003 [28883] DEBUG    fiona.collection:404: [JupyterRequire] Flushed buffer
2020-10-12 08:57:42,006 [28883] DEBUG    fiona.collection:406: [JupyterRequire] Stopped session
2020-10-12 08:57:42,807 [28883] DEBUG    matplotlib.font_manager:1246: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2020-10-12 08:57:42,810 [28883] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
2020-10-12 08:57:42,812 [28883] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
2020-10-12 08:57:42,814 [28883] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
2020-10-12 08:57:42,815 [28883] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-12 08:57:42,817 [28883] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
2020-10-12 08:57:42,818 [28883] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
2020-10-12 08:57:42,820 [28883] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2020-10-12 08:57:42,822 [28883] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
2020-10-12 08:57:42,824 [28883] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-10-12 08:57:42,826 [28883] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2020-10-12 08:57:42,827 [28883] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2020-10-12 08:57:42,829 [28883] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
2020-10-12 08:57:42,830 [28883] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 0.33499999999999996
2020-10-12 08:57:42,832 [28883] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2020-10-12 08:57:42,834 [28883] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
2020-10-12 08:57:42,835 [28883] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2020-10-12 08:57:42,837 [28883] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
2020-10-12 08:57:42,839 [28883] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2020-10-12 08:57:42,841 [28883] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-10-12 08:57:42,842 [28883] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-12 08:57:42,844 [28883] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-12 08:57:42,846 [28883] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2020-10-12 08:57:42,847 [28883] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
2020-10-12 08:57:42,849 [28883] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2020-10-12 08:57:42,850 [28883] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2020-10-12 08:57:42,852 [28883] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
2020-10-12 08:57:42,854 [28883] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2020-10-12 08:57:42,856 [28883] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
2020-10-12 08:57:42,857 [28883] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
2020-10-12 08:57:42,859 [28883] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2020-10-12 08:57:42,860 [28883] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-12 08:57:42,862 [28883] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2020-10-12 08:57:42,864 [28883] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2020-10-12 08:57:42,866 [28883] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2020-10-12 08:57:42,868 [28883] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
2020-10-12 08:57:42,869 [28883] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 1.335
2020-10-12 08:57:42,871 [28883] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
2020-10-12 08:57:42,873 [28883] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2020-10-12 08:57:42,874 [28883] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-Heavy.ttf) normal normal heavy normal>) = 10.43
2020-10-12 08:57:42,876 [28883] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-12 08:57:42,878 [28883] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-BlackItalic.ttf) italic normal black normal>) = 11.525
2020-10-12 08:57:42,880 [28883] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'GFS Baskerville' (GFSBaskerville.otf) normal normal regular normal>) = 10.05
2020-10-12 08:57:42,881 [28883] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-BoldItalic.ttf) italic normal bold condensed>) = 11.535
2020-10-12 08:57:42,883 [28883] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-BoldOblique.ttf) oblique normal bold condensed>) = 1.535
2020-10-12 08:57:42,885 [28883] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-ExtraLight.ttf) normal normal light normal>) = 0.24
2020-10-12 08:57:42,886 [28883] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-SemiboldItalic.ttf) italic normal semibold normal>) = 11.24
2020-10-12 08:57:42,888 [28883] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed.ttf) normal normal 400 condensed>) = 10.25
2020-10-12 08:57:42,890 [28883] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-Thin.ttf) normal normal 400 normal>) = 10.05
2020-10-12 08:57:42,891 [28883] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-HairlineItalic.ttf) italic normal 400 normal>) = 11.05
2020-10-12 08:57:42,893 [28883] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-Italic.ttf) italic normal 400 condensed>) = 11.25
2020-10-12 08:57:42,895 [28883] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-12 08:57:42,896 [28883] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-Light.ttf) normal normal light normal>) = 10.24
2020-10-12 08:57:42,898 [28883] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-LightItalic.ttf) italic normal light normal>) = 11.24
2020-10-12 08:57:42,900 [28883] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-Bold.ttf) normal normal bold condensed>) = 10.535
2020-10-12 08:57:42,903 [28883] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-Black.ttf) normal normal black normal>) = 10.525
2020-10-12 08:57:42,904 [28883] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-Semibold.ttf) normal normal semibold normal>) = 10.24
2020-10-12 08:57:42,906 [28883] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-Medium.ttf) normal normal medium normal>) = 10.145
2020-10-12 08:57:42,908 [28883] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-Oblique.ttf) oblique normal 400 condensed>) = 1.25
2020-10-12 08:57:42,909 [28883] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-Hairline.ttf) normal normal 400 normal>) = 10.05
2020-10-12 08:57:42,911 [28883] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-12 08:57:42,913 [28883] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
2020-10-12 08:57:42,915 [28883] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed.ttf) normal normal 400 condensed>) = 0.25
2020-10-12 08:57:42,916 [28883] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-12 08:57:42,918 [28883] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-HeavyItalic.ttf) italic normal heavy normal>) = 11.43
2020-10-12 08:57:42,920 [28883] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-MediumItalic.ttf) italic normal medium normal>) = 11.145
2020-10-12 08:57:42,921 [28883] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-ThinItalic.ttf) italic normal 400 normal>) = 11.05
2020-10-12 08:57:42,923 [28883] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-12 08:57:42,924 [28883] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Math TeX Gyre' (DejaVuMathTeXGyre.ttf) normal normal regular normal>) = 10.05
2020-10-12 08:57:42,926 [28883] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-Bold.ttf) normal normal bold condensed>) = 0.5349999999999999
2020-10-12 08:57:42,928 [28883] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'GFS Porson' (GFSPorson.otf) normal normal 400 normal>) = 10.05
2020-10-12 08:57:42,929 [28883] DEBUG    matplotlib.font_manager:1281: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('/home/wfct0p/.local/lib/python3.7/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
2020-10-12 08:57:43,603 [28883] WARNING  py.warnings:99: [JupyterRequire] /home/wfct0p/.local/lib/python3.7/site-packages/pyproj/crs/crs.py:53: FutureWarning: '+init=<authority>:<code>' syntax is deprecated. '<authority>:<code>' is the preferred initialization method. When making the change, be mindful of axis order changes: https://pyproj4.github.io/pyproj/stable/gotchas.html#axis-order-changes-in-proj-6
  return _prepare_from_string(" ".join(pjargs))

2020-10-12 08:57:46,727 [28883] WARNING  py.warnings:99: [JupyterRequire] /home/wfct0p/.local/lib/python3.7/site-packages/pyproj/crs/crs.py:53: FutureWarning: '+init=<authority>:<code>' syntax is deprecated. '<authority>:<code>' is the preferred initialization method. When making the change, be mindful of axis order changes: https://pyproj4.github.io/pyproj/stable/gotchas.html#axis-order-changes-in-proj-6
  return _prepare_from_string(" ".join(pjargs))

2020-10-12 09:05:50,527 [28883] DEBUG    parso.cache:126: [JupyterRequire] pickle loaded: /opt/conda/lib/python3.7/site-packages/geopandas/geodataframe.py
2020-10-12 11:32:45,493 [28883] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2020-10-12 11:32:45,494 [28883] DEBUG    root:93: [JupyterRequire] Initializing comms.
2020-10-12 11:32:45,516 [28883] INFO     root:247: [JupyterRequire] Initializing comms.
2020-10-12 11:32:45,523 [28883] DEBUG    root:197: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2020-10-12 11:32:45,525 [28883] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2020-10-12 11:32:45,527 [28883] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2020-10-12 11:32:45,763 [28998] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2020-10-12 11:32:45,763 [28998] DEBUG    root:93: [JupyterRequire] Initializing comms.
2020-10-12 11:32:45,765 [28998] INFO     root:247: [JupyterRequire] Initializing comms.
2020-10-12 11:32:45,771 [28998] DEBUG    root:197: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2020-10-12 11:32:45,796 [28998] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2020-10-12 11:32:45,798 [28998] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2020-10-12 11:32:46,317 [28998] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2020-10-12 11:32:46,317 [28998] DEBUG    root:93: [JupyterRequire] Initializing comms.
2020-10-12 11:32:46,320 [28998] INFO     root:247: [JupyterRequire] Initializing comms.
2020-10-12 11:32:46,325 [28998] DEBUG    root:197: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2020-10-12 11:32:46,327 [28998] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2020-10-12 11:32:46,329 [28998] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2020-10-12 12:10:38,294 [28883] DEBUG    parso.python.diff:213: [JupyterRequire] diff parser start
2020-10-12 12:10:38,295 [28883] DEBUG    parso.python.diff:224: [JupyterRequire] line_lengths old: 1; new: 2
2020-10-12 12:10:38,297 [28883] DEBUG    parso.python.diff:228: [JupyterRequire] -> code[replace] old[1:1] new[1:2]
2020-10-12 12:10:38,301 [28883] DEBUG    parso.python.diff:341: [JupyterRequire] parse_part from 1 to 2 (to 1 in part parser)
2020-10-12 12:10:38,303 [28883] DEBUG    parso.python.diff:264: [JupyterRequire] diff parser end
2020-10-12 12:10:42,837 [28883] DEBUG    parso.python.diff:213: [JupyterRequire] diff parser start
2020-10-12 12:10:42,839 [28883] DEBUG    parso.python.diff:224: [JupyterRequire] line_lengths old: 2; new: 2
2020-10-12 12:10:42,840 [28883] DEBUG    parso.python.diff:228: [JupyterRequire] -> code[equal] old[1:1] new[1:1]
2020-10-12 12:10:42,843 [28883] DEBUG    parso.python.diff:341: [JupyterRequire] parse_part from 1 to 1 (to 1 in part parser)
2020-10-12 12:10:42,845 [28883] DEBUG    parso.python.diff:228: [JupyterRequire] -> code[replace] old[2:2] new[2:2]
2020-10-12 12:10:42,847 [28883] DEBUG    parso.python.diff:341: [JupyterRequire] parse_part from 2 to 2 (to 1 in part parser)
2020-10-12 12:10:42,849 [28883] DEBUG    parso.python.diff:264: [JupyterRequire] diff parser end
2020-10-12 12:10:47,204 [28883] DEBUG    parso.python.diff:213: [JupyterRequire] diff parser start
2020-10-12 12:10:47,206 [28883] DEBUG    parso.python.diff:224: [JupyterRequire] line_lengths old: 2; new: 2
2020-10-12 12:10:47,208 [28883] DEBUG    parso.python.diff:228: [JupyterRequire] -> code[equal] old[1:1] new[1:1]
2020-10-12 12:10:47,210 [28883] DEBUG    parso.python.diff:341: [JupyterRequire] parse_part from 1 to 1 (to 1 in part parser)
2020-10-12 12:10:47,212 [28883] DEBUG    parso.python.diff:228: [JupyterRequire] -> code[replace] old[2:2] new[2:2]
2020-10-12 12:10:47,214 [28883] DEBUG    parso.python.diff:341: [JupyterRequire] parse_part from 2 to 2 (to 1 in part parser)
2020-10-12 12:10:47,215 [28883] DEBUG    parso.python.diff:264: [JupyterRequire] diff parser end
2020-10-12 12:10:47,467 [28883] DEBUG    parso.cache:126: [JupyterRequire] pickle loaded: /opt/conda/lib/python3.7/site-packages/ipywidgets/__init__.py
2020-10-12 12:10:50,273 [28883] DEBUG    parso.python.diff:213: [JupyterRequire] diff parser start
2020-10-12 12:10:50,275 [28883] DEBUG    parso.python.diff:224: [JupyterRequire] line_lengths old: 2; new: 2
2020-10-12 12:10:50,277 [28883] DEBUG    parso.python.diff:228: [JupyterRequire] -> code[equal] old[1:1] new[1:1]
2020-10-12 12:10:50,279 [28883] DEBUG    parso.python.diff:341: [JupyterRequire] parse_part from 1 to 1 (to 1 in part parser)
2020-10-12 12:10:50,281 [28883] DEBUG    parso.python.diff:228: [JupyterRequire] -> code[replace] old[2:2] new[2:2]
2020-10-12 12:10:50,283 [28883] DEBUG    parso.python.diff:341: [JupyterRequire] parse_part from 2 to 2 (to 1 in part parser)
2020-10-12 12:10:50,284 [28883] DEBUG    parso.python.diff:264: [JupyterRequire] diff parser end
2020-10-12 12:10:52,345 [28883] DEBUG    parso.python.diff:213: [JupyterRequire] diff parser start
2020-10-12 12:10:52,347 [28883] DEBUG    parso.python.diff:224: [JupyterRequire] line_lengths old: 2; new: 2
2020-10-12 12:10:52,348 [28883] DEBUG    parso.python.diff:228: [JupyterRequire] -> code[equal] old[1:1] new[1:1]
2020-10-12 12:10:52,351 [28883] DEBUG    parso.python.diff:341: [JupyterRequire] parse_part from 1 to 1 (to 1 in part parser)
2020-10-12 12:10:52,353 [28883] DEBUG    parso.python.diff:228: [JupyterRequire] -> code[replace] old[2:2] new[2:2]
2020-10-12 12:10:52,355 [28883] DEBUG    parso.python.diff:341: [JupyterRequire] parse_part from 2 to 2 (to 1 in part parser)
2020-10-12 12:10:52,356 [28883] DEBUG    parso.python.diff:264: [JupyterRequire] diff parser end
2020-10-12 12:10:52,540 [28883] DEBUG    parso.cache:126: [JupyterRequire] pickle loaded: /opt/conda/lib/python3.7/site-packages/ipywidgets/widgets/__init__.py
2020-10-12 12:11:01,640 [28883] DEBUG    parso.python.diff:213: [JupyterRequire] diff parser start
2020-10-12 12:11:01,643 [28883] DEBUG    parso.python.diff:224: [JupyterRequire] line_lengths old: 2; new: 2
2020-10-12 12:11:01,645 [28883] DEBUG    parso.python.diff:228: [JupyterRequire] -> code[equal] old[1:1] new[1:1]
2020-10-12 12:11:01,648 [28883] DEBUG    parso.python.diff:341: [JupyterRequire] parse_part from 1 to 1 (to 1 in part parser)
2020-10-12 12:11:01,650 [28883] DEBUG    parso.python.diff:228: [JupyterRequire] -> code[replace] old[2:2] new[2:2]
2020-10-12 12:11:01,652 [28883] DEBUG    parso.python.diff:341: [JupyterRequire] parse_part from 2 to 2 (to 1 in part parser)
2020-10-12 12:11:01,654 [28883] DEBUG    parso.python.diff:264: [JupyterRequire] diff parser end
2020-10-12 12:11:01,712 [28883] DEBUG    parso.cache:126: [JupyterRequire] pickle loaded: /opt/conda/lib/python3.7/site-packages/ipywidgets/widgets/widget_box.py
2020-10-12 12:11:01,736 [28883] DEBUG    parso.cache:126: [JupyterRequire] pickle loaded: /opt/conda/lib/python3.7/site-packages/ipywidgets/widgets/docutils.py
2020-10-12 12:11:02,815 [28883] DEBUG    parso.cache:126: [JupyterRequire] pickle loaded: /opt/conda/lib/python3.7/site-packages/ipywidgets/widgets/widget.py
2020-10-12 12:11:02,875 [28883] DEBUG    parso.cache:126: [JupyterRequire] pickle loaded: /opt/conda/lib/python3.7/site-packages/ipython_genutils/__init__.py
2020-10-12 12:11:02,888 [28883] DEBUG    parso.cache:126: [JupyterRequire] pickle loaded: /opt/conda/lib/python3.7/site-packages/ipython_genutils/py3compat.py
2020-10-12 12:11:05,177 [28883] DEBUG    matplotlib.pyplot:225: [JupyterRequire] Loaded backend module://ipykernel.pylab.backend_inline version unknown.
2020-10-12 12:11:05,206 [28883] WARNING  py.warnings:99: [JupyterRequire] /opt/conda/lib/python3.7/site-packages/IPython/core/magics/pylab.py:160: UserWarning: pylab import has clobbered these variables: ['Polygon', 'floating', 'square']
`%matplotlib` prevents importing * from pylab and numpy
  "\n`%matplotlib` prevents importing * from pylab and numpy"

2020-10-12 13:02:42,160 [28883] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2020-10-12 13:02:42,160 [28883] DEBUG    root:93: [JupyterRequire] Initializing comms.
2020-10-12 13:02:42,186 [28883] INFO     root:247: [JupyterRequire] Initializing comms.
2020-10-12 13:02:42,193 [28883] DEBUG    root:197: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2020-10-12 13:02:42,195 [28883] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2020-10-12 13:02:42,197 [28883] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2020-10-12 13:02:42,249 [28998] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2020-10-12 13:02:42,249 [28998] DEBUG    root:93: [JupyterRequire] Initializing comms.
2020-10-12 13:02:42,252 [28998] INFO     root:247: [JupyterRequire] Initializing comms.
2020-10-12 13:02:42,260 [28998] DEBUG    root:197: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2020-10-12 13:02:42,262 [28998] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2020-10-12 13:02:42,265 [28998] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2020-10-12 13:18:33,484 [28883] WARNING  py.warnings:99: [JupyterRequire] /home/wfct0p/.local/lib/python3.7/site-packages/pyproj/crs/crs.py:53: FutureWarning: '+init=<authority>:<code>' syntax is deprecated. '<authority>:<code>' is the preferred initialization method. When making the change, be mindful of axis order changes: https://pyproj4.github.io/pyproj/stable/gotchas.html#axis-order-changes-in-proj-6
  return _prepare_from_string(" ".join(pjargs))

2020-10-12 13:33:50,050 [28883] DEBUG    parso.python.diff:213: [JupyterRequire] diff parser start
2020-10-12 13:33:50,051 [28883] DEBUG    parso.python.diff:224: [JupyterRequire] line_lengths old: 2; new: 1
2020-10-12 13:33:50,053 [28883] DEBUG    parso.python.diff:228: [JupyterRequire] -> code[replace] old[1:2] new[1:1]
2020-10-12 13:33:50,056 [28883] DEBUG    parso.python.diff:341: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2020-10-12 13:33:50,058 [28883] DEBUG    parso.python.diff:264: [JupyterRequire] diff parser end
2020-10-12 13:33:50,230 [28883] DEBUG    parso.cache:126: [JupyterRequire] pickle loaded: /opt/conda/lib/python3.7/site-packages/pandas/core/series.py
2020-10-12 13:33:50,450 [28883] DEBUG    parso.cache:126: [JupyterRequire] pickle loaded: /opt/conda/lib/python3.7/site-packages/pandas/core/generic.py
2020-10-12 13:33:50,593 [28883] DEBUG    parso.cache:126: [JupyterRequire] pickle loaded: /opt/conda/lib/python3.7/site-packages/pandas/core/ops/__init__.py
2020-10-12 13:33:52,485 [28883] DEBUG    parso.python.diff:213: [JupyterRequire] diff parser start
2020-10-12 13:33:52,488 [28883] DEBUG    parso.python.diff:224: [JupyterRequire] line_lengths old: 1; new: 1
2020-10-12 13:33:52,490 [28883] DEBUG    parso.python.diff:228: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2020-10-12 13:33:52,492 [28883] DEBUG    parso.python.diff:341: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2020-10-12 13:33:52,494 [28883] DEBUG    parso.python.diff:264: [JupyterRequire] diff parser end
2020-10-12 13:33:52,685 [28883] DEBUG    parso.cache:126: [JupyterRequire] pickle loaded: /opt/conda/lib/python3.7/site-packages/pandas/core/accessor.py
2020-10-12 13:33:52,776 [28883] DEBUG    parso.cache:126: [JupyterRequire] pickle loaded: /opt/conda/lib/python3.7/site-packages/pandas/core/ops/methods.py
2020-10-12 13:33:52,851 [28883] DEBUG    parso.cache:126: [JupyterRequire] pickle loaded: /opt/conda/lib/python3.7/site-packages/pandas/core/base.py
2020-10-12 13:33:52,925 [28883] DEBUG    parso.cache:126: [JupyterRequire] pickle loaded: /opt/conda/lib/python3.7/site-packages/pandas/core/indexes/numeric.py
2020-10-12 13:33:53,298 [28883] DEBUG    parso.cache:126: [JupyterRequire] pickle loaded: /opt/conda/lib/python3.7/site-packages/pandas/plotting/_core.py
2020-10-12 13:33:53,362 [28883] DEBUG    parso.cache:126: [JupyterRequire] pickle loaded: /opt/conda/lib/python3.7/site-packages/pandas/util/_decorators.py
2020-10-12 13:33:53,453 [28883] DEBUG    parso.cache:126: [JupyterRequire] pickle loaded: /opt/conda/lib/python3.7/site-packages/pandas/core/strings.py
2020-10-12 13:34:28,766 [28883] WARNING  py.warnings:99: [JupyterRequire] /opt/conda/lib/python3.7/site-packages/geopandas/geodataframe.py:546: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  result = super(GeoDataFrame, self).__getitem__(key)

2020-10-12 13:34:28,816 [28883] WARNING  py.warnings:99: [JupyterRequire] /opt/conda/lib/python3.7/site-packages/geopandas/plotting.py:487: UserWarning: The GeoDataFrame you are attempting to plot is empty. Nothing has been displayed.
  UserWarning,

2020-10-12 13:35:01,892 [28883] DEBUG    parso.python.diff:213: [JupyterRequire] diff parser start
2020-10-12 13:35:01,893 [28883] DEBUG    parso.python.diff:224: [JupyterRequire] line_lengths old: 1; new: 1
2020-10-12 13:35:01,906 [28883] DEBUG    parso.python.diff:228: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2020-10-12 13:35:01,908 [28883] DEBUG    parso.python.diff:341: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2020-10-12 13:35:01,911 [28883] DEBUG    parso.python.diff:264: [JupyterRequire] diff parser end
2020-10-12 13:35:01,931 [28883] DEBUG    parso.cache:126: [JupyterRequire] pickle loaded: /opt/conda/lib/python3.7/site-packages/geopandas/geoseries.py
2020-10-12 13:35:01,991 [28883] DEBUG    parso.cache:126: [JupyterRequire] pickle loaded: /opt/conda/lib/python3.7/site-packages/geopandas/base.py
2020-10-12 13:35:15,293 [28883] WARNING  py.warnings:99: [JupyterRequire] /opt/conda/lib/python3.7/site-packages/geopandas/geodataframe.py:546: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  result = super(GeoDataFrame, self).__getitem__(key)

2020-10-12 13:35:15,319 [28883] WARNING  py.warnings:99: [JupyterRequire] /opt/conda/lib/python3.7/site-packages/geopandas/plotting.py:487: UserWarning: The GeoDataFrame you are attempting to plot is empty. Nothing has been displayed.
  UserWarning,

2020-10-12 13:38:59,646 [28883] WARNING  py.warnings:99: [JupyterRequire] /home/wfct0p/.local/lib/python3.7/site-packages/pyproj/crs/crs.py:53: FutureWarning: '+init=<authority>:<code>' syntax is deprecated. '<authority>:<code>' is the preferred initialization method. When making the change, be mindful of axis order changes: https://pyproj4.github.io/pyproj/stable/gotchas.html#axis-order-changes-in-proj-6
  return _prepare_from_string(" ".join(pjargs))

2020-10-12 13:45:00,896 [28883] WARNING  py.warnings:99: [JupyterRequire] /home/wfct0p/.local/lib/python3.7/site-packages/pyproj/crs/crs.py:53: FutureWarning: '+init=<authority>:<code>' syntax is deprecated. '<authority>:<code>' is the preferred initialization method. When making the change, be mindful of axis order changes: https://pyproj4.github.io/pyproj/stable/gotchas.html#axis-order-changes-in-proj-6
  return _prepare_from_string(" ".join(pjargs))

2020-10-12 13:45:56,208 [28883] WARNING  py.warnings:99: [JupyterRequire] /home/wfct0p/.local/lib/python3.7/site-packages/pyproj/crs/crs.py:53: FutureWarning: '+init=<authority>:<code>' syntax is deprecated. '<authority>:<code>' is the preferred initialization method. When making the change, be mindful of axis order changes: https://pyproj4.github.io/pyproj/stable/gotchas.html#axis-order-changes-in-proj-6
  return _prepare_from_string(" ".join(pjargs))

2020-10-12 13:46:26,888 [28883] WARNING  py.warnings:99: [JupyterRequire] /home/wfct0p/.local/lib/python3.7/site-packages/pyproj/crs/crs.py:53: FutureWarning: '+init=<authority>:<code>' syntax is deprecated. '<authority>:<code>' is the preferred initialization method. When making the change, be mindful of axis order changes: https://pyproj4.github.io/pyproj/stable/gotchas.html#axis-order-changes-in-proj-6
  return _prepare_from_string(" ".join(pjargs))

2020-10-12 13:46:32,216 [28883] WARNING  py.warnings:99: [JupyterRequire] /home/wfct0p/.local/lib/python3.7/site-packages/pyproj/crs/crs.py:53: FutureWarning: '+init=<authority>:<code>' syntax is deprecated. '<authority>:<code>' is the preferred initialization method. When making the change, be mindful of axis order changes: https://pyproj4.github.io/pyproj/stable/gotchas.html#axis-order-changes-in-proj-6
  return _prepare_from_string(" ".join(pjargs))

2020-10-12 13:46:42,120 [28883] WARNING  py.warnings:99: [JupyterRequire] /home/wfct0p/.local/lib/python3.7/site-packages/pyproj/crs/crs.py:53: FutureWarning: '+init=<authority>:<code>' syntax is deprecated. '<authority>:<code>' is the preferred initialization method. When making the change, be mindful of axis order changes: https://pyproj4.github.io/pyproj/stable/gotchas.html#axis-order-changes-in-proj-6
  return _prepare_from_string(" ".join(pjargs))

2020-10-12 13:47:30,223 [28883] WARNING  py.warnings:99: [JupyterRequire] /home/wfct0p/.local/lib/python3.7/site-packages/pyproj/crs/crs.py:53: FutureWarning: '+init=<authority>:<code>' syntax is deprecated. '<authority>:<code>' is the preferred initialization method. When making the change, be mindful of axis order changes: https://pyproj4.github.io/pyproj/stable/gotchas.html#axis-order-changes-in-proj-6
  return _prepare_from_string(" ".join(pjargs))

2020-10-12 13:47:35,518 [28883] WARNING  py.warnings:99: [JupyterRequire] /home/wfct0p/.local/lib/python3.7/site-packages/pyproj/crs/crs.py:53: FutureWarning: '+init=<authority>:<code>' syntax is deprecated. '<authority>:<code>' is the preferred initialization method. When making the change, be mindful of axis order changes: https://pyproj4.github.io/pyproj/stable/gotchas.html#axis-order-changes-in-proj-6
  return _prepare_from_string(" ".join(pjargs))

2020-10-12 13:49:03,383 [28883] WARNING  py.warnings:99: [JupyterRequire] /home/wfct0p/.local/lib/python3.7/site-packages/pyproj/crs/crs.py:53: FutureWarning: '+init=<authority>:<code>' syntax is deprecated. '<authority>:<code>' is the preferred initialization method. When making the change, be mindful of axis order changes: https://pyproj4.github.io/pyproj/stable/gotchas.html#axis-order-changes-in-proj-6
  return _prepare_from_string(" ".join(pjargs))

2020-10-12 13:54:06,157 [28883] WARNING  py.warnings:99: [JupyterRequire] /opt/conda/lib/python3.7/site-packages/pandas/core/ops/array_ops.py:253: FutureWarning: elementwise comparison failed; returning scalar instead, but in the future will perform elementwise comparison
  res_values = method(rvalues)

2020-10-12 13:54:21,563 [28883] WARNING  py.warnings:99: [JupyterRequire] /home/wfct0p/.local/lib/python3.7/site-packages/pyproj/crs/crs.py:53: FutureWarning: '+init=<authority>:<code>' syntax is deprecated. '<authority>:<code>' is the preferred initialization method. When making the change, be mindful of axis order changes: https://pyproj4.github.io/pyproj/stable/gotchas.html#axis-order-changes-in-proj-6
  return _prepare_from_string(" ".join(pjargs))

2020-10-12 13:58:22,205 [28883] WARNING  py.warnings:99: [JupyterRequire] /opt/conda/lib/python3.7/site-packages/geopandas/geodataframe.py:546: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  result = super(GeoDataFrame, self).__getitem__(key)

2020-10-12 14:56:32,218 [28883] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2020-10-12 14:56:32,218 [28883] DEBUG    root:93: [JupyterRequire] Initializing comms.
2020-10-12 14:56:32,220 [28883] INFO     root:247: [JupyterRequire] Initializing comms.
2020-10-12 14:56:32,226 [28883] DEBUG    root:197: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2020-10-12 14:56:32,228 [28883] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2020-10-12 14:56:32,230 [28883] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2020-10-12 14:56:32,643 [28998] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2020-10-12 14:56:32,643 [28998] DEBUG    root:93: [JupyterRequire] Initializing comms.
2020-10-12 14:56:32,645 [28998] INFO     root:247: [JupyterRequire] Initializing comms.
2020-10-12 14:56:32,650 [28998] DEBUG    root:197: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2020-10-12 14:56:32,652 [28998] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2020-10-12 14:56:32,654 [28998] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2020-10-12 15:09:04,207 [28883] DEBUG    parso.python.diff:213: [JupyterRequire] diff parser start
2020-10-12 15:09:04,208 [28883] DEBUG    parso.python.diff:224: [JupyterRequire] line_lengths old: 1; new: 1
2020-10-12 15:09:04,210 [28883] DEBUG    parso.python.diff:228: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2020-10-12 15:09:04,214 [28883] DEBUG    parso.python.diff:341: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2020-10-12 15:09:04,216 [28883] DEBUG    parso.python.diff:264: [JupyterRequire] diff parser end
2020-10-12 15:09:04,309 [28883] DEBUG    parso.cache:126: [JupyterRequire] pickle loaded: /opt/conda/lib/python3.7/site-packages/geopandas/sindex.py
2020-10-12 15:11:30,938 [28883] ERROR    root:221: [JupyterRequire] Invalid alias: The name clear can't be aliased because it is another magic command.
2020-10-12 15:11:30,940 [28883] ERROR    root:221: [JupyterRequire] Invalid alias: The name more can't be aliased because it is another magic command.
2020-10-12 15:11:30,943 [28883] ERROR    root:221: [JupyterRequire] Invalid alias: The name less can't be aliased because it is another magic command.
2020-10-12 15:11:30,946 [28883] ERROR    root:221: [JupyterRequire] Invalid alias: The name man can't be aliased because it is another magic command.
2020-10-12 15:11:33,881 [30494] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2020-10-12 15:11:33,881 [30494] DEBUG    root:93: [JupyterRequire] Initializing comms.
2020-10-12 15:11:33,883 [30494] INFO     root:247: [JupyterRequire] Initializing comms.
2020-10-12 15:11:33,888 [30494] DEBUG    root:197: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2020-10-12 15:11:33,890 [30494] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2020-10-12 15:11:33,892 [30494] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2020-10-12 15:11:34,416 [30494] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2020-10-12 15:11:34,416 [30494] DEBUG    root:93: [JupyterRequire] Initializing comms.
2020-10-12 15:11:34,418 [30494] INFO     root:247: [JupyterRequire] Initializing comms.
2020-10-12 15:11:34,422 [30494] DEBUG    root:197: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2020-10-12 15:11:34,424 [30494] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2020-10-12 15:11:34,426 [30494] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2020-10-12 15:11:55,578 [30494] DEBUG    matplotlib:278: [JupyterRequire] CONFIGDIR=/home/wfct0p/.config/matplotlib
2020-10-12 15:11:55,625 [30494] DEBUG    matplotlib:278: [JupyterRequire] (private) matplotlib data path: /home/wfct0p/.local/lib/python3.7/site-packages/matplotlib/mpl-data
2020-10-12 15:11:55,651 [30494] DEBUG    matplotlib:278: [JupyterRequire] matplotlib data path: /home/wfct0p/.local/lib/python3.7/site-packages/matplotlib/mpl-data
2020-10-12 15:11:55,653 [30494] DEBUG    matplotlib:1009: [JupyterRequire] loaded rc file /home/wfct0p/.local/lib/python3.7/site-packages/matplotlib/mpl-data/matplotlibrc
2020-10-12 15:11:55,657 [30494] DEBUG    matplotlib:1598: [JupyterRequire] matplotlib version 3.2.1
2020-10-12 15:11:55,659 [30494] DEBUG    matplotlib:1599: [JupyterRequire] interactive is False
2020-10-12 15:11:55,661 [30494] DEBUG    matplotlib:1600: [JupyterRequire] platform is linux
2020-10-12 15:11:55,662 [30494] DEBUG    matplotlib:1601: [JupyterRequire] loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', 'zipimport', '_frozen_importlib_external', '_io', 'marshal', 'posix', 'encodings', 'codecs', '_codecs', 'encodings.aliases', 'encodings.utf_8', '_signal', '__main__', 'encodings.latin_1', 'io', 'abc', '_abc', '_bootlocale', '_locale', 'site', 'os', 'stat', '_stat', 'posixpath', 'genericpath', 'os.path', '_collections_abc', '_sitebuiltins', 'types', 'importlib', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib.util', 'importlib.abc', 'importlib.machinery', 'contextlib', 'collections', 'operator', '_operator', 'keyword', 'heapq', '_heapq', 'itertools', 'reprlib', '_collections', 'functools', '_functools', 'mpl_toolkits', 'sphinxcontrib', 'runpy', 'pkgutil', 'weakref', '_weakrefset', 'ipykernel', 'ipykernel._version', 'ipykernel.connect', '__future__', 'json', 'json.decoder', 're', 'enum', 'sre_compile', '_sre', 'sre_parse', 'sre_constants', 'copyreg', 'json.scanner', '_json', 'json.encoder', 'subprocess', 'time', 'signal', 'errno', '_posixsubprocess', 'select', 'selectors', 'collections.abc', 'math', 'threading', 'traceback', 'linecache', 'tokenize', 'token', 'IPython', 'IPython.core', 'IPython.core.getipython', 'IPython.core.release', 'IPython.core.application', 'atexit', 'copy', 'glob', 'fnmatch', 'logging', 'string', '_string', 'shutil', 'zlib', 'bz2', '_compression', '_bz2', 'lzma', '_lzma', 'pwd', 'grp', 'traitlets', 'traitlets.traitlets', 'inspect', 'dis', 'opcode', '_opcode', 'six', 'struct', '_struct', 'traitlets.utils', 'traitlets.utils.getargspec', 'traitlets.utils.importstring', 'ipython_genutils', 'ipython_genutils._version', 'ipython_genutils.py3compat', 'ipython_genutils.encoding', 'locale', 'platform', 'traitlets.utils.sentinel', 'traitlets.utils.bunch', 'traitlets._version', 'traitlets.config', 'traitlets.config.application', 'decorator', 'traitlets.config.configurable', 'traitlets.config.loader', 'argparse', 'gettext', 'ast', '_ast', 'ipython_genutils.path', 'random', 'hashlib', '_hashlib', '_blake2', '_sha3', 'bisect', '_bisect', '_random', 'ipython_genutils.text', 'textwrap', 'ipython_genutils.importstring', 'IPython.core.crashhandler', 'pprint', 'IPython.core.ultratb', 'pydoc', 'urllib', 'urllib.parse', 'IPython.core.debugger', 'bdb', 'IPython.utils', 'IPython.utils.PyColorize', 'IPython.utils.coloransi', 'IPython.utils.ipstruct', 'IPython.utils.colorable', 'pygments', 'pygments.util', 'IPython.utils.py3compat', 'IPython.utils.encoding', 'IPython.core.excolors', 'IPython.testing', 'IPython.testing.skipdoctest', 'pdb', 'cmd', 'code', 'codeop', 'IPython.core.display_trap', 'IPython.utils.path', 'IPython.utils.process', 'IPython.utils._process_posix', 'pexpect', 'pexpect.exceptions', 'pexpect.utils', 'pexpect.expect', 'pexpect.pty_spawn', 'pty', 'tty', 'termios', 'ptyprocess', 'ptyprocess.ptyprocess', 'fcntl', 'resource', 'ptyprocess.util', 'pexpect.spawnbase', 'pexpect.run', 'IPython.utils._process_common', 'shlex', 'IPython.utils.decorators', 'IPython.utils.data', 'IPython.utils.terminal', 'IPython.utils.sysinfo', 'IPython.utils._sysinfo', 'IPython.core.profiledir', 'IPython.paths', 'tempfile', 'IPython.utils.importstring', 'IPython.terminal', 'IPython.terminal.embed', 'IPython.core.compilerop', 'IPython.core.magic_arguments', 'IPython.core.error', 'IPython.utils.text', 'pathlib', 'ntpath', 'IPython.core.magic', 'getopt', 'IPython.core.oinspect', 'IPython.core.page', 'IPython.core.display', 'binascii', 'mimetypes', 'IPython.lib', 'IPython.lib.security', 'getpass', 'IPython.lib.pretty', 'datetime', '_datetime', 'IPython.utils.openpy', 'IPython.utils.dir2', 'IPython.utils.wildcard', 'pygments.lexers', 'pygments.lexers._mapping', 'pygments.modeline', 'pygments.plugin', 'pygments.lexers.python', 'pygments.lexer', 'pygments.filter', 'pygments.filters', 'pygments.token', 'pygments.regexopt', 'pygments.unistring', 'pygments.formatters', 'pygments.formatters._mapping', 'pygments.formatters.html', 'pygments.formatter', 'pygments.styles', 'IPython.core.inputtransformer2', 'typing', 'typing.io', 'typing.re', 'IPython.core.interactiveshell', 'asyncio', 'asyncio.base_events', 'concurrent', 'concurrent.futures', 'concurrent.futures._base', 'socket', '_socket', 'ssl', '_ssl', 'base64', 'asyncio.constants', 'asyncio.coroutines', 'asyncio.base_futures', 'asyncio.format_helpers', 'asyncio.log', 'asyncio.events', 'contextvars', '_contextvars', 'asyncio.base_tasks', '_asyncio', 'asyncio.futures', 'asyncio.protocols', 'asyncio.sslproto', 'asyncio.transports', 'asyncio.tasks', 'asyncio.locks', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.unix_events', 'asyncio.base_subprocess', 'asyncio.selector_events', 'pickleshare', 'pickle', '_compat_pickle', '_pickle', 'IPython.core.prefilter', 'IPython.core.autocall', 'IPython.core.macro', 'IPython.core.splitinput', 'IPython.core.alias', 'IPython.core.builtin_trap', 'IPython.core.events', 'backcall', 'backcall.backcall', 'IPython.core.displayhook', 'IPython.core.displaypub', 'IPython.core.extensions', 'IPython.core.formatters', 'IPython.utils.sentinel', 'IPython.core.history', 'sqlite3', 'sqlite3.dbapi2', '_sqlite3', 'IPython.core.logger', 'IPython.core.payload', 'IPython.core.usage', 'IPython.display', 'IPython.lib.display', 'html', 'html.entities', 'IPython.utils.io', 'IPython.utils.capture', 'IPython.utils.strdispatch', 'IPython.core.hooks', 'IPython.utils.syspathcontext', 'IPython.utils.tempdir', 'IPython.utils.contexts', 'IPython.core.async_helpers', 'IPython.terminal.interactiveshell', 'prompt_toolkit', 'prompt_toolkit.application', 'prompt_toolkit.application.application', 'prompt_toolkit.buffer', 'prompt_toolkit.application.current', 'prompt_toolkit.eventloop', 'prompt_toolkit.eventloop.base', 'prompt_toolkit.log', 'prompt_toolkit.eventloop.coroutine', 'prompt_toolkit.eventloop.defaults', 'prompt_toolkit.utils', 'six.moves', 'wcwidth', 'wcwidth.wcwidth', 'wcwidth.table_wide', 'wcwidth.table_zero', 'prompt_toolkit.cache', 'prompt_toolkit.eventloop.future', 'prompt_toolkit.eventloop.context', 'prompt_toolkit.eventloop.async_generator', 'queue', '_queue', 'six.moves.queue', 'prompt_toolkit.eventloop.event', 'prompt_toolkit.application.run_in_terminal', 'prompt_toolkit.auto_suggest', 'prompt_toolkit.filters', 'prompt_toolkit.filters.base', 'prompt_toolkit.filters.app', 'prompt_toolkit.enums', 'prompt_toolkit.filters.utils', 'prompt_toolkit.filters.cli', 'prompt_toolkit.clipboard', 'prompt_toolkit.clipboard.base', 'prompt_toolkit.selection', 'prompt_toolkit.clipboard.in_memory', 'prompt_toolkit.completion', 'prompt_toolkit.completion.base', 'prompt_toolkit.completion.filesystem', 'prompt_toolkit.completion.word_completer', 'prompt_toolkit.completion.fuzzy_completer', 'prompt_toolkit.document', 'prompt_toolkit.history', 'prompt_toolkit.search', 'prompt_toolkit.key_binding', 'prompt_toolkit.key_binding.key_bindings', 'prompt_toolkit.keys', 'prompt_toolkit.key_binding.vi_state', 'prompt_toolkit.validation', 'prompt_toolkit.input', 'prompt_toolkit.input.base', 'prompt_toolkit.input.defaults', 'prompt_toolkit.input.typeahead', 'prompt_toolkit.key_binding.bindings', 'prompt_toolkit.key_binding.bindings.page_navigation', 'prompt_toolkit.key_binding.bindings.scroll', 'prompt_toolkit.key_binding.defaults', 'prompt_toolkit.key_binding.bindings.basic', 'prompt_toolkit.key_binding.key_processor', 'prompt_toolkit.key_binding.bindings.named_commands', 'prompt_toolkit.key_binding.bindings.completion', 'prompt_toolkit.key_binding.bindings.emacs', 'prompt_toolkit.key_binding.bindings.vi', 'prompt_toolkit.input.vt100_parser', 'prompt_toolkit.input.ansi_escape_sequences', 'prompt_toolkit.key_binding.digraphs', 'prompt_toolkit.key_binding.bindings.mouse', 'prompt_toolkit.layout', 'prompt_toolkit.layout.containers', 'prompt_toolkit.layout.controls', 'prompt_toolkit.formatted_text', 'prompt_toolkit.formatted_text.base', 'prompt_toolkit.formatted_text.html', 'xml', 'xml.dom', 'xml.dom.domreg', 'xml.dom.minidom', 'xml.dom.minicompat', 'xml.dom.xmlbuilder', 'xml.dom.NodeFilter', 'prompt_toolkit.formatted_text.ansi', 'prompt_toolkit.output', 'prompt_toolkit.output.base', 'prompt_toolkit.layout.screen', 'prompt_toolkit.output.defaults', 'prompt_toolkit.output.color_depth', 'prompt_toolkit.output.vt100', 'prompt_toolkit.styles', 'prompt_toolkit.styles.base', 'prompt_toolkit.styles.defaults', 'prompt_toolkit.styles.style', 'prompt_toolkit.styles.named_colors', 'prompt_toolkit.styles.pygments', 'prompt_toolkit.styles.style_transformation', 'colorsys', 'array', 'prompt_toolkit.formatted_text.pygments', 'prompt_toolkit.formatted_text.utils', 'prompt_toolkit.lexers', 'prompt_toolkit.lexers.base', 'prompt_toolkit.lexers.pygments', 'prompt_toolkit.mouse_events', 'prompt_toolkit.layout.processors', 'prompt_toolkit.layout.utils', 'prompt_toolkit.layout.dimension', 'prompt_toolkit.layout.margins', 'prompt_toolkit.layout.layout', 'prompt_toolkit.layout.menus', 'prompt_toolkit.renderer', 'prompt_toolkit.layout.mouse_handlers', 'prompt_toolkit.key_binding.bindings.cpr', 'prompt_toolkit.key_binding.emacs_state', 'prompt_toolkit.layout.dummy', 'prompt_toolkit.application.dummy', 'prompt_toolkit.shortcuts', 'prompt_toolkit.shortcuts.dialogs', 'prompt_toolkit.key_binding.bindings.focus', 'prompt_toolkit.widgets', 'prompt_toolkit.widgets.base', 'prompt_toolkit.widgets.toolbars', 'prompt_toolkit.widgets.dialogs', 'prompt_toolkit.widgets.menus', 'prompt_toolkit.shortcuts.prompt', 'prompt_toolkit.key_binding.bindings.auto_suggest', 'prompt_toolkit.key_binding.bindings.open_in_editor', 'prompt_toolkit.shortcuts.utils', 'prompt_toolkit.shortcuts.progress_bar', 'prompt_toolkit.shortcuts.progress_bar.base', 'prompt_toolkit.shortcuts.progress_bar.formatters', 'prompt_toolkit.patch_stdout', 'pygments.style', 'IPython.terminal.debugger', 'IPython.core.completer', 'unicodedata', 'IPython.core.latex_symbols', 'IPython.utils.generics', 'jedi', 'jedi.api', 'parso', 'parso.parser', 'parso.tree', 'parso._compatibility', 'parso.utils', 'parso.pgen2', 'parso.pgen2.generator', 'parso.pgen2.grammar_parser', 'parso.python', 'parso.python.tokenize', 'parso.python.token', 'parso.grammar', 'parso.python.diff', 'difflib', 'parso.python.parser', 'parso.python.tree', 'parso.python.prefix', 'parso.cache', 'gc', 'parso.python.errors', 'parso.normalizer', 'parso.python.pep8', 'parso.file_io', 'jedi._compatibility', 'jedi.parser_utils', 'jedi.debug', 'colorama', 'colorama.initialise', 'colorama.ansitowin32', 'colorama.ansi', 'colorama.winterm', 'colorama.win32', 'ctypes', '_ctypes', 'ctypes._endian', 'jedi.settings', 'jedi.cache', 'jedi.api.classes', 'jedi.evaluate', 'jedi.evaluate.utils', 'jedi.evaluate.imports', 'jedi.evaluate.sys_path', 'jedi.evaluate.cache', 'jedi.evaluate.base_context', 'jedi.common', 'jedi.common.context', 'jedi.evaluate.helpers', 'jedi.common.utils', 'jedi.evaluate.compiled', 'jedi.evaluate.compiled.context', 'jedi.evaluate.filters', 'jedi.evaluate.flow_analysis', 'jedi.evaluate.recursion', 'jedi.evaluate.lazy_context', 'jedi.evaluate.compiled.access', 'jedi.evaluate.compiled.getattr_static', 'jedi.evaluate.compiled.fake', 'jedi.evaluate.analysis', 'jedi.evaluate.context', 'jedi.evaluate.context.module', 'jedi.evaluate.context.klass', 'jedi.evaluate.context.function', 'jedi.evaluate.docstrings', 'jedi.evaluate.pep0484', 'jedi.evaluate.arguments', 'jedi.evaluate.context.iterable', 'jedi.evaluate.param', 'jedi.evaluate.context.asynchronous', 'jedi.evaluate.parser_cache', 'jedi.evaluate.context.instance', 'jedi.evaluate.syntax_tree', 'jedi.evaluate.finder', 'jedi.api.keywords', 'pydoc_data', 'pydoc_data.topics', 'jedi.api.interpreter', 'jedi.evaluate.compiled.mixed', 'jedi.api.helpers', 'jedi.api.completion', 'jedi.api.environment', 'filecmp', 'jedi.evaluate.compiled.subprocess', 'jedi.evaluate.compiled.subprocess.functions', 'jedi.api.exceptions', 'jedi.api.project', 'jedi.evaluate.usages', 'IPython.terminal.ptutils', 'IPython.terminal.shortcuts', 'IPython.terminal.magics', 'IPython.lib.clipboard', 'IPython.terminal.pt_inputhooks', 'IPython.terminal.prompts', 'IPython.terminal.ipapp', 'IPython.core.magics', 'IPython.core.magics.auto', 'IPython.core.magics.basic', 'IPython.core.magics.code', 'urllib.request', 'email', 'http', 'http.client', 'email.parser', 'email.feedparser', 'email.errors', 'email._policybase', 'email.header', 'email.quoprimime', 'email.base64mime', 'email.charset', 'email.encoders', 'quopri', 'email.utils', 'email._parseaddr', 'calendar', 'email.message', 'uu', 'email._encoded_words', 'email.iterators', 'urllib.error', 'urllib.response', 'IPython.core.magics.config', 'IPython.core.magics.display', 'IPython.core.magics.execution', 'timeit', 'cProfile', '_lsprof', 'profile', 'pstats', 'IPython.utils.module_paths', 'IPython.utils.timing', 'IPython.core.magics.extension', 'IPython.core.magics.history', 'IPython.core.magics.logging', 'IPython.core.magics.namespace', 'IPython.core.magics.osm', 'IPython.core.magics.packaging', 'IPython.core.magics.pylab', 'IPython.core.pylabtools', 'IPython.core.magics.script', 'IPython.lib.backgroundjobs', 'IPython.core.shellapp', 'IPython.extensions', 'IPython.extensions.storemagic', 'IPython.utils.frame', 'jupyter_client', 'jupyter_client._version', 'jupyter_client.connect', 'zmq', 'zmq.backend', 'zmq.backend.select', 'zmq.backend.cython', 'zmq.backend.cython.constants', 'cython_runtime', 'zmq.backend.cython.error', '_cython_0_29_5', 'zmq.backend.cython.message', 'zmq.error', 'zmq.backend.cython.context', 'zmq.backend.cython.socket', 'zmq.backend.cython.utils', 'zmq.backend.cython._poll', 'zmq.backend.cython._version', 'zmq.backend.cython._device', 'zmq.backend.cython._proxy_steerable', 'zmq.sugar', 'zmq.sugar.constants', 'zmq.utils', 'zmq.utils.constant_names', 'zmq.sugar.context', 'zmq.sugar.attrsettr', 'zmq.sugar.socket', 'zmq.sugar.poll', 'zmq.utils.jsonapi', 'zmq.utils.strtypes', 'zmq.sugar.frame', 'zmq.sugar.tracker', 'zmq.sugar.version', 'zmq.sugar.stopwatch', 'jupyter_client.localinterfaces', 'jupyter_core', 'jupyter_core.version', 'jupyter_core.paths', 'jupyter_client.launcher', 'traitlets.log', 'jupyter_client.client', 'jupyter_client.channels', 'jupyter_client.channelsabc', 'jupyter_client.clientabc', 'jupyter_client.manager', 'jupyter_client.kernelspec', 'jupyter_client.managerabc', 'jupyter_client.blocking', 'jupyter_client.blocking.client', 'jupyter_client.blocking.channels', 'jupyter_client.multikernelmanager', 'uuid', 'ipykernel.kernelapp', 'tornado', 'tornado.ioloop', 'numbers', 'tornado.concurrent', 'tornado.log', 'logging.handlers', 'tornado.escape', 'tornado.util', 'tornado.speedups', 'curses', '_curses', 'zmq.eventloop', 'zmq.eventloop.ioloop', 'tornado.platform', 'tornado.platform.asyncio', 'tornado.gen', 'zmq.eventloop.zmqstream', 'ipykernel.iostream', 'imp', 'jupyter_client.session', 'hmac', 'jupyter_client.jsonutil', 'dateutil', 'dateutil._version', 'dateutil.parser', 'dateutil.parser._parser', 'decimal', '_decimal', 'dateutil.relativedelta', 'dateutil._common', 'dateutil.tz', 'dateutil.tz.tz', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.parser.isoparser', '_strptime', 'jupyter_client.adapter', 'ipykernel.heartbeat', 'ipykernel.ipkernel', 'IPython.utils.tokenutil', 'ipykernel.comm', 'ipykernel.comm.manager', 'ipykernel.comm.comm', 'ipykernel.kernelbase', 'tornado.queues', 'tornado.locks', 'ipykernel.jsonutil', 'ipykernel.zmqshell', 'IPython.core.payloadpage', 'ipykernel.displayhook', 'ipykernel.parentpoller', 'encodings.idna', 'stringprep', 'faulthandler', 'ipykernel.datapub', 'ipykernel.serialize', 'ipykernel.pickleutil', 'ipykernel.codeutil', 'IPython.core.completerlib', 'storemagic', 'ipywidgets', 'ipywidgets._version', 'ipywidgets.widgets', 'ipywidgets.widgets.widget', 'ipywidgets.widgets.domwidget', 'ipywidgets.widgets.trait_types', 'ipywidgets.widgets.util', 'ipywidgets.widgets.widget_layout', 'ipywidgets.widgets.widget_style', 'ipywidgets.widgets.valuewidget', 'ipywidgets.widgets.widget_core', 'ipywidgets.widgets.widget_bool', 'ipywidgets.widgets.widget_description', 'ipywidgets.widgets.widget_button', 'ipywidgets.widgets.widget_box', 'ipywidgets.widgets.docutils', 'ipywidgets.widgets.widget_float', 'ipywidgets.widgets.widget_int', 'ipywidgets.widgets.widget_color', 'ipywidgets.widgets.widget_date', 'ipywidgets.widgets.widget_output', 'ipywidgets.widgets.widget_selection', 'ipywidgets.widgets.widget_selectioncontainer', 'ipywidgets.widgets.widget_string', 'ipywidgets.widgets.widget_controller', 'ipywidgets.widgets.interaction', 'ipywidgets.widgets.widget_link', 'ipywidgets.widgets.widget_media', 'ipywidgets.widgets.widget_templates', 'ipywidgets.widgets.widget_upload', 'jupyter_require', 'daiquiri', 'logging.config', 'socketserver', 'daiquiri.output', 'syslog', 'daiquiri.formatter', 'pythonjsonlogger', 'pythonjsonlogger.jsonlogger', 'daiquiri.handlers', 'jupyter_require.__about__', 'jupyter_require.notebook', 'csscompressor', 'jupyter_require.core', 'jupyter_require.magic', 'jupyter_nbutils', 'jupyter_nbutils.__about__', 'jupyter_nbutils.config', 'jupyter_nbutils.utils', 'nbindex', 'nbindex.floating', 'nbindex.numbered', 'nbindex.utils', 'matplotlib', 'distutils', 'distutils.version', 'matplotlib.cbook', 'gzip', 'numpy', 'numpy._globals', 'numpy.__config__', 'numpy.version', 'numpy._distributor_init', 'numpy.core', 'numpy.core.multiarray', 'numpy.core.overrides', 'numpy.core._multiarray_umath', 'numpy.compat', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.core.umath', 'numpy.core.numerictypes', 'numpy.core._string_helpers', 'numpy.core._type_aliases', 'numpy.core._dtype', 'numpy.core.numeric', 'numpy.core.shape_base', 'numpy.core._asarray', 'numpy.core.fromnumeric', 'numpy.core._methods', 'numpy.core._exceptions', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._add_newdocs', 'numpy.core._multiarray_tests', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'numpy._pytesttester', 'numpy.lib', 'numpy.lib.mixins', 'numpy.lib.scimath', 'numpy.lib.type_check', 'numpy.lib.ufunclike', 'numpy.lib.index_tricks', 'numpy.matrixlib', 'numpy.matrixlib.defmatrix', 'numpy.linalg', 'numpy.linalg.linalg', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.lib.function_base', 'numpy.lib.histograms', 'numpy.lib.stride_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.npyio', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.financial', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.fft', 'numpy.fft._pocketfft', 'numpy.fft._pocketfft_internal', 'numpy.fft.helper', 'numpy.polynomial', 'numpy.polynomial.polynomial', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.random', 'numpy.random._pickle', 'numpy.random.mtrand', 'numpy.random._bit_generator', '_cython_0_29_16', 'numpy.random._common', 'secrets', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.ctypeslib', 'numpy.ma', 'numpy.ma.core', 'numpy.ma.extras', 'matplotlib.cbook.deprecation', 'matplotlib.rcsetup', 'matplotlib.fontconfig_pattern', 'pyparsing', 'matplotlib.colors', 'matplotlib.docstring', 'matplotlib._color_data', 'cycler', 'matplotlib._version', 'matplotlib.ft2font', 'kiwisolver']
2020-10-12 15:11:56,104 [30494] DEBUG    matplotlib:278: [JupyterRequire] CACHEDIR=/home/wfct0p/.cache/matplotlib
2020-10-12 15:11:56,157 [30494] DEBUG    matplotlib.font_manager:1348: [JupyterRequire] Using fontManager instance from /home/wfct0p/.cache/matplotlib/fontlist-v310.json
2020-10-12 15:11:57,216 [30494] DEBUG    matplotlib.pyplot:225: [JupyterRequire] Loaded backend module://ipykernel.pylab.backend_inline version unknown.
2020-10-12 15:11:57,221 [30494] DEBUG    matplotlib.pyplot:225: [JupyterRequire] Loaded backend module://ipykernel.pylab.backend_inline version unknown.
2020-10-12 15:11:57,232 [30494] WARNING  py.warnings:99: [JupyterRequire] /opt/conda/lib/python3.7/site-packages/IPython/core/magics/pylab.py:160: UserWarning: pylab import has clobbered these variables: ['floating']
`%matplotlib` prevents importing * from pylab and numpy
  "\n`%matplotlib` prevents importing * from pylab and numpy"

2020-10-12 15:11:57,236 [30494] DEBUG    matplotlib.pyplot:225: [JupyterRequire] Loaded backend module://ipykernel.pylab.backend_inline version unknown.
2020-10-12 15:11:57,658 [30494] DEBUG    shapely.geos:73: [JupyterRequire] Found GEOS DLL: <CDLL '/home/wfct0p/.local/lib/python3.7/site-packages/shapely/.libs/libgeos_c-5031f9ac.so.1.13.1', handle 562c389c3340 at 0x7f26b883c400>, using it.
2020-10-12 15:11:57,671 [30494] DEBUG    shapely.geos:38: [JupyterRequire] Trying `CDLL(libc.so.6)`
2020-10-12 15:11:57,672 [30494] DEBUG    shapely.geos:55: [JupyterRequire] Library path: 'libc.so.6'
2020-10-12 15:11:57,674 [30494] DEBUG    shapely.geos:56: [JupyterRequire] DLL: <CDLL 'libc.so.6', handle 7f26bb6074f0 at 0x7f26b883cf28>
2020-10-12 15:12:00,089 [30494] DEBUG    Fiona:143: [JupyterRequire] Set GDAL_DATA = '/opt/conda/share/gdal'
2020-10-12 15:12:00,090 [30494] DEBUG    Fiona:143: [JupyterRequire] Set PROJ_LIB = '/opt/conda/share/proj'
2020-10-12 15:12:00,113 [30494] DEBUG    fiona:287: [JupyterRequire] Creating a not-responsible GDALEnv in drivers()
2020-10-12 15:12:00,115 [30494] DEBUG    Fiona:75: [JupyterRequire] GDAL_DATA: /opt/conda/share/gdal
2020-10-12 15:12:00,117 [30494] DEBUG    Fiona:75: [JupyterRequire] PROJ_LIB: /opt/conda/share/proj
2020-10-12 15:12:00,133 [30494] DEBUG    Fiona:145: [JupyterRequire] GDAL_DATA: /opt/conda/share/gdal
2020-10-12 15:12:00,135 [30494] DEBUG    Fiona:145: [JupyterRequire] PROJ_LIB: /opt/conda/share/proj
2020-10-12 15:12:00,137 [30494] DEBUG    Fiona:153: [JupyterRequire] Userencoding: 'utf8'
2020-10-12 15:12:00,138 [30494] DEBUG    Fiona:153: [JupyterRequire] ENCODING open option set to b'UTF8'
2020-10-12 15:12:00,150 [30494] DEBUG    Fiona:203: [JupyterRequire] Got coordinate system
2020-10-12 15:12:00,152 [30494] DEBUG    Fiona:210: [JupyterRequire] Got coordinate system
2020-10-12 15:12:00,155 [30494] DEBUG    Fiona:247: [JupyterRequire] Index: 0
2020-10-12 15:12:00,187 [30494] DEBUG    fiona.collection:404: [JupyterRequire] Flushed buffer
2020-10-12 15:12:00,189 [30494] DEBUG    fiona.collection:406: [JupyterRequire] Stopped session
2020-10-12 15:12:03,182 [30494] DEBUG    fiona:287: [JupyterRequire] Creating a not-responsible GDALEnv in drivers()
2020-10-12 15:12:03,183 [30494] DEBUG    Fiona:75: [JupyterRequire] GDAL_DATA: /opt/conda/share/gdal
2020-10-12 15:12:03,184 [30494] DEBUG    Fiona:75: [JupyterRequire] PROJ_LIB: /opt/conda/share/proj
2020-10-12 15:12:03,200 [30494] DEBUG    Fiona:145: [JupyterRequire] GDAL_DATA: /opt/conda/share/gdal
2020-10-12 15:12:03,202 [30494] DEBUG    Fiona:145: [JupyterRequire] PROJ_LIB: /opt/conda/share/proj
2020-10-12 15:12:03,203 [30494] DEBUG    Fiona:153: [JupyterRequire] Userencoding: None
2020-10-12 15:12:03,208 [30494] DEBUG    Fiona:203: [JupyterRequire] Got coordinate system
2020-10-12 15:12:03,210 [30494] DEBUG    Fiona:210: [JupyterRequire] Got coordinate system
2020-10-12 15:12:03,212 [30494] DEBUG    Fiona:247: [JupyterRequire] Index: 0
2020-10-12 15:12:03,780 [30494] DEBUG    fiona.collection:404: [JupyterRequire] Flushed buffer
2020-10-12 15:12:03,782 [30494] DEBUG    fiona.collection:406: [JupyterRequire] Stopped session
2020-10-12 15:12:04,449 [30494] DEBUG    matplotlib.font_manager:1246: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2020-10-12 15:12:04,453 [30494] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
2020-10-12 15:12:04,454 [30494] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
2020-10-12 15:12:04,456 [30494] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
2020-10-12 15:12:04,458 [30494] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-12 15:12:04,459 [30494] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
2020-10-12 15:12:04,462 [30494] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
2020-10-12 15:12:04,464 [30494] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2020-10-12 15:12:04,466 [30494] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
2020-10-12 15:12:04,468 [30494] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-10-12 15:12:04,470 [30494] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2020-10-12 15:12:04,471 [30494] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2020-10-12 15:12:04,473 [30494] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
2020-10-12 15:12:04,475 [30494] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 0.33499999999999996
2020-10-12 15:12:04,477 [30494] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2020-10-12 15:12:04,480 [30494] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
2020-10-12 15:12:04,482 [30494] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2020-10-12 15:12:04,483 [30494] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
2020-10-12 15:12:04,485 [30494] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2020-10-12 15:12:04,487 [30494] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-10-12 15:12:04,489 [30494] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-12 15:12:04,491 [30494] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-12 15:12:04,492 [30494] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2020-10-12 15:12:04,494 [30494] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
2020-10-12 15:12:04,496 [30494] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2020-10-12 15:12:04,498 [30494] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2020-10-12 15:12:04,499 [30494] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
2020-10-12 15:12:04,501 [30494] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2020-10-12 15:12:04,503 [30494] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
2020-10-12 15:12:04,505 [30494] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
2020-10-12 15:12:04,507 [30494] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2020-10-12 15:12:04,509 [30494] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-12 15:12:04,511 [30494] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2020-10-12 15:12:04,513 [30494] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2020-10-12 15:12:04,514 [30494] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2020-10-12 15:12:04,517 [30494] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
2020-10-12 15:12:04,519 [30494] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 1.335
2020-10-12 15:12:04,521 [30494] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
2020-10-12 15:12:04,523 [30494] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2020-10-12 15:12:04,525 [30494] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-Heavy.ttf) normal normal heavy normal>) = 10.43
2020-10-12 15:12:04,527 [30494] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-12 15:12:04,529 [30494] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-BlackItalic.ttf) italic normal black normal>) = 11.525
2020-10-12 15:12:04,531 [30494] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'GFS Baskerville' (GFSBaskerville.otf) normal normal regular normal>) = 10.05
2020-10-12 15:12:04,533 [30494] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-BoldItalic.ttf) italic normal bold condensed>) = 11.535
2020-10-12 15:12:04,536 [30494] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-BoldOblique.ttf) oblique normal bold condensed>) = 1.535
2020-10-12 15:12:04,538 [30494] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-ExtraLight.ttf) normal normal light normal>) = 0.24
2020-10-12 15:12:04,539 [30494] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-SemiboldItalic.ttf) italic normal semibold normal>) = 11.24
2020-10-12 15:12:04,547 [30494] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed.ttf) normal normal 400 condensed>) = 10.25
2020-10-12 15:12:04,548 [30494] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-Thin.ttf) normal normal 400 normal>) = 10.05
2020-10-12 15:12:04,550 [30494] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-HairlineItalic.ttf) italic normal 400 normal>) = 11.05
2020-10-12 15:12:04,552 [30494] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-Italic.ttf) italic normal 400 condensed>) = 11.25
2020-10-12 15:12:04,554 [30494] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-12 15:12:04,557 [30494] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-Light.ttf) normal normal light normal>) = 10.24
2020-10-12 15:12:04,561 [30494] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-LightItalic.ttf) italic normal light normal>) = 11.24
2020-10-12 15:12:04,563 [30494] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-Bold.ttf) normal normal bold condensed>) = 10.535
2020-10-12 15:12:04,575 [30494] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-Black.ttf) normal normal black normal>) = 10.525
2020-10-12 15:12:04,578 [30494] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-Semibold.ttf) normal normal semibold normal>) = 10.24
2020-10-12 15:12:04,581 [30494] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-Medium.ttf) normal normal medium normal>) = 10.145
2020-10-12 15:12:04,583 [30494] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-Oblique.ttf) oblique normal 400 condensed>) = 1.25
2020-10-12 15:12:04,585 [30494] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-Hairline.ttf) normal normal 400 normal>) = 10.05
2020-10-12 15:12:04,587 [30494] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-12 15:12:04,589 [30494] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
2020-10-12 15:12:04,591 [30494] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed.ttf) normal normal 400 condensed>) = 0.25
2020-10-12 15:12:04,593 [30494] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-12 15:12:04,595 [30494] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-HeavyItalic.ttf) italic normal heavy normal>) = 11.43
2020-10-12 15:12:04,597 [30494] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-MediumItalic.ttf) italic normal medium normal>) = 11.145
2020-10-12 15:12:04,598 [30494] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-ThinItalic.ttf) italic normal 400 normal>) = 11.05
2020-10-12 15:12:04,600 [30494] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-12 15:12:04,602 [30494] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Math TeX Gyre' (DejaVuMathTeXGyre.ttf) normal normal regular normal>) = 10.05
2020-10-12 15:12:04,603 [30494] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-Bold.ttf) normal normal bold condensed>) = 0.5349999999999999
2020-10-12 15:12:04,605 [30494] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'GFS Porson' (GFSPorson.otf) normal normal 400 normal>) = 10.05
2020-10-12 15:12:04,607 [30494] DEBUG    matplotlib.font_manager:1281: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('/home/wfct0p/.local/lib/python3.7/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
2020-10-12 15:12:05,033 [30494] WARNING  py.warnings:99: [JupyterRequire] /home/wfct0p/.local/lib/python3.7/site-packages/pyproj/crs/crs.py:53: FutureWarning: '+init=<authority>:<code>' syntax is deprecated. '<authority>:<code>' is the preferred initialization method. When making the change, be mindful of axis order changes: https://pyproj4.github.io/pyproj/stable/gotchas.html#axis-order-changes-in-proj-6
  return _prepare_from_string(" ".join(pjargs))

2020-10-12 15:12:07,198 [30494] WARNING  py.warnings:99: [JupyterRequire] /home/wfct0p/.local/lib/python3.7/site-packages/pyproj/crs/crs.py:53: FutureWarning: '+init=<authority>:<code>' syntax is deprecated. '<authority>:<code>' is the preferred initialization method. When making the change, be mindful of axis order changes: https://pyproj4.github.io/pyproj/stable/gotchas.html#axis-order-changes-in-proj-6
  return _prepare_from_string(" ".join(pjargs))

2020-10-12 15:15:19,754 [30494] WARNING  py.warnings:99: [JupyterRequire] /home/wfct0p/.local/lib/python3.7/site-packages/pyproj/crs/crs.py:53: FutureWarning: '+init=<authority>:<code>' syntax is deprecated. '<authority>:<code>' is the preferred initialization method. When making the change, be mindful of axis order changes: https://pyproj4.github.io/pyproj/stable/gotchas.html#axis-order-changes-in-proj-6
  return _prepare_from_string(" ".join(pjargs))

2020-10-12 15:16:14,035 [30494] WARNING  py.warnings:99: [JupyterRequire] /opt/conda/lib/python3.7/site-packages/geopandas/geodataframe.py:546: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  result = super(GeoDataFrame, self).__getitem__(key)

2020-10-12 15:17:25,797 [30494] WARNING  py.warnings:99: [JupyterRequire] /home/wfct0p/.local/lib/python3.7/site-packages/pyproj/crs/crs.py:53: FutureWarning: '+init=<authority>:<code>' syntax is deprecated. '<authority>:<code>' is the preferred initialization method. When making the change, be mindful of axis order changes: https://pyproj4.github.io/pyproj/stable/gotchas.html#axis-order-changes-in-proj-6
  return _prepare_from_string(" ".join(pjargs))

2020-10-12 15:18:01,331 [30494] WARNING  py.warnings:99: [JupyterRequire] /home/wfct0p/.local/lib/python3.7/site-packages/pyproj/crs/crs.py:53: FutureWarning: '+init=<authority>:<code>' syntax is deprecated. '<authority>:<code>' is the preferred initialization method. When making the change, be mindful of axis order changes: https://pyproj4.github.io/pyproj/stable/gotchas.html#axis-order-changes-in-proj-6
  return _prepare_from_string(" ".join(pjargs))

2020-10-12 15:20:58,744 [28878] DEBUG    matplotlib:278: [JupyterRequire] CONFIGDIR=/home/wfct0p/.config/matplotlib
2020-10-12 15:20:58,745 [28878] DEBUG    matplotlib:278: [JupyterRequire] (private) matplotlib data path: /home/wfct0p/.local/lib/python3.7/site-packages/matplotlib/mpl-data
2020-10-12 15:20:58,753 [28878] DEBUG    matplotlib:278: [JupyterRequire] matplotlib data path: /home/wfct0p/.local/lib/python3.7/site-packages/matplotlib/mpl-data
2020-10-12 15:20:58,758 [28878] DEBUG    matplotlib:1009: [JupyterRequire] loaded rc file /home/wfct0p/.local/lib/python3.7/site-packages/matplotlib/mpl-data/matplotlibrc
2020-10-12 15:20:58,762 [28878] DEBUG    matplotlib:1598: [JupyterRequire] matplotlib version 3.2.1
2020-10-12 15:20:58,765 [28878] DEBUG    matplotlib:1599: [JupyterRequire] interactive is False
2020-10-12 15:20:58,767 [28878] DEBUG    matplotlib:1600: [JupyterRequire] platform is linux
2020-10-12 15:20:58,771 [28878] DEBUG    matplotlib:1601: [JupyterRequire] loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', 'zipimport', '_frozen_importlib_external', '_io', 'marshal', 'posix', 'encodings', 'codecs', '_codecs', 'encodings.aliases', 'encodings.utf_8', '_signal', '__main__', 'encodings.latin_1', 'io', 'abc', '_abc', '_bootlocale', '_locale', 'site', 'os', 'stat', '_stat', 'posixpath', 'genericpath', 'os.path', '_collections_abc', '_sitebuiltins', 'types', 'importlib', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib.util', 'importlib.abc', 'importlib.machinery', 'contextlib', 'collections', 'operator', '_operator', 'keyword', 'heapq', '_heapq', 'itertools', 'reprlib', '_collections', 'functools', '_functools', 'mpl_toolkits', 'sphinxcontrib', 'runpy', 'pkgutil', 'weakref', '_weakrefset', 'ipykernel', 'ipykernel._version', 'ipykernel.connect', '__future__', 'json', 'json.decoder', 're', 'enum', 'sre_compile', '_sre', 'sre_parse', 'sre_constants', 'copyreg', 'json.scanner', '_json', 'json.encoder', 'subprocess', 'time', 'signal', 'errno', '_posixsubprocess', 'select', 'selectors', 'collections.abc', 'math', 'threading', 'traceback', 'linecache', 'tokenize', 'token', 'IPython', 'IPython.core', 'IPython.core.getipython', 'IPython.core.release', 'IPython.core.application', 'atexit', 'copy', 'glob', 'fnmatch', 'logging', 'string', '_string', 'shutil', 'zlib', 'bz2', '_compression', '_bz2', 'lzma', '_lzma', 'pwd', 'grp', 'traitlets', 'traitlets.traitlets', 'inspect', 'dis', 'opcode', '_opcode', 'six', 'struct', '_struct', 'traitlets.utils', 'traitlets.utils.getargspec', 'traitlets.utils.importstring', 'ipython_genutils', 'ipython_genutils._version', 'ipython_genutils.py3compat', 'ipython_genutils.encoding', 'locale', 'platform', 'traitlets.utils.sentinel', 'traitlets.utils.bunch', 'traitlets._version', 'traitlets.config', 'traitlets.config.application', 'decorator', 'traitlets.config.configurable', 'traitlets.config.loader', 'argparse', 'gettext', 'ast', '_ast', 'ipython_genutils.path', 'random', 'hashlib', '_hashlib', '_blake2', '_sha3', 'bisect', '_bisect', '_random', 'ipython_genutils.text', 'textwrap', 'ipython_genutils.importstring', 'IPython.core.crashhandler', 'pprint', 'IPython.core.ultratb', 'pydoc', 'urllib', 'urllib.parse', 'IPython.core.debugger', 'bdb', 'IPython.utils', 'IPython.utils.PyColorize', 'IPython.utils.coloransi', 'IPython.utils.ipstruct', 'IPython.utils.colorable', 'pygments', 'pygments.util', 'IPython.utils.py3compat', 'IPython.utils.encoding', 'IPython.core.excolors', 'IPython.testing', 'IPython.testing.skipdoctest', 'pdb', 'cmd', 'code', 'codeop', 'IPython.core.display_trap', 'IPython.utils.path', 'IPython.utils.process', 'IPython.utils._process_posix', 'pexpect', 'pexpect.exceptions', 'pexpect.utils', 'pexpect.expect', 'pexpect.pty_spawn', 'pty', 'tty', 'termios', 'ptyprocess', 'ptyprocess.ptyprocess', 'fcntl', 'resource', 'ptyprocess.util', 'pexpect.spawnbase', 'pexpect.run', 'IPython.utils._process_common', 'shlex', 'IPython.utils.decorators', 'IPython.utils.data', 'IPython.utils.terminal', 'IPython.utils.sysinfo', 'IPython.utils._sysinfo', 'IPython.core.profiledir', 'IPython.paths', 'tempfile', 'IPython.utils.importstring', 'IPython.terminal', 'IPython.terminal.embed', 'IPython.core.compilerop', 'IPython.core.magic_arguments', 'IPython.core.error', 'IPython.utils.text', 'pathlib', 'ntpath', 'IPython.core.magic', 'getopt', 'IPython.core.oinspect', 'IPython.core.page', 'IPython.core.display', 'binascii', 'mimetypes', 'IPython.lib', 'IPython.lib.security', 'getpass', 'IPython.lib.pretty', 'datetime', '_datetime', 'IPython.utils.openpy', 'IPython.utils.dir2', 'IPython.utils.wildcard', 'pygments.lexers', 'pygments.lexers._mapping', 'pygments.modeline', 'pygments.plugin', 'pygments.lexers.python', 'pygments.lexer', 'pygments.filter', 'pygments.filters', 'pygments.token', 'pygments.regexopt', 'pygments.unistring', 'pygments.formatters', 'pygments.formatters._mapping', 'pygments.formatters.html', 'pygments.formatter', 'pygments.styles', 'IPython.core.inputtransformer2', 'typing', 'typing.io', 'typing.re', 'IPython.core.interactiveshell', 'asyncio', 'asyncio.base_events', 'concurrent', 'concurrent.futures', 'concurrent.futures._base', 'socket', '_socket', 'ssl', '_ssl', 'base64', 'asyncio.constants', 'asyncio.coroutines', 'asyncio.base_futures', 'asyncio.format_helpers', 'asyncio.log', 'asyncio.events', 'contextvars', '_contextvars', 'asyncio.base_tasks', '_asyncio', 'asyncio.futures', 'asyncio.protocols', 'asyncio.sslproto', 'asyncio.transports', 'asyncio.tasks', 'asyncio.locks', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.unix_events', 'asyncio.base_subprocess', 'asyncio.selector_events', 'pickleshare', 'pickle', '_compat_pickle', '_pickle', 'IPython.core.prefilter', 'IPython.core.autocall', 'IPython.core.macro', 'IPython.core.splitinput', 'IPython.core.alias', 'IPython.core.builtin_trap', 'IPython.core.events', 'backcall', 'backcall.backcall', 'IPython.core.displayhook', 'IPython.core.displaypub', 'IPython.core.extensions', 'IPython.core.formatters', 'IPython.utils.sentinel', 'IPython.core.history', 'sqlite3', 'sqlite3.dbapi2', '_sqlite3', 'IPython.core.logger', 'IPython.core.payload', 'IPython.core.usage', 'IPython.display', 'IPython.lib.display', 'html', 'html.entities', 'IPython.utils.io', 'IPython.utils.capture', 'IPython.utils.strdispatch', 'IPython.core.hooks', 'IPython.utils.syspathcontext', 'IPython.utils.tempdir', 'IPython.utils.contexts', 'IPython.core.async_helpers', 'IPython.terminal.interactiveshell', 'prompt_toolkit', 'prompt_toolkit.application', 'prompt_toolkit.application.application', 'prompt_toolkit.buffer', 'prompt_toolkit.application.current', 'prompt_toolkit.eventloop', 'prompt_toolkit.eventloop.base', 'prompt_toolkit.log', 'prompt_toolkit.eventloop.coroutine', 'prompt_toolkit.eventloop.defaults', 'prompt_toolkit.utils', 'six.moves', 'wcwidth', 'wcwidth.wcwidth', 'wcwidth.table_wide', 'wcwidth.table_zero', 'prompt_toolkit.cache', 'prompt_toolkit.eventloop.future', 'prompt_toolkit.eventloop.context', 'prompt_toolkit.eventloop.async_generator', 'queue', '_queue', 'six.moves.queue', 'prompt_toolkit.eventloop.event', 'prompt_toolkit.application.run_in_terminal', 'prompt_toolkit.auto_suggest', 'prompt_toolkit.filters', 'prompt_toolkit.filters.base', 'prompt_toolkit.filters.app', 'prompt_toolkit.enums', 'prompt_toolkit.filters.utils', 'prompt_toolkit.filters.cli', 'prompt_toolkit.clipboard', 'prompt_toolkit.clipboard.base', 'prompt_toolkit.selection', 'prompt_toolkit.clipboard.in_memory', 'prompt_toolkit.completion', 'prompt_toolkit.completion.base', 'prompt_toolkit.completion.filesystem', 'prompt_toolkit.completion.word_completer', 'prompt_toolkit.completion.fuzzy_completer', 'prompt_toolkit.document', 'prompt_toolkit.history', 'prompt_toolkit.search', 'prompt_toolkit.key_binding', 'prompt_toolkit.key_binding.key_bindings', 'prompt_toolkit.keys', 'prompt_toolkit.key_binding.vi_state', 'prompt_toolkit.validation', 'prompt_toolkit.input', 'prompt_toolkit.input.base', 'prompt_toolkit.input.defaults', 'prompt_toolkit.input.typeahead', 'prompt_toolkit.key_binding.bindings', 'prompt_toolkit.key_binding.bindings.page_navigation', 'prompt_toolkit.key_binding.bindings.scroll', 'prompt_toolkit.key_binding.defaults', 'prompt_toolkit.key_binding.bindings.basic', 'prompt_toolkit.key_binding.key_processor', 'prompt_toolkit.key_binding.bindings.named_commands', 'prompt_toolkit.key_binding.bindings.completion', 'prompt_toolkit.key_binding.bindings.emacs', 'prompt_toolkit.key_binding.bindings.vi', 'prompt_toolkit.input.vt100_parser', 'prompt_toolkit.input.ansi_escape_sequences', 'prompt_toolkit.key_binding.digraphs', 'prompt_toolkit.key_binding.bindings.mouse', 'prompt_toolkit.layout', 'prompt_toolkit.layout.containers', 'prompt_toolkit.layout.controls', 'prompt_toolkit.formatted_text', 'prompt_toolkit.formatted_text.base', 'prompt_toolkit.formatted_text.html', 'xml', 'xml.dom', 'xml.dom.domreg', 'xml.dom.minidom', 'xml.dom.minicompat', 'xml.dom.xmlbuilder', 'xml.dom.NodeFilter', 'prompt_toolkit.formatted_text.ansi', 'prompt_toolkit.output', 'prompt_toolkit.output.base', 'prompt_toolkit.layout.screen', 'prompt_toolkit.output.defaults', 'prompt_toolkit.output.color_depth', 'prompt_toolkit.output.vt100', 'prompt_toolkit.styles', 'prompt_toolkit.styles.base', 'prompt_toolkit.styles.defaults', 'prompt_toolkit.styles.style', 'prompt_toolkit.styles.named_colors', 'prompt_toolkit.styles.pygments', 'prompt_toolkit.styles.style_transformation', 'colorsys', 'array', 'prompt_toolkit.formatted_text.pygments', 'prompt_toolkit.formatted_text.utils', 'prompt_toolkit.lexers', 'prompt_toolkit.lexers.base', 'prompt_toolkit.lexers.pygments', 'prompt_toolkit.mouse_events', 'prompt_toolkit.layout.processors', 'prompt_toolkit.layout.utils', 'prompt_toolkit.layout.dimension', 'prompt_toolkit.layout.margins', 'prompt_toolkit.layout.layout', 'prompt_toolkit.layout.menus', 'prompt_toolkit.renderer', 'prompt_toolkit.layout.mouse_handlers', 'prompt_toolkit.key_binding.bindings.cpr', 'prompt_toolkit.key_binding.emacs_state', 'prompt_toolkit.layout.dummy', 'prompt_toolkit.application.dummy', 'prompt_toolkit.shortcuts', 'prompt_toolkit.shortcuts.dialogs', 'prompt_toolkit.key_binding.bindings.focus', 'prompt_toolkit.widgets', 'prompt_toolkit.widgets.base', 'prompt_toolkit.widgets.toolbars', 'prompt_toolkit.widgets.dialogs', 'prompt_toolkit.widgets.menus', 'prompt_toolkit.shortcuts.prompt', 'prompt_toolkit.key_binding.bindings.auto_suggest', 'prompt_toolkit.key_binding.bindings.open_in_editor', 'prompt_toolkit.shortcuts.utils', 'prompt_toolkit.shortcuts.progress_bar', 'prompt_toolkit.shortcuts.progress_bar.base', 'prompt_toolkit.shortcuts.progress_bar.formatters', 'prompt_toolkit.patch_stdout', 'pygments.style', 'IPython.terminal.debugger', 'IPython.core.completer', 'unicodedata', 'IPython.core.latex_symbols', 'IPython.utils.generics', 'jedi', 'jedi.api', 'parso', 'parso.parser', 'parso.tree', 'parso._compatibility', 'parso.utils', 'parso.pgen2', 'parso.pgen2.generator', 'parso.pgen2.grammar_parser', 'parso.python', 'parso.python.tokenize', 'parso.python.token', 'parso.grammar', 'parso.python.diff', 'difflib', 'parso.python.parser', 'parso.python.tree', 'parso.python.prefix', 'parso.cache', 'gc', 'parso.python.errors', 'parso.normalizer', 'parso.python.pep8', 'parso.file_io', 'jedi._compatibility', 'jedi.parser_utils', 'jedi.debug', 'colorama', 'colorama.initialise', 'colorama.ansitowin32', 'colorama.ansi', 'colorama.winterm', 'colorama.win32', 'ctypes', '_ctypes', 'ctypes._endian', 'jedi.settings', 'jedi.cache', 'jedi.api.classes', 'jedi.evaluate', 'jedi.evaluate.utils', 'jedi.evaluate.imports', 'jedi.evaluate.sys_path', 'jedi.evaluate.cache', 'jedi.evaluate.base_context', 'jedi.common', 'jedi.common.context', 'jedi.evaluate.helpers', 'jedi.common.utils', 'jedi.evaluate.compiled', 'jedi.evaluate.compiled.context', 'jedi.evaluate.filters', 'jedi.evaluate.flow_analysis', 'jedi.evaluate.recursion', 'jedi.evaluate.lazy_context', 'jedi.evaluate.compiled.access', 'jedi.evaluate.compiled.getattr_static', 'jedi.evaluate.compiled.fake', 'jedi.evaluate.analysis', 'jedi.evaluate.context', 'jedi.evaluate.context.module', 'jedi.evaluate.context.klass', 'jedi.evaluate.context.function', 'jedi.evaluate.docstrings', 'jedi.evaluate.pep0484', 'jedi.evaluate.arguments', 'jedi.evaluate.context.iterable', 'jedi.evaluate.param', 'jedi.evaluate.context.asynchronous', 'jedi.evaluate.parser_cache', 'jedi.evaluate.context.instance', 'jedi.evaluate.syntax_tree', 'jedi.evaluate.finder', 'jedi.api.keywords', 'pydoc_data', 'pydoc_data.topics', 'jedi.api.interpreter', 'jedi.evaluate.compiled.mixed', 'jedi.api.helpers', 'jedi.api.completion', 'jedi.api.environment', 'filecmp', 'jedi.evaluate.compiled.subprocess', 'jedi.evaluate.compiled.subprocess.functions', 'jedi.api.exceptions', 'jedi.api.project', 'jedi.evaluate.usages', 'IPython.terminal.ptutils', 'IPython.terminal.shortcuts', 'IPython.terminal.magics', 'IPython.lib.clipboard', 'IPython.terminal.pt_inputhooks', 'IPython.terminal.prompts', 'IPython.terminal.ipapp', 'IPython.core.magics', 'IPython.core.magics.auto', 'IPython.core.magics.basic', 'IPython.core.magics.code', 'urllib.request', 'email', 'http', 'http.client', 'email.parser', 'email.feedparser', 'email.errors', 'email._policybase', 'email.header', 'email.quoprimime', 'email.base64mime', 'email.charset', 'email.encoders', 'quopri', 'email.utils', 'email._parseaddr', 'calendar', 'email.message', 'uu', 'email._encoded_words', 'email.iterators', 'urllib.error', 'urllib.response', 'IPython.core.magics.config', 'IPython.core.magics.display', 'IPython.core.magics.execution', 'timeit', 'cProfile', '_lsprof', 'profile', 'pstats', 'IPython.utils.module_paths', 'IPython.utils.timing', 'IPython.core.magics.extension', 'IPython.core.magics.history', 'IPython.core.magics.logging', 'IPython.core.magics.namespace', 'IPython.core.magics.osm', 'IPython.core.magics.packaging', 'IPython.core.magics.pylab', 'IPython.core.pylabtools', 'IPython.core.magics.script', 'IPython.lib.backgroundjobs', 'IPython.core.shellapp', 'IPython.extensions', 'IPython.extensions.storemagic', 'IPython.utils.frame', 'jupyter_client', 'jupyter_client._version', 'jupyter_client.connect', 'zmq', 'zmq.backend', 'zmq.backend.select', 'zmq.backend.cython', 'zmq.backend.cython.constants', 'cython_runtime', 'zmq.backend.cython.error', '_cython_0_29_5', 'zmq.backend.cython.message', 'zmq.error', 'zmq.backend.cython.context', 'zmq.backend.cython.socket', 'zmq.backend.cython.utils', 'zmq.backend.cython._poll', 'zmq.backend.cython._version', 'zmq.backend.cython._device', 'zmq.backend.cython._proxy_steerable', 'zmq.sugar', 'zmq.sugar.constants', 'zmq.utils', 'zmq.utils.constant_names', 'zmq.sugar.context', 'zmq.sugar.attrsettr', 'zmq.sugar.socket', 'zmq.sugar.poll', 'zmq.utils.jsonapi', 'zmq.utils.strtypes', 'zmq.sugar.frame', 'zmq.sugar.tracker', 'zmq.sugar.version', 'zmq.sugar.stopwatch', 'jupyter_client.localinterfaces', 'jupyter_core', 'jupyter_core.version', 'jupyter_core.paths', 'jupyter_client.launcher', 'traitlets.log', 'jupyter_client.client', 'jupyter_client.channels', 'jupyter_client.channelsabc', 'jupyter_client.clientabc', 'jupyter_client.manager', 'jupyter_client.kernelspec', 'jupyter_client.managerabc', 'jupyter_client.blocking', 'jupyter_client.blocking.client', 'jupyter_client.blocking.channels', 'jupyter_client.multikernelmanager', 'uuid', 'ipykernel.kernelapp', 'tornado', 'tornado.ioloop', 'numbers', 'tornado.concurrent', 'tornado.log', 'logging.handlers', 'tornado.escape', 'tornado.util', 'tornado.speedups', 'curses', '_curses', 'zmq.eventloop', 'zmq.eventloop.ioloop', 'tornado.platform', 'tornado.platform.asyncio', 'tornado.gen', 'zmq.eventloop.zmqstream', 'ipykernel.iostream', 'imp', 'jupyter_client.session', 'hmac', 'jupyter_client.jsonutil', 'dateutil', 'dateutil._version', 'dateutil.parser', 'dateutil.parser._parser', 'decimal', '_decimal', 'dateutil.relativedelta', 'dateutil._common', 'dateutil.tz', 'dateutil.tz.tz', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.parser.isoparser', '_strptime', 'jupyter_client.adapter', 'ipykernel.heartbeat', 'ipykernel.ipkernel', 'IPython.utils.tokenutil', 'ipykernel.comm', 'ipykernel.comm.manager', 'ipykernel.comm.comm', 'ipykernel.kernelbase', 'tornado.queues', 'tornado.locks', 'ipykernel.jsonutil', 'ipykernel.zmqshell', 'IPython.core.payloadpage', 'ipykernel.displayhook', 'ipykernel.parentpoller', 'encodings.idna', 'stringprep', 'faulthandler', 'ipykernel.datapub', 'ipykernel.serialize', 'ipykernel.pickleutil', 'ipykernel.codeutil', 'IPython.core.completerlib', 'storemagic', 'ipywidgets', 'ipywidgets._version', 'ipywidgets.widgets', 'ipywidgets.widgets.widget', 'ipywidgets.widgets.domwidget', 'ipywidgets.widgets.trait_types', 'ipywidgets.widgets.util', 'ipywidgets.widgets.widget_layout', 'ipywidgets.widgets.widget_style', 'ipywidgets.widgets.valuewidget', 'ipywidgets.widgets.widget_core', 'ipywidgets.widgets.widget_bool', 'ipywidgets.widgets.widget_description', 'ipywidgets.widgets.widget_button', 'ipywidgets.widgets.widget_box', 'ipywidgets.widgets.docutils', 'ipywidgets.widgets.widget_float', 'ipywidgets.widgets.widget_int', 'ipywidgets.widgets.widget_color', 'ipywidgets.widgets.widget_date', 'ipywidgets.widgets.widget_output', 'ipywidgets.widgets.widget_selection', 'ipywidgets.widgets.widget_selectioncontainer', 'ipywidgets.widgets.widget_string', 'ipywidgets.widgets.widget_controller', 'ipywidgets.widgets.interaction', 'ipywidgets.widgets.widget_link', 'ipywidgets.widgets.widget_media', 'ipywidgets.widgets.widget_templates', 'ipywidgets.widgets.widget_upload', 'jupyter_require', 'daiquiri', 'logging.config', 'socketserver', 'daiquiri.output', 'syslog', 'daiquiri.formatter', 'pythonjsonlogger', 'pythonjsonlogger.jsonlogger', 'daiquiri.handlers', 'jupyter_require.__about__', 'jupyter_require.notebook', 'csscompressor', 'jupyter_require.core', 'jupyter_require.magic', 'jupyter_nbutils', 'jupyter_nbutils.__about__', 'jupyter_nbutils.config', 'jupyter_nbutils.utils', 'nbindex', 'nbindex.floating', 'nbindex.numbered', 'nbindex.utils', 'matplotlib', 'distutils', 'distutils.version', 'matplotlib.cbook', 'gzip', 'numpy', 'numpy._globals', 'numpy.__config__', 'numpy.version', 'numpy._distributor_init', 'numpy.core', 'numpy.core.multiarray', 'numpy.core.overrides', 'numpy.core._multiarray_umath', 'numpy.compat', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.core.umath', 'numpy.core.numerictypes', 'numpy.core._string_helpers', 'numpy.core._type_aliases', 'numpy.core._dtype', 'numpy.core.numeric', 'numpy.core.shape_base', 'numpy.core._asarray', 'numpy.core.fromnumeric', 'numpy.core._methods', 'numpy.core._exceptions', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._add_newdocs', 'numpy.core._multiarray_tests', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'numpy._pytesttester', 'numpy.lib', 'numpy.lib.mixins', 'numpy.lib.scimath', 'numpy.lib.type_check', 'numpy.lib.ufunclike', 'numpy.lib.index_tricks', 'numpy.matrixlib', 'numpy.matrixlib.defmatrix', 'numpy.linalg', 'numpy.linalg.linalg', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.lib.function_base', 'numpy.lib.histograms', 'numpy.lib.stride_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.npyio', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.financial', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.fft', 'numpy.fft._pocketfft', 'numpy.fft._pocketfft_internal', 'numpy.fft.helper', 'numpy.polynomial', 'numpy.polynomial.polynomial', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.random', 'numpy.random._pickle', 'numpy.random.mtrand', 'numpy.random._bit_generator', '_cython_0_29_16', 'numpy.random._common', 'secrets', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.ctypeslib', 'numpy.ma', 'numpy.ma.core', 'numpy.ma.extras', 'matplotlib.cbook.deprecation', 'matplotlib.rcsetup', 'matplotlib.fontconfig_pattern', 'pyparsing', 'matplotlib.colors', 'matplotlib.docstring', 'matplotlib._color_data', 'cycler', 'matplotlib._version', 'matplotlib.ft2font', 'kiwisolver']
2020-10-12 15:20:58,838 [28878] DEBUG    matplotlib:278: [JupyterRequire] CACHEDIR=/home/wfct0p/.cache/matplotlib
2020-10-12 15:20:58,843 [28878] DEBUG    matplotlib.font_manager:1348: [JupyterRequire] Using fontManager instance from /home/wfct0p/.cache/matplotlib/fontlist-v310.json
2020-10-12 15:20:59,052 [28878] DEBUG    matplotlib.pyplot:225: [JupyterRequire] Loaded backend module://ipykernel.pylab.backend_inline version unknown.
2020-10-12 15:20:59,057 [28878] DEBUG    matplotlib.pyplot:225: [JupyterRequire] Loaded backend module://ipykernel.pylab.backend_inline version unknown.
2020-10-12 15:20:59,066 [28878] WARNING  py.warnings:99: [JupyterRequire] /opt/conda/lib/python3.7/site-packages/IPython/core/magics/pylab.py:160: UserWarning: pylab import has clobbered these variables: ['floating']
`%matplotlib` prevents importing * from pylab and numpy
  "\n`%matplotlib` prevents importing * from pylab and numpy"

2020-10-12 15:20:59,479 [28878] DEBUG    shapely.geos:73: [JupyterRequire] Found GEOS DLL: <CDLL '/home/wfct0p/.local/lib/python3.7/site-packages/shapely/.libs/libgeos_c-5031f9ac.so.1.13.1', handle 55581ea810d0 at 0x7fb854f2f710>, using it.
2020-10-12 15:20:59,497 [28878] DEBUG    shapely.geos:38: [JupyterRequire] Trying `CDLL(libc.so.6)`
2020-10-12 15:20:59,497 [28878] DEBUG    shapely.geos:55: [JupyterRequire] Library path: 'libc.so.6'
2020-10-12 15:20:59,504 [28878] DEBUG    shapely.geos:56: [JupyterRequire] DLL: <CDLL 'libc.so.6', handle 7fb8a57ef4f0 at 0x7fb854f2f748>
2020-10-12 15:20:59,679 [28878] DEBUG    Fiona:143: [JupyterRequire] Set GDAL_DATA = '/opt/conda/share/gdal'
2020-10-12 15:20:59,680 [28878] DEBUG    Fiona:143: [JupyterRequire] Set PROJ_LIB = '/opt/conda/share/proj'
2020-10-12 15:21:00,465 [28878] DEBUG    matplotlib.pyplot:225: [JupyterRequire] Loaded backend module://ipykernel.pylab.backend_inline version unknown.
2020-10-12 15:22:48,055 [28878] DEBUG    matplotlib.pyplot:225: [JupyterRequire] Loaded backend module://ipykernel.pylab.backend_inline version unknown.
2020-10-12 15:25:08,505 [28878] DEBUG    fiona:287: [JupyterRequire] Creating a not-responsible GDALEnv in drivers()
2020-10-12 15:25:08,506 [28878] DEBUG    Fiona:75: [JupyterRequire] GDAL_DATA: /opt/conda/share/gdal
2020-10-12 15:25:08,509 [28878] DEBUG    Fiona:75: [JupyterRequire] PROJ_LIB: /opt/conda/share/proj
2020-10-12 15:25:08,511 [28878] DEBUG    Fiona:145: [JupyterRequire] GDAL_DATA: /opt/conda/share/gdal
2020-10-12 15:25:08,513 [28878] DEBUG    Fiona:145: [JupyterRequire] PROJ_LIB: /opt/conda/share/proj
2020-10-12 15:25:08,515 [28878] DEBUG    Fiona:153: [JupyterRequire] Userencoding: None
2020-10-12 15:25:08,526 [28878] DEBUG    Fiona:203: [JupyterRequire] Got coordinate system
2020-10-12 15:25:08,529 [28878] DEBUG    Fiona:210: [JupyterRequire] Got coordinate system
2020-10-12 15:25:08,531 [28878] DEBUG    Fiona:247: [JupyterRequire] Index: 0
2020-10-12 15:25:08,646 [28878] DEBUG    fiona.collection:404: [JupyterRequire] Flushed buffer
2020-10-12 15:25:08,646 [28878] DEBUG    fiona.collection:406: [JupyterRequire] Stopped session
2020-10-12 15:25:09,186 [28878] DEBUG    fiona:287: [JupyterRequire] Creating a not-responsible GDALEnv in drivers()
2020-10-12 15:25:09,189 [28878] DEBUG    Fiona:75: [JupyterRequire] GDAL_DATA: /opt/conda/share/gdal
2020-10-12 15:25:09,191 [28878] DEBUG    Fiona:75: [JupyterRequire] PROJ_LIB: /opt/conda/share/proj
2020-10-12 15:25:09,193 [28878] DEBUG    Fiona:145: [JupyterRequire] GDAL_DATA: /opt/conda/share/gdal
2020-10-12 15:25:09,194 [28878] DEBUG    Fiona:145: [JupyterRequire] PROJ_LIB: /opt/conda/share/proj
2020-10-12 15:25:09,196 [28878] DEBUG    Fiona:153: [JupyterRequire] Userencoding: None
2020-10-12 15:25:09,200 [28878] DEBUG    Fiona:203: [JupyterRequire] Got coordinate system
2020-10-12 15:25:09,202 [28878] DEBUG    Fiona:210: [JupyterRequire] Got coordinate system
2020-10-12 15:25:09,204 [28878] DEBUG    Fiona:247: [JupyterRequire] Index: 0
2020-10-12 15:25:09,209 [28878] DEBUG    fiona.collection:404: [JupyterRequire] Flushed buffer
2020-10-12 15:25:09,211 [28878] DEBUG    fiona.collection:406: [JupyterRequire] Stopped session
2020-10-12 15:26:10,101 [28878] DEBUG    matplotlib.font_manager:1246: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=20.0.
2020-10-12 15:26:10,102 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
2020-10-12 15:26:10,105 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
2020-10-12 15:26:10,107 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
2020-10-12 15:26:10,108 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-12 15:26:10,110 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
2020-10-12 15:26:10,112 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
2020-10-12 15:26:10,114 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2020-10-12 15:26:10,116 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
2020-10-12 15:26:10,117 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-10-12 15:26:10,119 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2020-10-12 15:26:10,121 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2020-10-12 15:26:10,122 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
2020-10-12 15:26:10,124 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 0.33499999999999996
2020-10-12 15:26:10,126 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2020-10-12 15:26:10,127 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
2020-10-12 15:26:10,129 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2020-10-12 15:26:10,131 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
2020-10-12 15:26:10,132 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2020-10-12 15:26:10,134 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-10-12 15:26:10,135 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-12 15:26:10,137 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-12 15:26:10,138 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2020-10-12 15:26:10,140 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
2020-10-12 15:26:10,142 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2020-10-12 15:26:10,143 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2020-10-12 15:26:10,145 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
2020-10-12 15:26:10,147 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2020-10-12 15:26:10,148 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
2020-10-12 15:26:10,150 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
2020-10-12 15:26:10,152 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2020-10-12 15:26:10,153 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-12 15:26:10,155 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2020-10-12 15:26:10,157 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2020-10-12 15:26:10,160 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2020-10-12 15:26:10,162 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
2020-10-12 15:26:10,163 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 1.335
2020-10-12 15:26:10,165 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
2020-10-12 15:26:10,167 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2020-10-12 15:26:10,168 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-Heavy.ttf) normal normal heavy normal>) = 10.43
2020-10-12 15:26:10,170 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-12 15:26:10,171 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-BlackItalic.ttf) italic normal black normal>) = 11.525
2020-10-12 15:26:10,173 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'GFS Baskerville' (GFSBaskerville.otf) normal normal regular normal>) = 10.05
2020-10-12 15:26:10,175 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-BoldItalic.ttf) italic normal bold condensed>) = 11.535
2020-10-12 15:26:10,176 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-BoldOblique.ttf) oblique normal bold condensed>) = 1.535
2020-10-12 15:26:10,179 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-ExtraLight.ttf) normal normal light normal>) = 0.24
2020-10-12 15:26:10,180 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-SemiboldItalic.ttf) italic normal semibold normal>) = 11.24
2020-10-12 15:26:10,183 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed.ttf) normal normal 400 condensed>) = 10.25
2020-10-12 15:26:10,184 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-Thin.ttf) normal normal 400 normal>) = 10.05
2020-10-12 15:26:10,187 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-HairlineItalic.ttf) italic normal 400 normal>) = 11.05
2020-10-12 15:26:10,188 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-Italic.ttf) italic normal 400 condensed>) = 11.25
2020-10-12 15:26:10,191 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-12 15:26:10,193 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-Light.ttf) normal normal light normal>) = 10.24
2020-10-12 15:26:10,194 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-LightItalic.ttf) italic normal light normal>) = 11.24
2020-10-12 15:26:10,196 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-Bold.ttf) normal normal bold condensed>) = 10.535
2020-10-12 15:26:10,198 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-Black.ttf) normal normal black normal>) = 10.525
2020-10-12 15:26:10,199 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-Semibold.ttf) normal normal semibold normal>) = 10.24
2020-10-12 15:26:10,201 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-Medium.ttf) normal normal medium normal>) = 10.145
2020-10-12 15:26:10,203 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-Oblique.ttf) oblique normal 400 condensed>) = 1.25
2020-10-12 15:26:10,205 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-Hairline.ttf) normal normal 400 normal>) = 10.05
2020-10-12 15:26:10,207 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-12 15:26:10,209 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
2020-10-12 15:26:10,210 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed.ttf) normal normal 400 condensed>) = 0.25
2020-10-12 15:26:10,212 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-12 15:26:10,216 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-HeavyItalic.ttf) italic normal heavy normal>) = 11.43
2020-10-12 15:26:10,217 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-MediumItalic.ttf) italic normal medium normal>) = 11.145
2020-10-12 15:26:10,219 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-ThinItalic.ttf) italic normal 400 normal>) = 11.05
2020-10-12 15:26:10,222 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-12 15:26:10,223 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Math TeX Gyre' (DejaVuMathTeXGyre.ttf) normal normal regular normal>) = 10.05
2020-10-12 15:26:10,225 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-Bold.ttf) normal normal bold condensed>) = 0.5349999999999999
2020-10-12 15:26:10,226 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'GFS Porson' (GFSPorson.otf) normal normal 400 normal>) = 10.05
2020-10-12 15:26:10,228 [28878] DEBUG    matplotlib.font_manager:1281: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=20.0 to DejaVu Sans ('/home/wfct0p/.local/lib/python3.7/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
2020-10-12 15:26:10,275 [28878] DEBUG    matplotlib.font_manager:1246: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2020-10-12 15:26:10,277 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
2020-10-12 15:26:10,279 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
2020-10-12 15:26:10,281 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
2020-10-12 15:26:10,283 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-12 15:26:10,285 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
2020-10-12 15:26:10,287 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
2020-10-12 15:26:10,289 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2020-10-12 15:26:10,290 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
2020-10-12 15:26:10,292 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-10-12 15:26:10,294 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2020-10-12 15:26:10,295 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2020-10-12 15:26:10,297 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
2020-10-12 15:26:10,299 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 0.33499999999999996
2020-10-12 15:26:10,301 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2020-10-12 15:26:10,302 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
2020-10-12 15:26:10,304 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2020-10-12 15:26:10,306 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
2020-10-12 15:26:10,308 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2020-10-12 15:26:10,311 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-10-12 15:26:10,313 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-12 15:26:10,314 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-12 15:26:10,316 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2020-10-12 15:26:10,318 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
2020-10-12 15:26:10,320 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2020-10-12 15:26:10,323 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2020-10-12 15:26:10,325 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
2020-10-12 15:26:10,328 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2020-10-12 15:26:10,331 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
2020-10-12 15:26:10,333 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
2020-10-12 15:26:10,335 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2020-10-12 15:26:10,337 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-12 15:26:10,341 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2020-10-12 15:26:10,343 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2020-10-12 15:26:10,345 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2020-10-12 15:26:10,347 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
2020-10-12 15:26:10,349 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 1.335
2020-10-12 15:26:10,351 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
2020-10-12 15:26:10,353 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2020-10-12 15:26:10,355 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-Heavy.ttf) normal normal heavy normal>) = 10.43
2020-10-12 15:26:10,357 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-12 15:26:10,359 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-BlackItalic.ttf) italic normal black normal>) = 11.525
2020-10-12 15:26:10,361 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'GFS Baskerville' (GFSBaskerville.otf) normal normal regular normal>) = 10.05
2020-10-12 15:26:10,363 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-BoldItalic.ttf) italic normal bold condensed>) = 11.535
2020-10-12 15:26:10,365 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-BoldOblique.ttf) oblique normal bold condensed>) = 1.535
2020-10-12 15:26:10,367 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-ExtraLight.ttf) normal normal light normal>) = 0.24
2020-10-12 15:26:10,374 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-SemiboldItalic.ttf) italic normal semibold normal>) = 11.24
2020-10-12 15:26:10,377 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed.ttf) normal normal 400 condensed>) = 10.25
2020-10-12 15:26:10,379 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-Thin.ttf) normal normal 400 normal>) = 10.05
2020-10-12 15:26:10,381 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-HairlineItalic.ttf) italic normal 400 normal>) = 11.05
2020-10-12 15:26:10,383 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-Italic.ttf) italic normal 400 condensed>) = 11.25
2020-10-12 15:26:10,386 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-12 15:26:10,388 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-Light.ttf) normal normal light normal>) = 10.24
2020-10-12 15:26:10,389 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-LightItalic.ttf) italic normal light normal>) = 11.24
2020-10-12 15:26:10,391 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-Bold.ttf) normal normal bold condensed>) = 10.535
2020-10-12 15:26:10,394 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-Black.ttf) normal normal black normal>) = 10.525
2020-10-12 15:26:10,397 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-Semibold.ttf) normal normal semibold normal>) = 10.24
2020-10-12 15:26:10,402 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-Medium.ttf) normal normal medium normal>) = 10.145
2020-10-12 15:26:10,405 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-Oblique.ttf) oblique normal 400 condensed>) = 1.25
2020-10-12 15:26:10,407 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-Hairline.ttf) normal normal 400 normal>) = 10.05
2020-10-12 15:26:10,409 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-12 15:26:10,411 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
2020-10-12 15:26:10,413 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed.ttf) normal normal 400 condensed>) = 0.25
2020-10-12 15:26:10,415 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-12 15:26:10,417 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-HeavyItalic.ttf) italic normal heavy normal>) = 11.43
2020-10-12 15:26:10,418 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-MediumItalic.ttf) italic normal medium normal>) = 11.145
2020-10-12 15:26:10,420 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-ThinItalic.ttf) italic normal 400 normal>) = 11.05
2020-10-12 15:26:10,424 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-12 15:26:10,425 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Math TeX Gyre' (DejaVuMathTeXGyre.ttf) normal normal regular normal>) = 10.05
2020-10-12 15:26:10,427 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-Bold.ttf) normal normal bold condensed>) = 0.5349999999999999
2020-10-12 15:26:10,430 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'GFS Porson' (GFSPorson.otf) normal normal 400 normal>) = 10.05
2020-10-12 15:26:10,431 [28878] DEBUG    matplotlib.font_manager:1281: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('/home/wfct0p/.local/lib/python3.7/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
2020-10-12 15:26:10,448 [28878] DEBUG    matplotlib.font_manager:1246: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=15.0.
2020-10-12 15:26:10,451 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
2020-10-12 15:26:10,453 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
2020-10-12 15:26:10,454 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
2020-10-12 15:26:10,456 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-12 15:26:10,458 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
2020-10-12 15:26:10,459 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
2020-10-12 15:26:10,461 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2020-10-12 15:26:10,462 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
2020-10-12 15:26:10,464 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-10-12 15:26:10,466 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2020-10-12 15:26:10,468 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2020-10-12 15:26:10,470 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
2020-10-12 15:26:10,471 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 0.33499999999999996
2020-10-12 15:26:10,473 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2020-10-12 15:26:10,475 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
2020-10-12 15:26:10,477 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2020-10-12 15:26:10,478 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
2020-10-12 15:26:10,480 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2020-10-12 15:26:10,481 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-10-12 15:26:10,483 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-12 15:26:10,486 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-12 15:26:10,488 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2020-10-12 15:26:10,490 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
2020-10-12 15:26:10,492 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2020-10-12 15:26:10,493 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2020-10-12 15:26:10,500 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
2020-10-12 15:26:10,504 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2020-10-12 15:26:10,509 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
2020-10-12 15:26:10,512 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
2020-10-12 15:26:10,514 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2020-10-12 15:26:10,516 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-12 15:26:10,518 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2020-10-12 15:26:10,521 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2020-10-12 15:26:10,523 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2020-10-12 15:26:10,524 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
2020-10-12 15:26:10,527 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 1.335
2020-10-12 15:26:10,529 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
2020-10-12 15:26:10,531 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2020-10-12 15:26:10,533 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-Heavy.ttf) normal normal heavy normal>) = 10.43
2020-10-12 15:26:10,534 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-12 15:26:10,536 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-BlackItalic.ttf) italic normal black normal>) = 11.525
2020-10-12 15:26:10,543 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'GFS Baskerville' (GFSBaskerville.otf) normal normal regular normal>) = 10.05
2020-10-12 15:26:10,545 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-BoldItalic.ttf) italic normal bold condensed>) = 11.535
2020-10-12 15:26:10,548 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-BoldOblique.ttf) oblique normal bold condensed>) = 1.535
2020-10-12 15:26:10,550 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-ExtraLight.ttf) normal normal light normal>) = 0.24
2020-10-12 15:26:10,553 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-SemiboldItalic.ttf) italic normal semibold normal>) = 11.24
2020-10-12 15:26:10,555 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed.ttf) normal normal 400 condensed>) = 10.25
2020-10-12 15:26:10,556 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-Thin.ttf) normal normal 400 normal>) = 10.05
2020-10-12 15:26:10,558 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-HairlineItalic.ttf) italic normal 400 normal>) = 11.05
2020-10-12 15:26:10,560 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-Italic.ttf) italic normal 400 condensed>) = 11.25
2020-10-12 15:26:10,561 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-12 15:26:10,563 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-Light.ttf) normal normal light normal>) = 10.24
2020-10-12 15:26:10,565 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-LightItalic.ttf) italic normal light normal>) = 11.24
2020-10-12 15:26:10,566 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-Bold.ttf) normal normal bold condensed>) = 10.535
2020-10-12 15:26:10,568 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-Black.ttf) normal normal black normal>) = 10.525
2020-10-12 15:26:10,570 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-Semibold.ttf) normal normal semibold normal>) = 10.24
2020-10-12 15:26:10,572 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-Medium.ttf) normal normal medium normal>) = 10.145
2020-10-12 15:26:10,576 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-Oblique.ttf) oblique normal 400 condensed>) = 1.25
2020-10-12 15:26:10,578 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-Hairline.ttf) normal normal 400 normal>) = 10.05
2020-10-12 15:26:10,580 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-12 15:26:10,582 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
2020-10-12 15:26:10,583 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed.ttf) normal normal 400 condensed>) = 0.25
2020-10-12 15:26:10,586 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-12 15:26:10,588 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-HeavyItalic.ttf) italic normal heavy normal>) = 11.43
2020-10-12 15:26:10,590 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-MediumItalic.ttf) italic normal medium normal>) = 11.145
2020-10-12 15:26:10,593 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-ThinItalic.ttf) italic normal 400 normal>) = 11.05
2020-10-12 15:26:10,597 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-12 15:26:10,600 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Math TeX Gyre' (DejaVuMathTeXGyre.ttf) normal normal regular normal>) = 10.05
2020-10-12 15:26:10,603 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-Bold.ttf) normal normal bold condensed>) = 0.5349999999999999
2020-10-12 15:26:10,606 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'GFS Porson' (GFSPorson.otf) normal normal 400 normal>) = 10.05
2020-10-12 15:26:10,608 [28878] DEBUG    matplotlib.font_manager:1281: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=15.0 to DejaVu Sans ('/home/wfct0p/.local/lib/python3.7/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
2020-10-12 15:29:15,453 [28878] DEBUG    matplotlib.font_manager:1246: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0.
2020-10-12 15:29:15,454 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
2020-10-12 15:29:15,456 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
2020-10-12 15:29:15,457 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
2020-10-12 15:29:15,460 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-12 15:29:15,462 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
2020-10-12 15:29:15,464 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
2020-10-12 15:29:15,465 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2020-10-12 15:29:15,467 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
2020-10-12 15:29:15,469 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-10-12 15:29:15,471 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2020-10-12 15:29:15,473 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2020-10-12 15:29:15,475 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
2020-10-12 15:29:15,477 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 0.33499999999999996
2020-10-12 15:29:15,478 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2020-10-12 15:29:15,480 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
2020-10-12 15:29:15,483 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2020-10-12 15:29:15,485 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
2020-10-12 15:29:15,487 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2020-10-12 15:29:15,490 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-10-12 15:29:15,492 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-12 15:29:15,494 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-12 15:29:15,495 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2020-10-12 15:29:15,497 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
2020-10-12 15:29:15,499 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2020-10-12 15:29:15,500 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2020-10-12 15:29:15,502 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
2020-10-12 15:29:15,504 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2020-10-12 15:29:15,506 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
2020-10-12 15:29:15,508 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
2020-10-12 15:29:15,510 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2020-10-12 15:29:15,511 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-12 15:29:15,514 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2020-10-12 15:29:15,515 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2020-10-12 15:29:15,517 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2020-10-12 15:29:15,518 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
2020-10-12 15:29:15,520 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 1.335
2020-10-12 15:29:15,521 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
2020-10-12 15:29:15,523 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2020-10-12 15:29:15,525 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-Heavy.ttf) normal normal heavy normal>) = 10.43
2020-10-12 15:29:15,526 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-12 15:29:15,528 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-BlackItalic.ttf) italic normal black normal>) = 11.525
2020-10-12 15:29:15,530 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'GFS Baskerville' (GFSBaskerville.otf) normal normal regular normal>) = 10.05
2020-10-12 15:29:15,531 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-BoldItalic.ttf) italic normal bold condensed>) = 11.535
2020-10-12 15:29:15,533 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-BoldOblique.ttf) oblique normal bold condensed>) = 1.535
2020-10-12 15:29:15,535 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-ExtraLight.ttf) normal normal light normal>) = 0.24
2020-10-12 15:29:15,536 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-SemiboldItalic.ttf) italic normal semibold normal>) = 11.24
2020-10-12 15:29:15,538 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed.ttf) normal normal 400 condensed>) = 10.25
2020-10-12 15:29:15,540 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-Thin.ttf) normal normal 400 normal>) = 10.05
2020-10-12 15:29:15,541 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-HairlineItalic.ttf) italic normal 400 normal>) = 11.05
2020-10-12 15:29:15,543 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-Italic.ttf) italic normal 400 condensed>) = 11.25
2020-10-12 15:29:15,544 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-12 15:29:15,546 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-Light.ttf) normal normal light normal>) = 10.24
2020-10-12 15:29:15,548 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-LightItalic.ttf) italic normal light normal>) = 11.24
2020-10-12 15:29:15,549 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-Bold.ttf) normal normal bold condensed>) = 10.535
2020-10-12 15:29:15,550 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-Black.ttf) normal normal black normal>) = 10.525
2020-10-12 15:29:15,552 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-Semibold.ttf) normal normal semibold normal>) = 10.24
2020-10-12 15:29:15,554 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-Medium.ttf) normal normal medium normal>) = 10.145
2020-10-12 15:29:15,555 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-Oblique.ttf) oblique normal 400 condensed>) = 1.25
2020-10-12 15:29:15,557 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-Hairline.ttf) normal normal 400 normal>) = 10.05
2020-10-12 15:29:15,559 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-12 15:29:15,561 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
2020-10-12 15:29:15,562 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed.ttf) normal normal 400 condensed>) = 0.25
2020-10-12 15:29:15,565 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-12 15:29:15,567 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-HeavyItalic.ttf) italic normal heavy normal>) = 11.43
2020-10-12 15:29:15,569 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-MediumItalic.ttf) italic normal medium normal>) = 11.145
2020-10-12 15:29:15,571 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-ThinItalic.ttf) italic normal 400 normal>) = 11.05
2020-10-12 15:29:15,574 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-12 15:29:15,576 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Math TeX Gyre' (DejaVuMathTeXGyre.ttf) normal normal regular normal>) = 10.05
2020-10-12 15:29:15,578 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-Bold.ttf) normal normal bold condensed>) = 0.5349999999999999
2020-10-12 15:29:15,581 [28878] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'GFS Porson' (GFSPorson.otf) normal normal 400 normal>) = 10.05
2020-10-12 15:29:15,583 [28878] DEBUG    matplotlib.font_manager:1281: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0 to DejaVu Sans ('/home/wfct0p/.local/lib/python3.7/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
2020-10-12 15:30:51,283 [28998] DEBUG    matplotlib:278: [JupyterRequire] CONFIGDIR=/home/wfct0p/.config/matplotlib
2020-10-12 15:30:51,284 [28998] DEBUG    matplotlib:278: [JupyterRequire] (private) matplotlib data path: /home/wfct0p/.local/lib/python3.7/site-packages/matplotlib/mpl-data
2020-10-12 15:30:51,292 [28998] DEBUG    matplotlib:278: [JupyterRequire] matplotlib data path: /home/wfct0p/.local/lib/python3.7/site-packages/matplotlib/mpl-data
2020-10-12 15:30:51,294 [28998] DEBUG    matplotlib:1009: [JupyterRequire] loaded rc file /home/wfct0p/.local/lib/python3.7/site-packages/matplotlib/mpl-data/matplotlibrc
2020-10-12 15:30:51,300 [28998] DEBUG    matplotlib:1598: [JupyterRequire] matplotlib version 3.2.1
2020-10-12 15:30:51,302 [28998] DEBUG    matplotlib:1599: [JupyterRequire] interactive is False
2020-10-12 15:30:51,304 [28998] DEBUG    matplotlib:1600: [JupyterRequire] platform is linux
2020-10-12 15:30:51,307 [28998] DEBUG    matplotlib:1601: [JupyterRequire] loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', 'zipimport', '_frozen_importlib_external', '_io', 'marshal', 'posix', 'encodings', 'codecs', '_codecs', 'encodings.aliases', 'encodings.utf_8', '_signal', '__main__', 'encodings.latin_1', 'io', 'abc', '_abc', '_bootlocale', '_locale', 'site', 'os', 'stat', '_stat', 'posixpath', 'genericpath', 'os.path', '_collections_abc', '_sitebuiltins', 'types', 'importlib', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib.util', 'importlib.abc', 'importlib.machinery', 'contextlib', 'collections', 'operator', '_operator', 'keyword', 'heapq', '_heapq', 'itertools', 'reprlib', '_collections', 'functools', '_functools', 'mpl_toolkits', 'sphinxcontrib', 'runpy', 'pkgutil', 'weakref', '_weakrefset', 'ipykernel', 'ipykernel._version', 'ipykernel.connect', '__future__', 'json', 'json.decoder', 're', 'enum', 'sre_compile', '_sre', 'sre_parse', 'sre_constants', 'copyreg', 'json.scanner', '_json', 'json.encoder', 'subprocess', 'time', 'signal', 'errno', '_posixsubprocess', 'select', 'selectors', 'collections.abc', 'math', 'threading', 'traceback', 'linecache', 'tokenize', 'token', 'IPython', 'IPython.core', 'IPython.core.getipython', 'IPython.core.release', 'IPython.core.application', 'atexit', 'copy', 'glob', 'fnmatch', 'logging', 'string', '_string', 'shutil', 'zlib', 'bz2', '_compression', '_bz2', 'lzma', '_lzma', 'pwd', 'grp', 'traitlets', 'traitlets.traitlets', 'inspect', 'dis', 'opcode', '_opcode', 'six', 'struct', '_struct', 'traitlets.utils', 'traitlets.utils.getargspec', 'traitlets.utils.importstring', 'ipython_genutils', 'ipython_genutils._version', 'ipython_genutils.py3compat', 'ipython_genutils.encoding', 'locale', 'platform', 'traitlets.utils.sentinel', 'traitlets.utils.bunch', 'traitlets._version', 'traitlets.config', 'traitlets.config.application', 'decorator', 'traitlets.config.configurable', 'traitlets.config.loader', 'argparse', 'gettext', 'ast', '_ast', 'ipython_genutils.path', 'random', 'hashlib', '_hashlib', '_blake2', '_sha3', 'bisect', '_bisect', '_random', 'ipython_genutils.text', 'textwrap', 'ipython_genutils.importstring', 'IPython.core.crashhandler', 'pprint', 'IPython.core.ultratb', 'pydoc', 'urllib', 'urllib.parse', 'IPython.core.debugger', 'bdb', 'IPython.utils', 'IPython.utils.PyColorize', 'IPython.utils.coloransi', 'IPython.utils.ipstruct', 'IPython.utils.colorable', 'pygments', 'pygments.util', 'IPython.utils.py3compat', 'IPython.utils.encoding', 'IPython.core.excolors', 'IPython.testing', 'IPython.testing.skipdoctest', 'pdb', 'cmd', 'code', 'codeop', 'IPython.core.display_trap', 'IPython.utils.path', 'IPython.utils.process', 'IPython.utils._process_posix', 'pexpect', 'pexpect.exceptions', 'pexpect.utils', 'pexpect.expect', 'pexpect.pty_spawn', 'pty', 'tty', 'termios', 'ptyprocess', 'ptyprocess.ptyprocess', 'fcntl', 'resource', 'ptyprocess.util', 'pexpect.spawnbase', 'pexpect.run', 'IPython.utils._process_common', 'shlex', 'IPython.utils.decorators', 'IPython.utils.data', 'IPython.utils.terminal', 'IPython.utils.sysinfo', 'IPython.utils._sysinfo', 'IPython.core.profiledir', 'IPython.paths', 'tempfile', 'IPython.utils.importstring', 'IPython.terminal', 'IPython.terminal.embed', 'IPython.core.compilerop', 'IPython.core.magic_arguments', 'IPython.core.error', 'IPython.utils.text', 'pathlib', 'ntpath', 'IPython.core.magic', 'getopt', 'IPython.core.oinspect', 'IPython.core.page', 'IPython.core.display', 'binascii', 'mimetypes', 'IPython.lib', 'IPython.lib.security', 'getpass', 'IPython.lib.pretty', 'datetime', '_datetime', 'IPython.utils.openpy', 'IPython.utils.dir2', 'IPython.utils.wildcard', 'pygments.lexers', 'pygments.lexers._mapping', 'pygments.modeline', 'pygments.plugin', 'pygments.lexers.python', 'pygments.lexer', 'pygments.filter', 'pygments.filters', 'pygments.token', 'pygments.regexopt', 'pygments.unistring', 'pygments.formatters', 'pygments.formatters._mapping', 'pygments.formatters.html', 'pygments.formatter', 'pygments.styles', 'IPython.core.inputtransformer2', 'typing', 'typing.io', 'typing.re', 'IPython.core.interactiveshell', 'asyncio', 'asyncio.base_events', 'concurrent', 'concurrent.futures', 'concurrent.futures._base', 'socket', '_socket', 'ssl', '_ssl', 'base64', 'asyncio.constants', 'asyncio.coroutines', 'asyncio.base_futures', 'asyncio.format_helpers', 'asyncio.log', 'asyncio.events', 'contextvars', '_contextvars', 'asyncio.base_tasks', '_asyncio', 'asyncio.futures', 'asyncio.protocols', 'asyncio.sslproto', 'asyncio.transports', 'asyncio.tasks', 'asyncio.locks', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.unix_events', 'asyncio.base_subprocess', 'asyncio.selector_events', 'pickleshare', 'pickle', '_compat_pickle', '_pickle', 'IPython.core.prefilter', 'IPython.core.autocall', 'IPython.core.macro', 'IPython.core.splitinput', 'IPython.core.alias', 'IPython.core.builtin_trap', 'IPython.core.events', 'backcall', 'backcall.backcall', 'IPython.core.displayhook', 'IPython.core.displaypub', 'IPython.core.extensions', 'IPython.core.formatters', 'IPython.utils.sentinel', 'IPython.core.history', 'sqlite3', 'sqlite3.dbapi2', '_sqlite3', 'IPython.core.logger', 'IPython.core.payload', 'IPython.core.usage', 'IPython.display', 'IPython.lib.display', 'html', 'html.entities', 'IPython.utils.io', 'IPython.utils.capture', 'IPython.utils.strdispatch', 'IPython.core.hooks', 'IPython.utils.syspathcontext', 'IPython.utils.tempdir', 'IPython.utils.contexts', 'IPython.core.async_helpers', 'IPython.terminal.interactiveshell', 'prompt_toolkit', 'prompt_toolkit.application', 'prompt_toolkit.application.application', 'prompt_toolkit.buffer', 'prompt_toolkit.application.current', 'prompt_toolkit.eventloop', 'prompt_toolkit.eventloop.base', 'prompt_toolkit.log', 'prompt_toolkit.eventloop.coroutine', 'prompt_toolkit.eventloop.defaults', 'prompt_toolkit.utils', 'six.moves', 'wcwidth', 'wcwidth.wcwidth', 'wcwidth.table_wide', 'wcwidth.table_zero', 'prompt_toolkit.cache', 'prompt_toolkit.eventloop.future', 'prompt_toolkit.eventloop.context', 'prompt_toolkit.eventloop.async_generator', 'queue', '_queue', 'six.moves.queue', 'prompt_toolkit.eventloop.event', 'prompt_toolkit.application.run_in_terminal', 'prompt_toolkit.auto_suggest', 'prompt_toolkit.filters', 'prompt_toolkit.filters.base', 'prompt_toolkit.filters.app', 'prompt_toolkit.enums', 'prompt_toolkit.filters.utils', 'prompt_toolkit.filters.cli', 'prompt_toolkit.clipboard', 'prompt_toolkit.clipboard.base', 'prompt_toolkit.selection', 'prompt_toolkit.clipboard.in_memory', 'prompt_toolkit.completion', 'prompt_toolkit.completion.base', 'prompt_toolkit.completion.filesystem', 'prompt_toolkit.completion.word_completer', 'prompt_toolkit.completion.fuzzy_completer', 'prompt_toolkit.document', 'prompt_toolkit.history', 'prompt_toolkit.search', 'prompt_toolkit.key_binding', 'prompt_toolkit.key_binding.key_bindings', 'prompt_toolkit.keys', 'prompt_toolkit.key_binding.vi_state', 'prompt_toolkit.validation', 'prompt_toolkit.input', 'prompt_toolkit.input.base', 'prompt_toolkit.input.defaults', 'prompt_toolkit.input.typeahead', 'prompt_toolkit.key_binding.bindings', 'prompt_toolkit.key_binding.bindings.page_navigation', 'prompt_toolkit.key_binding.bindings.scroll', 'prompt_toolkit.key_binding.defaults', 'prompt_toolkit.key_binding.bindings.basic', 'prompt_toolkit.key_binding.key_processor', 'prompt_toolkit.key_binding.bindings.named_commands', 'prompt_toolkit.key_binding.bindings.completion', 'prompt_toolkit.key_binding.bindings.emacs', 'prompt_toolkit.key_binding.bindings.vi', 'prompt_toolkit.input.vt100_parser', 'prompt_toolkit.input.ansi_escape_sequences', 'prompt_toolkit.key_binding.digraphs', 'prompt_toolkit.key_binding.bindings.mouse', 'prompt_toolkit.layout', 'prompt_toolkit.layout.containers', 'prompt_toolkit.layout.controls', 'prompt_toolkit.formatted_text', 'prompt_toolkit.formatted_text.base', 'prompt_toolkit.formatted_text.html', 'xml', 'xml.dom', 'xml.dom.domreg', 'xml.dom.minidom', 'xml.dom.minicompat', 'xml.dom.xmlbuilder', 'xml.dom.NodeFilter', 'prompt_toolkit.formatted_text.ansi', 'prompt_toolkit.output', 'prompt_toolkit.output.base', 'prompt_toolkit.layout.screen', 'prompt_toolkit.output.defaults', 'prompt_toolkit.output.color_depth', 'prompt_toolkit.output.vt100', 'prompt_toolkit.styles', 'prompt_toolkit.styles.base', 'prompt_toolkit.styles.defaults', 'prompt_toolkit.styles.style', 'prompt_toolkit.styles.named_colors', 'prompt_toolkit.styles.pygments', 'prompt_toolkit.styles.style_transformation', 'colorsys', 'array', 'prompt_toolkit.formatted_text.pygments', 'prompt_toolkit.formatted_text.utils', 'prompt_toolkit.lexers', 'prompt_toolkit.lexers.base', 'prompt_toolkit.lexers.pygments', 'prompt_toolkit.mouse_events', 'prompt_toolkit.layout.processors', 'prompt_toolkit.layout.utils', 'prompt_toolkit.layout.dimension', 'prompt_toolkit.layout.margins', 'prompt_toolkit.layout.layout', 'prompt_toolkit.layout.menus', 'prompt_toolkit.renderer', 'prompt_toolkit.layout.mouse_handlers', 'prompt_toolkit.key_binding.bindings.cpr', 'prompt_toolkit.key_binding.emacs_state', 'prompt_toolkit.layout.dummy', 'prompt_toolkit.application.dummy', 'prompt_toolkit.shortcuts', 'prompt_toolkit.shortcuts.dialogs', 'prompt_toolkit.key_binding.bindings.focus', 'prompt_toolkit.widgets', 'prompt_toolkit.widgets.base', 'prompt_toolkit.widgets.toolbars', 'prompt_toolkit.widgets.dialogs', 'prompt_toolkit.widgets.menus', 'prompt_toolkit.shortcuts.prompt', 'prompt_toolkit.key_binding.bindings.auto_suggest', 'prompt_toolkit.key_binding.bindings.open_in_editor', 'prompt_toolkit.shortcuts.utils', 'prompt_toolkit.shortcuts.progress_bar', 'prompt_toolkit.shortcuts.progress_bar.base', 'prompt_toolkit.shortcuts.progress_bar.formatters', 'prompt_toolkit.patch_stdout', 'pygments.style', 'IPython.terminal.debugger', 'IPython.core.completer', 'unicodedata', 'IPython.core.latex_symbols', 'IPython.utils.generics', 'jedi', 'jedi.api', 'parso', 'parso.parser', 'parso.tree', 'parso._compatibility', 'parso.utils', 'parso.pgen2', 'parso.pgen2.generator', 'parso.pgen2.grammar_parser', 'parso.python', 'parso.python.tokenize', 'parso.python.token', 'parso.grammar', 'parso.python.diff', 'difflib', 'parso.python.parser', 'parso.python.tree', 'parso.python.prefix', 'parso.cache', 'gc', 'parso.python.errors', 'parso.normalizer', 'parso.python.pep8', 'parso.file_io', 'jedi._compatibility', 'jedi.parser_utils', 'jedi.debug', 'colorama', 'colorama.initialise', 'colorama.ansitowin32', 'colorama.ansi', 'colorama.winterm', 'colorama.win32', 'ctypes', '_ctypes', 'ctypes._endian', 'jedi.settings', 'jedi.cache', 'jedi.api.classes', 'jedi.evaluate', 'jedi.evaluate.utils', 'jedi.evaluate.imports', 'jedi.evaluate.sys_path', 'jedi.evaluate.cache', 'jedi.evaluate.base_context', 'jedi.common', 'jedi.common.context', 'jedi.evaluate.helpers', 'jedi.common.utils', 'jedi.evaluate.compiled', 'jedi.evaluate.compiled.context', 'jedi.evaluate.filters', 'jedi.evaluate.flow_analysis', 'jedi.evaluate.recursion', 'jedi.evaluate.lazy_context', 'jedi.evaluate.compiled.access', 'jedi.evaluate.compiled.getattr_static', 'jedi.evaluate.compiled.fake', 'jedi.evaluate.analysis', 'jedi.evaluate.context', 'jedi.evaluate.context.module', 'jedi.evaluate.context.klass', 'jedi.evaluate.context.function', 'jedi.evaluate.docstrings', 'jedi.evaluate.pep0484', 'jedi.evaluate.arguments', 'jedi.evaluate.context.iterable', 'jedi.evaluate.param', 'jedi.evaluate.context.asynchronous', 'jedi.evaluate.parser_cache', 'jedi.evaluate.context.instance', 'jedi.evaluate.syntax_tree', 'jedi.evaluate.finder', 'jedi.api.keywords', 'pydoc_data', 'pydoc_data.topics', 'jedi.api.interpreter', 'jedi.evaluate.compiled.mixed', 'jedi.api.helpers', 'jedi.api.completion', 'jedi.api.environment', 'filecmp', 'jedi.evaluate.compiled.subprocess', 'jedi.evaluate.compiled.subprocess.functions', 'jedi.api.exceptions', 'jedi.api.project', 'jedi.evaluate.usages', 'IPython.terminal.ptutils', 'IPython.terminal.shortcuts', 'IPython.terminal.magics', 'IPython.lib.clipboard', 'IPython.terminal.pt_inputhooks', 'IPython.terminal.prompts', 'IPython.terminal.ipapp', 'IPython.core.magics', 'IPython.core.magics.auto', 'IPython.core.magics.basic', 'IPython.core.magics.code', 'urllib.request', 'email', 'http', 'http.client', 'email.parser', 'email.feedparser', 'email.errors', 'email._policybase', 'email.header', 'email.quoprimime', 'email.base64mime', 'email.charset', 'email.encoders', 'quopri', 'email.utils', 'email._parseaddr', 'calendar', 'email.message', 'uu', 'email._encoded_words', 'email.iterators', 'urllib.error', 'urllib.response', 'IPython.core.magics.config', 'IPython.core.magics.display', 'IPython.core.magics.execution', 'timeit', 'cProfile', '_lsprof', 'profile', 'pstats', 'IPython.utils.module_paths', 'IPython.utils.timing', 'IPython.core.magics.extension', 'IPython.core.magics.history', 'IPython.core.magics.logging', 'IPython.core.magics.namespace', 'IPython.core.magics.osm', 'IPython.core.magics.packaging', 'IPython.core.magics.pylab', 'IPython.core.pylabtools', 'IPython.core.magics.script', 'IPython.lib.backgroundjobs', 'IPython.core.shellapp', 'IPython.extensions', 'IPython.extensions.storemagic', 'IPython.utils.frame', 'jupyter_client', 'jupyter_client._version', 'jupyter_client.connect', 'zmq', 'zmq.backend', 'zmq.backend.select', 'zmq.backend.cython', 'zmq.backend.cython.constants', 'cython_runtime', 'zmq.backend.cython.error', '_cython_0_29_5', 'zmq.backend.cython.message', 'zmq.error', 'zmq.backend.cython.context', 'zmq.backend.cython.socket', 'zmq.backend.cython.utils', 'zmq.backend.cython._poll', 'zmq.backend.cython._version', 'zmq.backend.cython._device', 'zmq.backend.cython._proxy_steerable', 'zmq.sugar', 'zmq.sugar.constants', 'zmq.utils', 'zmq.utils.constant_names', 'zmq.sugar.context', 'zmq.sugar.attrsettr', 'zmq.sugar.socket', 'zmq.sugar.poll', 'zmq.utils.jsonapi', 'zmq.utils.strtypes', 'zmq.sugar.frame', 'zmq.sugar.tracker', 'zmq.sugar.version', 'zmq.sugar.stopwatch', 'jupyter_client.localinterfaces', 'jupyter_core', 'jupyter_core.version', 'jupyter_core.paths', 'jupyter_client.launcher', 'traitlets.log', 'jupyter_client.client', 'jupyter_client.channels', 'jupyter_client.channelsabc', 'jupyter_client.clientabc', 'jupyter_client.manager', 'jupyter_client.kernelspec', 'jupyter_client.managerabc', 'jupyter_client.blocking', 'jupyter_client.blocking.client', 'jupyter_client.blocking.channels', 'jupyter_client.multikernelmanager', 'uuid', 'ipykernel.kernelapp', 'tornado', 'tornado.ioloop', 'numbers', 'tornado.concurrent', 'tornado.log', 'logging.handlers', 'tornado.escape', 'tornado.util', 'tornado.speedups', 'curses', '_curses', 'zmq.eventloop', 'zmq.eventloop.ioloop', 'tornado.platform', 'tornado.platform.asyncio', 'tornado.gen', 'zmq.eventloop.zmqstream', 'ipykernel.iostream', 'imp', 'jupyter_client.session', 'hmac', 'jupyter_client.jsonutil', 'dateutil', 'dateutil._version', 'dateutil.parser', 'dateutil.parser._parser', 'decimal', '_decimal', 'dateutil.relativedelta', 'dateutil._common', 'dateutil.tz', 'dateutil.tz.tz', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.parser.isoparser', '_strptime', 'jupyter_client.adapter', 'ipykernel.heartbeat', 'ipykernel.ipkernel', 'IPython.utils.tokenutil', 'ipykernel.comm', 'ipykernel.comm.manager', 'ipykernel.comm.comm', 'ipykernel.kernelbase', 'tornado.queues', 'tornado.locks', 'ipykernel.jsonutil', 'ipykernel.zmqshell', 'IPython.core.payloadpage', 'ipykernel.displayhook', 'ipykernel.parentpoller', 'encodings.idna', 'stringprep', 'faulthandler', 'ipykernel.datapub', 'ipykernel.serialize', 'ipykernel.pickleutil', 'ipykernel.codeutil', 'IPython.core.completerlib', 'storemagic', 'ipywidgets', 'ipywidgets._version', 'ipywidgets.widgets', 'ipywidgets.widgets.widget', 'ipywidgets.widgets.domwidget', 'ipywidgets.widgets.trait_types', 'ipywidgets.widgets.util', 'ipywidgets.widgets.widget_layout', 'ipywidgets.widgets.widget_style', 'ipywidgets.widgets.valuewidget', 'ipywidgets.widgets.widget_core', 'ipywidgets.widgets.widget_bool', 'ipywidgets.widgets.widget_description', 'ipywidgets.widgets.widget_button', 'ipywidgets.widgets.widget_box', 'ipywidgets.widgets.docutils', 'ipywidgets.widgets.widget_float', 'ipywidgets.widgets.widget_int', 'ipywidgets.widgets.widget_color', 'ipywidgets.widgets.widget_date', 'ipywidgets.widgets.widget_output', 'ipywidgets.widgets.widget_selection', 'ipywidgets.widgets.widget_selectioncontainer', 'ipywidgets.widgets.widget_string', 'ipywidgets.widgets.widget_controller', 'ipywidgets.widgets.interaction', 'ipywidgets.widgets.widget_link', 'ipywidgets.widgets.widget_media', 'ipywidgets.widgets.widget_templates', 'ipywidgets.widgets.widget_upload', 'jupyter_require', 'daiquiri', 'logging.config', 'socketserver', 'daiquiri.output', 'syslog', 'daiquiri.formatter', 'pythonjsonlogger', 'pythonjsonlogger.jsonlogger', 'daiquiri.handlers', 'jupyter_require.__about__', 'jupyter_require.notebook', 'csscompressor', 'jupyter_require.core', 'jupyter_require.magic', 'jupyter_nbutils', 'jupyter_nbutils.__about__', 'jupyter_nbutils.config', 'jupyter_nbutils.utils', 'matplotlib', 'distutils', 'distutils.version', 'matplotlib.cbook', 'gzip', 'numpy', 'numpy._globals', 'numpy.__config__', 'numpy.version', 'numpy._distributor_init', 'numpy.core', 'numpy.core.multiarray', 'numpy.core.overrides', 'numpy.core._multiarray_umath', 'numpy.compat', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.core.umath', 'numpy.core.numerictypes', 'numpy.core._string_helpers', 'numpy.core._type_aliases', 'numpy.core._dtype', 'numpy.core.numeric', 'numpy.core.shape_base', 'numpy.core._asarray', 'numpy.core.fromnumeric', 'numpy.core._methods', 'numpy.core._exceptions', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._add_newdocs', 'numpy.core._multiarray_tests', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'numpy._pytesttester', 'numpy.lib', 'numpy.lib.mixins', 'numpy.lib.scimath', 'numpy.lib.type_check', 'numpy.lib.ufunclike', 'numpy.lib.index_tricks', 'numpy.matrixlib', 'numpy.matrixlib.defmatrix', 'numpy.linalg', 'numpy.linalg.linalg', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.lib.function_base', 'numpy.lib.histograms', 'numpy.lib.stride_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.npyio', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.financial', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.fft', 'numpy.fft._pocketfft', 'numpy.fft._pocketfft_internal', 'numpy.fft.helper', 'numpy.polynomial', 'numpy.polynomial.polynomial', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.random', 'numpy.random._pickle', 'numpy.random.mtrand', 'numpy.random._bit_generator', '_cython_0_29_16', 'numpy.random._common', 'secrets', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.ctypeslib', 'numpy.ma', 'numpy.ma.core', 'numpy.ma.extras', 'matplotlib.cbook.deprecation', 'matplotlib.rcsetup', 'matplotlib.fontconfig_pattern', 'pyparsing', 'matplotlib.colors', 'matplotlib.docstring', 'matplotlib._color_data', 'cycler', 'matplotlib._version', 'matplotlib.ft2font', 'kiwisolver']
2020-10-12 15:30:51,405 [28998] DEBUG    matplotlib:278: [JupyterRequire] CACHEDIR=/home/wfct0p/.cache/matplotlib
2020-10-12 15:30:51,409 [28998] DEBUG    matplotlib.font_manager:1348: [JupyterRequire] Using fontManager instance from /home/wfct0p/.cache/matplotlib/fontlist-v310.json
2020-10-12 15:30:52,258 [28998] DEBUG    matplotlib.pyplot:225: [JupyterRequire] Loaded backend module://ipykernel.pylab.backend_inline version unknown.
2020-10-12 15:30:52,263 [28998] DEBUG    matplotlib.pyplot:225: [JupyterRequire] Loaded backend module://ipykernel.pylab.backend_inline version unknown.
2020-10-12 15:30:52,760 [28998] DEBUG    shapely.geos:73: [JupyterRequire] Found GEOS DLL: <CDLL '/home/wfct0p/.local/lib/python3.7/site-packages/shapely/.libs/libgeos_c-5031f9ac.so.1.13.1', handle 55bc3d740f00 at 0x7ff03708ddd8>, using it.
2020-10-12 15:30:52,776 [28998] DEBUG    shapely.geos:38: [JupyterRequire] Trying `CDLL(libc.so.6)`
2020-10-12 15:30:52,777 [28998] DEBUG    shapely.geos:55: [JupyterRequire] Library path: 'libc.so.6'
2020-10-12 15:30:52,779 [28998] DEBUG    shapely.geos:56: [JupyterRequire] DLL: <CDLL 'libc.so.6', handle 7ff08794c4f0 at 0x7ff03708de10>
2020-10-12 15:30:52,954 [28998] DEBUG    Fiona:143: [JupyterRequire] Set GDAL_DATA = '/opt/conda/share/gdal'
2020-10-12 15:30:52,955 [28998] DEBUG    Fiona:143: [JupyterRequire] Set PROJ_LIB = '/opt/conda/share/proj'
2020-10-12 15:30:53,745 [28998] DEBUG    matplotlib.pyplot:225: [JupyterRequire] Loaded backend module://ipykernel.pylab.backend_inline version unknown.
2020-10-12 15:30:53,755 [28998] DEBUG    fiona:287: [JupyterRequire] Creating a not-responsible GDALEnv in drivers()
2020-10-12 15:30:53,757 [28998] DEBUG    Fiona:75: [JupyterRequire] GDAL_DATA: /opt/conda/share/gdal
2020-10-12 15:30:53,759 [28998] DEBUG    Fiona:75: [JupyterRequire] PROJ_LIB: /opt/conda/share/proj
2020-10-12 15:30:53,762 [28998] DEBUG    Fiona:145: [JupyterRequire] GDAL_DATA: /opt/conda/share/gdal
2020-10-12 15:30:53,763 [28998] DEBUG    Fiona:145: [JupyterRequire] PROJ_LIB: /opt/conda/share/proj
2020-10-12 15:30:53,765 [28998] DEBUG    Fiona:153: [JupyterRequire] Userencoding: None
2020-10-12 15:30:53,775 [28998] DEBUG    Fiona:203: [JupyterRequire] Got coordinate system
2020-10-12 15:30:53,777 [28998] DEBUG    Fiona:210: [JupyterRequire] Got coordinate system
2020-10-12 15:30:53,779 [28998] DEBUG    Fiona:247: [JupyterRequire] Index: 0
2020-10-12 15:30:53,802 [28998] DEBUG    fiona.collection:404: [JupyterRequire] Flushed buffer
2020-10-12 15:30:53,804 [28998] DEBUG    fiona.collection:406: [JupyterRequire] Stopped session
2020-10-12 15:30:53,826 [28998] DEBUG    fiona:287: [JupyterRequire] Creating a not-responsible GDALEnv in drivers()
2020-10-12 15:30:53,829 [28998] DEBUG    Fiona:75: [JupyterRequire] GDAL_DATA: /opt/conda/share/gdal
2020-10-12 15:30:53,831 [28998] DEBUG    Fiona:75: [JupyterRequire] PROJ_LIB: /opt/conda/share/proj
2020-10-12 15:30:53,833 [28998] DEBUG    Fiona:145: [JupyterRequire] GDAL_DATA: /opt/conda/share/gdal
2020-10-12 15:30:53,836 [28998] DEBUG    Fiona:145: [JupyterRequire] PROJ_LIB: /opt/conda/share/proj
2020-10-12 15:30:53,842 [28998] DEBUG    Fiona:153: [JupyterRequire] Userencoding: None
2020-10-12 15:30:53,848 [28998] DEBUG    Fiona:203: [JupyterRequire] Got coordinate system
2020-10-12 15:30:53,851 [28998] DEBUG    Fiona:210: [JupyterRequire] Got coordinate system
2020-10-12 15:30:53,853 [28998] DEBUG    Fiona:247: [JupyterRequire] Index: 0
2020-10-12 15:30:53,858 [28998] DEBUG    fiona.collection:404: [JupyterRequire] Flushed buffer
2020-10-12 15:30:53,860 [28998] DEBUG    fiona.collection:406: [JupyterRequire] Stopped session
2020-10-12 15:31:18,001 [28998] WARNING  py.warnings:99: [JupyterRequire] /home/wfct0p/.local/lib/python3.7/site-packages/pyproj/crs/crs.py:53: FutureWarning: '+init=<authority>:<code>' syntax is deprecated. '<authority>:<code>' is the preferred initialization method. When making the change, be mindful of axis order changes: https://pyproj4.github.io/pyproj/stable/gotchas.html#axis-order-changes-in-proj-6
  return _prepare_from_string(" ".join(pjargs))

2020-10-12 15:31:18,182 [28998] WARNING  py.warnings:99: [JupyterRequire] /home/wfct0p/.local/lib/python3.7/site-packages/pyproj/crs/crs.py:53: FutureWarning: '+init=<authority>:<code>' syntax is deprecated. '<authority>:<code>' is the preferred initialization method. When making the change, be mindful of axis order changes: https://pyproj4.github.io/pyproj/stable/gotchas.html#axis-order-changes-in-proj-6
  return _prepare_from_string(" ".join(pjargs))

2020-10-12 15:31:26,143 [28998] WARNING  py.warnings:99: [JupyterRequire] /home/wfct0p/.local/lib/python3.7/site-packages/pyproj/crs/crs.py:53: FutureWarning: '+init=<authority>:<code>' syntax is deprecated. '<authority>:<code>' is the preferred initialization method. When making the change, be mindful of axis order changes: https://pyproj4.github.io/pyproj/stable/gotchas.html#axis-order-changes-in-proj-6
  return _prepare_from_string(" ".join(pjargs))

2020-10-12 15:31:30,799 [28998] DEBUG    matplotlib.font_manager:1246: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2020-10-12 15:31:30,802 [28998] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
2020-10-12 15:31:30,803 [28998] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
2020-10-12 15:31:30,805 [28998] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
2020-10-12 15:31:30,806 [28998] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-12 15:31:30,808 [28998] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
2020-10-12 15:31:30,810 [28998] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
2020-10-12 15:31:30,812 [28998] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2020-10-12 15:31:30,814 [28998] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
2020-10-12 15:31:30,815 [28998] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-10-12 15:31:30,817 [28998] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2020-10-12 15:31:30,819 [28998] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2020-10-12 15:31:30,821 [28998] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
2020-10-12 15:31:30,823 [28998] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 0.33499999999999996
2020-10-12 15:31:30,825 [28998] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2020-10-12 15:31:30,826 [28998] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
2020-10-12 15:31:30,829 [28998] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2020-10-12 15:31:30,831 [28998] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
2020-10-12 15:31:30,832 [28998] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2020-10-12 15:31:30,834 [28998] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-10-12 15:31:30,836 [28998] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-12 15:31:30,837 [28998] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-12 15:31:30,839 [28998] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2020-10-12 15:31:30,842 [28998] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
2020-10-12 15:31:30,844 [28998] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2020-10-12 15:31:30,846 [28998] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2020-10-12 15:31:30,848 [28998] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
2020-10-12 15:31:30,850 [28998] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2020-10-12 15:31:30,852 [28998] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
2020-10-12 15:31:30,854 [28998] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
2020-10-12 15:31:30,856 [28998] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2020-10-12 15:31:30,857 [28998] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-12 15:31:30,860 [28998] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2020-10-12 15:31:30,862 [28998] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2020-10-12 15:31:30,863 [28998] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2020-10-12 15:31:30,866 [28998] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
2020-10-12 15:31:30,868 [28998] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 1.335
2020-10-12 15:31:30,870 [28998] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
2020-10-12 15:31:30,872 [28998] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2020-10-12 15:31:30,874 [28998] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-Heavy.ttf) normal normal heavy normal>) = 10.43
2020-10-12 15:31:30,875 [28998] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-12 15:31:30,877 [28998] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-BlackItalic.ttf) italic normal black normal>) = 11.525
2020-10-12 15:31:30,879 [28998] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'GFS Baskerville' (GFSBaskerville.otf) normal normal regular normal>) = 10.05
2020-10-12 15:31:30,880 [28998] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-BoldItalic.ttf) italic normal bold condensed>) = 11.535
2020-10-12 15:31:30,883 [28998] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-BoldOblique.ttf) oblique normal bold condensed>) = 1.535
2020-10-12 15:31:30,886 [28998] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-ExtraLight.ttf) normal normal light normal>) = 0.24
2020-10-12 15:31:30,888 [28998] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-SemiboldItalic.ttf) italic normal semibold normal>) = 11.24
2020-10-12 15:31:30,890 [28998] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed.ttf) normal normal 400 condensed>) = 10.25
2020-10-12 15:31:30,892 [28998] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-Thin.ttf) normal normal 400 normal>) = 10.05
2020-10-12 15:31:30,894 [28998] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-HairlineItalic.ttf) italic normal 400 normal>) = 11.05
2020-10-12 15:31:30,895 [28998] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-Italic.ttf) italic normal 400 condensed>) = 11.25
2020-10-12 15:31:30,897 [28998] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-12 15:31:30,899 [28998] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-Light.ttf) normal normal light normal>) = 10.24
2020-10-12 15:31:30,901 [28998] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-LightItalic.ttf) italic normal light normal>) = 11.24
2020-10-12 15:31:30,903 [28998] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-Bold.ttf) normal normal bold condensed>) = 10.535
2020-10-12 15:31:30,904 [28998] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-Black.ttf) normal normal black normal>) = 10.525
2020-10-12 15:31:30,906 [28998] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-Semibold.ttf) normal normal semibold normal>) = 10.24
2020-10-12 15:31:30,908 [28998] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-Medium.ttf) normal normal medium normal>) = 10.145
2020-10-12 15:31:30,909 [28998] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-Oblique.ttf) oblique normal 400 condensed>) = 1.25
2020-10-12 15:31:30,911 [28998] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-Hairline.ttf) normal normal 400 normal>) = 10.05
2020-10-12 15:31:30,913 [28998] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-12 15:31:30,914 [28998] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
2020-10-12 15:31:30,916 [28998] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed.ttf) normal normal 400 condensed>) = 0.25
2020-10-12 15:31:30,918 [28998] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-12 15:31:30,920 [28998] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-HeavyItalic.ttf) italic normal heavy normal>) = 11.43
2020-10-12 15:31:30,922 [28998] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-MediumItalic.ttf) italic normal medium normal>) = 11.145
2020-10-12 15:31:30,924 [28998] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-ThinItalic.ttf) italic normal 400 normal>) = 11.05
2020-10-12 15:31:30,926 [28998] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-12 15:31:30,927 [28998] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Math TeX Gyre' (DejaVuMathTeXGyre.ttf) normal normal regular normal>) = 10.05
2020-10-12 15:31:30,929 [28998] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-Bold.ttf) normal normal bold condensed>) = 0.5349999999999999
2020-10-12 15:31:30,932 [28998] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'GFS Porson' (GFSPorson.otf) normal normal 400 normal>) = 10.05
2020-10-12 15:31:30,934 [28998] DEBUG    matplotlib.font_manager:1281: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('/home/wfct0p/.local/lib/python3.7/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
2020-10-12 15:32:48,390 [28878] DEBUG    parso.cache:126: [JupyterRequire] pickle loaded: /opt/conda/lib/python3.7/site-packages/geopandas/geodataframe.py
2020-10-12 15:34:03,739 [28998] DEBUG    parso.cache:126: [JupyterRequire] pickle loaded: /opt/conda/lib/python3.7/site-packages/geopandas/geoseries.py
2020-10-12 15:34:20,908 [28878] DEBUG    parso.python.diff:213: [JupyterRequire] diff parser start
2020-10-12 15:34:20,908 [28878] DEBUG    parso.python.diff:224: [JupyterRequire] line_lengths old: 5; new: 5
2020-10-12 15:34:20,911 [28878] DEBUG    parso.python.diff:228: [JupyterRequire] -> code[equal] old[1:4] new[1:4]
2020-10-12 15:34:20,913 [28878] DEBUG    parso.python.diff:299: [JupyterRequire] copy old[1:3] new[1:3]
2020-10-12 15:34:20,915 [28878] DEBUG    parso.python.diff:341: [JupyterRequire] parse_part from 4 to 5 (to 4 in part parser)
2020-10-12 15:34:20,916 [28878] DEBUG    parso.python.diff:228: [JupyterRequire] -> code[replace] old[5:5] new[5:5]
2020-10-12 15:34:20,918 [28878] DEBUG    parso.python.diff:264: [JupyterRequire] diff parser end
2020-10-12 15:34:20,944 [28878] DEBUG    parso.cache:126: [JupyterRequire] pickle loaded: /opt/conda/lib/python3.7/site-packages/geopandas/base.py
2020-10-12 15:34:32,710 [28878] WARNING  py.warnings:99: [JupyterRequire] /home/wfct0p/.local/lib/python3.7/site-packages/pyproj/crs/crs.py:53: FutureWarning: '+init=<authority>:<code>' syntax is deprecated. '<authority>:<code>' is the preferred initialization method. When making the change, be mindful of axis order changes: https://pyproj4.github.io/pyproj/stable/gotchas.html#axis-order-changes-in-proj-6
  return _prepare_from_string(" ".join(pjargs))

2020-10-12 15:37:10,721 [28878] WARNING  py.warnings:99: [JupyterRequire] /home/wfct0p/.local/lib/python3.7/site-packages/pyproj/crs/crs.py:53: FutureWarning: '+init=<authority>:<code>' syntax is deprecated. '<authority>:<code>' is the preferred initialization method. When making the change, be mindful of axis order changes: https://pyproj4.github.io/pyproj/stable/gotchas.html#axis-order-changes-in-proj-6
  return _prepare_from_string(" ".join(pjargs))

2020-10-12 15:38:10,203 [28878] WARNING  py.warnings:99: [JupyterRequire] /home/wfct0p/.local/lib/python3.7/site-packages/pyproj/crs/crs.py:53: FutureWarning: '+init=<authority>:<code>' syntax is deprecated. '<authority>:<code>' is the preferred initialization method. When making the change, be mindful of axis order changes: https://pyproj4.github.io/pyproj/stable/gotchas.html#axis-order-changes-in-proj-6
  return _prepare_from_string(" ".join(pjargs))

2020-10-12 15:38:46,925 [28878] DEBUG    fiona:287: [JupyterRequire] Creating a not-responsible GDALEnv in drivers()
2020-10-12 15:38:46,926 [28878] DEBUG    Fiona:75: [JupyterRequire] GDAL_DATA: /opt/conda/share/gdal
2020-10-12 15:38:46,928 [28878] DEBUG    Fiona:75: [JupyterRequire] PROJ_LIB: /opt/conda/share/proj
2020-10-12 15:38:46,931 [28878] DEBUG    Fiona:145: [JupyterRequire] GDAL_DATA: /opt/conda/share/gdal
2020-10-12 15:38:46,932 [28878] DEBUG    Fiona:145: [JupyterRequire] PROJ_LIB: /opt/conda/share/proj
2020-10-12 15:38:46,934 [28878] DEBUG    Fiona:153: [JupyterRequire] Userencoding: None
2020-10-12 15:38:46,938 [28878] DEBUG    Fiona:203: [JupyterRequire] Got coordinate system
2020-10-12 15:38:46,940 [28878] DEBUG    Fiona:210: [JupyterRequire] Got coordinate system
2020-10-12 15:38:46,942 [28878] DEBUG    Fiona:247: [JupyterRequire] Index: 0
2020-10-12 15:38:46,962 [28878] DEBUG    fiona.collection:404: [JupyterRequire] Flushed buffer
2020-10-12 15:38:46,964 [28878] DEBUG    fiona.collection:406: [JupyterRequire] Stopped session
2020-10-12 15:38:47,468 [28878] DEBUG    fiona:287: [JupyterRequire] Creating a not-responsible GDALEnv in drivers()
2020-10-12 15:38:47,471 [28878] DEBUG    Fiona:75: [JupyterRequire] GDAL_DATA: /opt/conda/share/gdal
2020-10-12 15:38:47,473 [28878] DEBUG    Fiona:75: [JupyterRequire] PROJ_LIB: /opt/conda/share/proj
2020-10-12 15:38:47,476 [28878] DEBUG    Fiona:145: [JupyterRequire] GDAL_DATA: /opt/conda/share/gdal
2020-10-12 15:38:47,478 [28878] DEBUG    Fiona:145: [JupyterRequire] PROJ_LIB: /opt/conda/share/proj
2020-10-12 15:38:47,479 [28878] DEBUG    Fiona:153: [JupyterRequire] Userencoding: None
2020-10-12 15:38:47,483 [28878] DEBUG    Fiona:203: [JupyterRequire] Got coordinate system
2020-10-12 15:38:47,485 [28878] DEBUG    Fiona:210: [JupyterRequire] Got coordinate system
2020-10-12 15:38:47,487 [28878] DEBUG    Fiona:247: [JupyterRequire] Index: 0
2020-10-12 15:38:47,492 [28878] DEBUG    fiona.collection:404: [JupyterRequire] Flushed buffer
2020-10-12 15:38:47,494 [28878] DEBUG    fiona.collection:406: [JupyterRequire] Stopped session
2020-10-12 15:38:57,845 [28878] WARNING  py.warnings:99: [JupyterRequire] /home/wfct0p/.local/lib/python3.7/site-packages/pyproj/crs/crs.py:53: FutureWarning: '+init=<authority>:<code>' syntax is deprecated. '<authority>:<code>' is the preferred initialization method. When making the change, be mindful of axis order changes: https://pyproj4.github.io/pyproj/stable/gotchas.html#axis-order-changes-in-proj-6
  return _prepare_from_string(" ".join(pjargs))

2020-10-12 15:40:09,791 [28878] DEBUG    fiona:287: [JupyterRequire] Creating a not-responsible GDALEnv in drivers()
2020-10-12 15:40:09,792 [28878] DEBUG    Fiona:75: [JupyterRequire] GDAL_DATA: /opt/conda/share/gdal
2020-10-12 15:40:09,795 [28878] DEBUG    Fiona:75: [JupyterRequire] PROJ_LIB: /opt/conda/share/proj
2020-10-12 15:40:09,799 [28878] DEBUG    Fiona:145: [JupyterRequire] GDAL_DATA: /opt/conda/share/gdal
2020-10-12 15:40:09,802 [28878] DEBUG    Fiona:145: [JupyterRequire] PROJ_LIB: /opt/conda/share/proj
2020-10-12 15:40:09,805 [28878] DEBUG    Fiona:153: [JupyterRequire] Userencoding: None
2020-10-12 15:40:09,809 [28878] DEBUG    Fiona:203: [JupyterRequire] Got coordinate system
2020-10-12 15:40:09,812 [28878] DEBUG    Fiona:210: [JupyterRequire] Got coordinate system
2020-10-12 15:40:09,814 [28878] DEBUG    Fiona:247: [JupyterRequire] Index: 0
2020-10-12 15:40:09,833 [28878] DEBUG    fiona.collection:404: [JupyterRequire] Flushed buffer
2020-10-12 15:40:09,835 [28878] DEBUG    fiona.collection:406: [JupyterRequire] Stopped session
2020-10-12 15:40:09,837 [28878] DEBUG    fiona:287: [JupyterRequire] Creating a not-responsible GDALEnv in drivers()
2020-10-12 15:40:09,839 [28878] DEBUG    Fiona:75: [JupyterRequire] GDAL_DATA: /opt/conda/share/gdal
2020-10-12 15:40:09,840 [28878] DEBUG    Fiona:75: [JupyterRequire] PROJ_LIB: /opt/conda/share/proj
2020-10-12 15:40:09,842 [28878] DEBUG    Fiona:145: [JupyterRequire] GDAL_DATA: /opt/conda/share/gdal
2020-10-12 15:40:09,844 [28878] DEBUG    Fiona:145: [JupyterRequire] PROJ_LIB: /opt/conda/share/proj
2020-10-12 15:40:09,846 [28878] DEBUG    Fiona:153: [JupyterRequire] Userencoding: None
2020-10-12 15:40:09,850 [28878] DEBUG    Fiona:203: [JupyterRequire] Got coordinate system
2020-10-12 15:40:09,852 [28878] DEBUG    Fiona:210: [JupyterRequire] Got coordinate system
2020-10-12 15:40:09,854 [28878] DEBUG    Fiona:247: [JupyterRequire] Index: 0
2020-10-12 15:40:09,858 [28878] DEBUG    fiona.collection:404: [JupyterRequire] Flushed buffer
2020-10-12 15:40:09,860 [28878] DEBUG    fiona.collection:406: [JupyterRequire] Stopped session
2020-10-12 15:40:09,885 [28878] WARNING  py.warnings:99: [JupyterRequire] /home/wfct0p/.local/lib/python3.7/site-packages/pyproj/crs/crs.py:53: FutureWarning: '+init=<authority>:<code>' syntax is deprecated. '<authority>:<code>' is the preferred initialization method. When making the change, be mindful of axis order changes: https://pyproj4.github.io/pyproj/stable/gotchas.html#axis-order-changes-in-proj-6
  return _prepare_from_string(" ".join(pjargs))

2020-10-12 15:40:10,057 [28878] WARNING  py.warnings:99: [JupyterRequire] /home/wfct0p/.local/lib/python3.7/site-packages/pyproj/crs/crs.py:53: FutureWarning: '+init=<authority>:<code>' syntax is deprecated. '<authority>:<code>' is the preferred initialization method. When making the change, be mindful of axis order changes: https://pyproj4.github.io/pyproj/stable/gotchas.html#axis-order-changes-in-proj-6
  return _prepare_from_string(" ".join(pjargs))

2020-10-12 15:40:11,702 [28878] WARNING  py.warnings:99: [JupyterRequire] /home/wfct0p/.local/lib/python3.7/site-packages/pyproj/crs/crs.py:53: FutureWarning: '+init=<authority>:<code>' syntax is deprecated. '<authority>:<code>' is the preferred initialization method. When making the change, be mindful of axis order changes: https://pyproj4.github.io/pyproj/stable/gotchas.html#axis-order-changes-in-proj-6
  return _prepare_from_string(" ".join(pjargs))

2020-10-12 15:42:41,409 [28878] WARNING  py.warnings:99: [JupyterRequire] /home/wfct0p/.local/lib/python3.7/site-packages/pyproj/crs/crs.py:53: FutureWarning: '+init=<authority>:<code>' syntax is deprecated. '<authority>:<code>' is the preferred initialization method. When making the change, be mindful of axis order changes: https://pyproj4.github.io/pyproj/stable/gotchas.html#axis-order-changes-in-proj-6
  return _prepare_from_string(" ".join(pjargs))

2020-10-12 15:42:41,411 [28878] WARNING  py.warnings:99: [JupyterRequire] /home/wfct0p/.local/lib/python3.7/site-packages/pyproj/crs/crs.py:294: FutureWarning: '+init=<authority>:<code>' syntax is deprecated. '<authority>:<code>' is the preferred initialization method. When making the change, be mindful of axis order changes: https://pyproj4.github.io/pyproj/stable/gotchas.html#axis-order-changes-in-proj-6
  projstring = _prepare_from_string(" ".join((projstring, projkwargs)))

2020-10-12 15:42:41,439 [28878] WARNING  py.warnings:99: [JupyterRequire] /home/wfct0p/.local/lib/python3.7/site-packages/pyproj/crs/crs.py:53: FutureWarning: '+init=<authority>:<code>' syntax is deprecated. '<authority>:<code>' is the preferred initialization method. When making the change, be mindful of axis order changes: https://pyproj4.github.io/pyproj/stable/gotchas.html#axis-order-changes-in-proj-6
  return _prepare_from_string(" ".join(pjargs))

2020-10-12 15:42:41,442 [28878] WARNING  py.warnings:99: [JupyterRequire] /home/wfct0p/.local/lib/python3.7/site-packages/pyproj/crs/crs.py:294: FutureWarning: '+init=<authority>:<code>' syntax is deprecated. '<authority>:<code>' is the preferred initialization method. When making the change, be mindful of axis order changes: https://pyproj4.github.io/pyproj/stable/gotchas.html#axis-order-changes-in-proj-6
  projstring = _prepare_from_string(" ".join((projstring, projkwargs)))

2020-10-12 15:44:18,648 [28878] WARNING  py.warnings:99: [JupyterRequire] /opt/conda/lib/python3.7/site-packages/seaborn/_decorators.py:43: FutureWarning: Pass the following variable as a keyword arg: y. From version 0.12, the only valid positional argument will be `data`, and passing other arguments without an explicit keyword will result in an error or misinterpretation.
  FutureWarning

2020-10-12 15:44:18,689 [28878] WARNING  py.warnings:99: [JupyterRequire] /opt/conda/lib/python3.7/site-packages/seaborn/distributions.py:1659: FutureWarning: The `bw` parameter is deprecated in favor of `bw_method` and `bw_adjust`. Using scott for `bw_method`, but please see the docs for the new parameters and update your code.
  warnings.warn(msg, FutureWarning)

2020-10-12 15:44:19,517 [28878] WARNING  py.warnings:99: [JupyterRequire] /opt/conda/lib/python3.7/site-packages/seaborn/_decorators.py:43: FutureWarning: Pass the following variable as a keyword arg: y. From version 0.12, the only valid positional argument will be `data`, and passing other arguments without an explicit keyword will result in an error or misinterpretation.
  FutureWarning

2020-10-12 15:44:19,521 [28878] WARNING  py.warnings:99: [JupyterRequire] /opt/conda/lib/python3.7/site-packages/seaborn/distributions.py:1659: FutureWarning: The `bw` parameter is deprecated in favor of `bw_method` and `bw_adjust`. Using scott for `bw_method`, but please see the docs for the new parameters and update your code.
  warnings.warn(msg, FutureWarning)

2020-10-12 15:44:19,523 [28878] WARNING  py.warnings:99: [JupyterRequire] /opt/conda/lib/python3.7/site-packages/seaborn/distributions.py:1678: UserWarning: `shade_lowest` is now deprecated in favor of `thresh`. Setting `thresh=0.05`, but please update your code.
  warnings.warn(msg, UserWarning)

2020-10-12 15:44:20,390 [28878] DEBUG    matplotlib.colorbar:607: [JupyterRequire] locator: <matplotlib.ticker.FixedLocator object at 0x7fb848756d68>
2020-10-12 15:44:20,392 [28878] DEBUG    matplotlib.colorbar:657: [JupyterRequire] Using fixed locator on colorbar
2020-10-12 15:44:20,405 [28878] DEBUG    matplotlib.colorbar:822: [JupyterRequire] Setting pcolormesh
2020-10-12 18:47:30,527 [30494] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2020-10-12 18:47:30,528 [30494] DEBUG    root:93: [JupyterRequire] Initializing comms.
2020-10-12 18:47:30,530 [30494] INFO     root:247: [JupyterRequire] Initializing comms.
2020-10-12 18:47:30,535 [30494] DEBUG    root:197: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2020-10-12 18:47:30,538 [30494] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2020-10-12 18:47:30,539 [30494] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2020-10-12 18:58:50,799 [28878] WARNING  py.warnings:99: [JupyterRequire] /home/wfct0p/.local/lib/python3.7/site-packages/pyproj/crs/crs.py:53: FutureWarning: '+init=<authority>:<code>' syntax is deprecated. '<authority>:<code>' is the preferred initialization method. When making the change, be mindful of axis order changes: https://pyproj4.github.io/pyproj/stable/gotchas.html#axis-order-changes-in-proj-6
  return _prepare_from_string(" ".join(pjargs))

2020-10-12 18:58:50,801 [28878] WARNING  py.warnings:99: [JupyterRequire] /home/wfct0p/.local/lib/python3.7/site-packages/pyproj/crs/crs.py:294: FutureWarning: '+init=<authority>:<code>' syntax is deprecated. '<authority>:<code>' is the preferred initialization method. When making the change, be mindful of axis order changes: https://pyproj4.github.io/pyproj/stable/gotchas.html#axis-order-changes-in-proj-6
  projstring = _prepare_from_string(" ".join((projstring, projkwargs)))

2020-10-12 18:58:50,838 [28878] WARNING  py.warnings:99: [JupyterRequire] /home/wfct0p/.local/lib/python3.7/site-packages/pyproj/crs/crs.py:53: FutureWarning: '+init=<authority>:<code>' syntax is deprecated. '<authority>:<code>' is the preferred initialization method. When making the change, be mindful of axis order changes: https://pyproj4.github.io/pyproj/stable/gotchas.html#axis-order-changes-in-proj-6
  return _prepare_from_string(" ".join(pjargs))

2020-10-12 18:58:50,841 [28878] WARNING  py.warnings:99: [JupyterRequire] /home/wfct0p/.local/lib/python3.7/site-packages/pyproj/crs/crs.py:294: FutureWarning: '+init=<authority>:<code>' syntax is deprecated. '<authority>:<code>' is the preferred initialization method. When making the change, be mindful of axis order changes: https://pyproj4.github.io/pyproj/stable/gotchas.html#axis-order-changes-in-proj-6
  projstring = _prepare_from_string(" ".join((projstring, projkwargs)))

2020-10-12 19:04:36,907 [28878] DEBUG    urllib3.connectionpool:813: [JupyterRequire] Starting new HTTPS connection (1): api.openstreetmap.org:443
2020-10-12 19:04:38,335 [28878] DEBUG    urllib3.connectionpool:393: [JupyterRequire] https://api.openstreetmap.org:443 "GET /api/0.6/map?bbox=-0.139780,51.509956,-0.131512,51.516682 HTTP/1.1" 200 None
2020-10-12 19:04:43,597 [28878] WARNING  py.warnings:99: [JupyterRequire] /opt/conda/lib/python3.7/site-packages/ipykernel_launcher.py:4: DeprecationWarning: This method will be removed in future versions.  Use 'list(elem)' or iteration over elem instead.
  after removing the cwd from sys.path.

2020-10-12 19:04:43,637 [28878] WARNING  py.warnings:99: [JupyterRequire] /opt/conda/lib/python3.7/site-packages/ipykernel_launcher.py:5: DeprecationWarning: This method will be removed in future versions.  Use 'list(elem)' or iteration over elem instead.
  """

2020-10-12 19:04:45,158 [28878] WARNING  py.warnings:99: [JupyterRequire] /opt/conda/lib/python3.7/site-packages/ipykernel_launcher.py:1: DeprecationWarning: This method will be removed in future versions.  Use 'list(elem)' or iteration over elem instead.
  """Entry point for launching an IPython kernel.

2020-10-12 19:06:41,221 [28878] WARNING  py.warnings:99: [JupyterRequire] /opt/conda/lib/python3.7/site-packages/geopandas/tools/sjoin.py:61: UserWarning: CRS of frames being joined does not match!(None != {'init': 'epsg:4326'})
  "(%s != %s)" % (left_df.crs, right_df.crs)

2020-10-12 20:21:08,277 [28878] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2020-10-12 20:21:08,278 [28878] DEBUG    root:93: [JupyterRequire] Initializing comms.
2020-10-12 20:21:08,280 [28878] INFO     root:247: [JupyterRequire] Initializing comms.
2020-10-12 20:21:08,285 [28878] DEBUG    root:197: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2020-10-12 20:21:08,287 [28878] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2020-10-12 20:21:08,289 [28878] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2020-10-12 20:21:11,321 [28878] ERROR    root:221: [JupyterRequire] Invalid alias: The name clear can't be aliased because it is another magic command.
2020-10-12 20:21:11,324 [28878] ERROR    root:221: [JupyterRequire] Invalid alias: The name more can't be aliased because it is another magic command.
2020-10-12 20:21:11,327 [28878] ERROR    root:221: [JupyterRequire] Invalid alias: The name less can't be aliased because it is another magic command.
2020-10-12 20:21:11,331 [28878] ERROR    root:221: [JupyterRequire] Invalid alias: The name man can't be aliased because it is another magic command.
2020-10-12 20:21:13,051 [3081] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2020-10-12 20:21:13,051 [3081] DEBUG    root:93: [JupyterRequire] Initializing comms.
2020-10-12 20:21:13,053 [3081] INFO     root:247: [JupyterRequire] Initializing comms.
2020-10-12 20:21:13,059 [3081] DEBUG    root:197: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2020-10-12 20:21:13,062 [3081] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2020-10-12 20:21:13,064 [3081] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2020-10-12 20:21:13,588 [3081] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2020-10-12 20:21:13,588 [3081] DEBUG    root:93: [JupyterRequire] Initializing comms.
2020-10-12 20:21:13,591 [3081] INFO     root:247: [JupyterRequire] Initializing comms.
2020-10-12 20:21:13,595 [3081] DEBUG    root:197: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2020-10-12 20:21:13,597 [3081] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2020-10-12 20:21:13,598 [3081] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2020-10-12 20:21:16,529 [3081] DEBUG    matplotlib:278: [JupyterRequire] CONFIGDIR=/home/wfct0p/.config/matplotlib
2020-10-12 20:21:16,530 [3081] DEBUG    matplotlib:278: [JupyterRequire] (private) matplotlib data path: /home/wfct0p/.local/lib/python3.7/site-packages/matplotlib/mpl-data
2020-10-12 20:21:16,536 [3081] DEBUG    matplotlib:278: [JupyterRequire] matplotlib data path: /home/wfct0p/.local/lib/python3.7/site-packages/matplotlib/mpl-data
2020-10-12 20:21:16,538 [3081] DEBUG    matplotlib:1009: [JupyterRequire] loaded rc file /home/wfct0p/.local/lib/python3.7/site-packages/matplotlib/mpl-data/matplotlibrc
2020-10-12 20:21:16,542 [3081] DEBUG    matplotlib:1598: [JupyterRequire] matplotlib version 3.2.1
2020-10-12 20:21:16,544 [3081] DEBUG    matplotlib:1599: [JupyterRequire] interactive is False
2020-10-12 20:21:16,546 [3081] DEBUG    matplotlib:1600: [JupyterRequire] platform is linux
2020-10-12 20:21:16,548 [3081] DEBUG    matplotlib:1601: [JupyterRequire] loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', 'zipimport', '_frozen_importlib_external', '_io', 'marshal', 'posix', 'encodings', 'codecs', '_codecs', 'encodings.aliases', 'encodings.utf_8', '_signal', '__main__', 'encodings.latin_1', 'io', 'abc', '_abc', '_bootlocale', '_locale', 'site', 'os', 'stat', '_stat', 'posixpath', 'genericpath', 'os.path', '_collections_abc', '_sitebuiltins', 'types', 'importlib', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib.util', 'importlib.abc', 'importlib.machinery', 'contextlib', 'collections', 'operator', '_operator', 'keyword', 'heapq', '_heapq', 'itertools', 'reprlib', '_collections', 'functools', '_functools', 'mpl_toolkits', 'sphinxcontrib', 'runpy', 'pkgutil', 'weakref', '_weakrefset', 'ipykernel', 'ipykernel._version', 'ipykernel.connect', '__future__', 'json', 'json.decoder', 're', 'enum', 'sre_compile', '_sre', 'sre_parse', 'sre_constants', 'copyreg', 'json.scanner', '_json', 'json.encoder', 'subprocess', 'time', 'signal', 'errno', '_posixsubprocess', 'select', 'selectors', 'collections.abc', 'math', 'threading', 'traceback', 'linecache', 'tokenize', 'token', 'IPython', 'IPython.core', 'IPython.core.getipython', 'IPython.core.release', 'IPython.core.application', 'atexit', 'copy', 'glob', 'fnmatch', 'logging', 'string', '_string', 'shutil', 'zlib', 'bz2', '_compression', '_bz2', 'lzma', '_lzma', 'pwd', 'grp', 'traitlets', 'traitlets.traitlets', 'inspect', 'dis', 'opcode', '_opcode', 'six', 'struct', '_struct', 'traitlets.utils', 'traitlets.utils.getargspec', 'traitlets.utils.importstring', 'ipython_genutils', 'ipython_genutils._version', 'ipython_genutils.py3compat', 'ipython_genutils.encoding', 'locale', 'platform', 'traitlets.utils.sentinel', 'traitlets.utils.bunch', 'traitlets._version', 'traitlets.config', 'traitlets.config.application', 'decorator', 'traitlets.config.configurable', 'traitlets.config.loader', 'argparse', 'gettext', 'ast', '_ast', 'ipython_genutils.path', 'random', 'hashlib', '_hashlib', '_blake2', '_sha3', 'bisect', '_bisect', '_random', 'ipython_genutils.text', 'textwrap', 'ipython_genutils.importstring', 'IPython.core.crashhandler', 'pprint', 'IPython.core.ultratb', 'pydoc', 'urllib', 'urllib.parse', 'IPython.core.debugger', 'bdb', 'IPython.utils', 'IPython.utils.PyColorize', 'IPython.utils.coloransi', 'IPython.utils.ipstruct', 'IPython.utils.colorable', 'pygments', 'pygments.util', 'IPython.utils.py3compat', 'IPython.utils.encoding', 'IPython.core.excolors', 'IPython.testing', 'IPython.testing.skipdoctest', 'pdb', 'cmd', 'code', 'codeop', 'IPython.core.display_trap', 'IPython.utils.path', 'IPython.utils.process', 'IPython.utils._process_posix', 'pexpect', 'pexpect.exceptions', 'pexpect.utils', 'pexpect.expect', 'pexpect.pty_spawn', 'pty', 'tty', 'termios', 'ptyprocess', 'ptyprocess.ptyprocess', 'fcntl', 'resource', 'ptyprocess.util', 'pexpect.spawnbase', 'pexpect.run', 'IPython.utils._process_common', 'shlex', 'IPython.utils.decorators', 'IPython.utils.data', 'IPython.utils.terminal', 'IPython.utils.sysinfo', 'IPython.utils._sysinfo', 'IPython.core.profiledir', 'IPython.paths', 'tempfile', 'IPython.utils.importstring', 'IPython.terminal', 'IPython.terminal.embed', 'IPython.core.compilerop', 'IPython.core.magic_arguments', 'IPython.core.error', 'IPython.utils.text', 'pathlib', 'ntpath', 'IPython.core.magic', 'getopt', 'IPython.core.oinspect', 'IPython.core.page', 'IPython.core.display', 'binascii', 'mimetypes', 'IPython.lib', 'IPython.lib.security', 'getpass', 'IPython.lib.pretty', 'datetime', '_datetime', 'IPython.utils.openpy', 'IPython.utils.dir2', 'IPython.utils.wildcard', 'pygments.lexers', 'pygments.lexers._mapping', 'pygments.modeline', 'pygments.plugin', 'pygments.lexers.python', 'pygments.lexer', 'pygments.filter', 'pygments.filters', 'pygments.token', 'pygments.regexopt', 'pygments.unistring', 'pygments.formatters', 'pygments.formatters._mapping', 'pygments.formatters.html', 'pygments.formatter', 'pygments.styles', 'IPython.core.inputtransformer2', 'typing', 'typing.io', 'typing.re', 'IPython.core.interactiveshell', 'asyncio', 'asyncio.base_events', 'concurrent', 'concurrent.futures', 'concurrent.futures._base', 'socket', '_socket', 'ssl', '_ssl', 'base64', 'asyncio.constants', 'asyncio.coroutines', 'asyncio.base_futures', 'asyncio.format_helpers', 'asyncio.log', 'asyncio.events', 'contextvars', '_contextvars', 'asyncio.base_tasks', '_asyncio', 'asyncio.futures', 'asyncio.protocols', 'asyncio.sslproto', 'asyncio.transports', 'asyncio.tasks', 'asyncio.locks', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.unix_events', 'asyncio.base_subprocess', 'asyncio.selector_events', 'pickleshare', 'pickle', '_compat_pickle', '_pickle', 'IPython.core.prefilter', 'IPython.core.autocall', 'IPython.core.macro', 'IPython.core.splitinput', 'IPython.core.alias', 'IPython.core.builtin_trap', 'IPython.core.events', 'backcall', 'backcall.backcall', 'IPython.core.displayhook', 'IPython.core.displaypub', 'IPython.core.extensions', 'IPython.core.formatters', 'IPython.utils.sentinel', 'IPython.core.history', 'sqlite3', 'sqlite3.dbapi2', '_sqlite3', 'IPython.core.logger', 'IPython.core.payload', 'IPython.core.usage', 'IPython.display', 'IPython.lib.display', 'html', 'html.entities', 'IPython.utils.io', 'IPython.utils.capture', 'IPython.utils.strdispatch', 'IPython.core.hooks', 'IPython.utils.syspathcontext', 'IPython.utils.tempdir', 'IPython.utils.contexts', 'IPython.core.async_helpers', 'IPython.terminal.interactiveshell', 'prompt_toolkit', 'prompt_toolkit.application', 'prompt_toolkit.application.application', 'prompt_toolkit.buffer', 'prompt_toolkit.application.current', 'prompt_toolkit.eventloop', 'prompt_toolkit.eventloop.base', 'prompt_toolkit.log', 'prompt_toolkit.eventloop.coroutine', 'prompt_toolkit.eventloop.defaults', 'prompt_toolkit.utils', 'six.moves', 'wcwidth', 'wcwidth.wcwidth', 'wcwidth.table_wide', 'wcwidth.table_zero', 'prompt_toolkit.cache', 'prompt_toolkit.eventloop.future', 'prompt_toolkit.eventloop.context', 'prompt_toolkit.eventloop.async_generator', 'queue', '_queue', 'six.moves.queue', 'prompt_toolkit.eventloop.event', 'prompt_toolkit.application.run_in_terminal', 'prompt_toolkit.auto_suggest', 'prompt_toolkit.filters', 'prompt_toolkit.filters.base', 'prompt_toolkit.filters.app', 'prompt_toolkit.enums', 'prompt_toolkit.filters.utils', 'prompt_toolkit.filters.cli', 'prompt_toolkit.clipboard', 'prompt_toolkit.clipboard.base', 'prompt_toolkit.selection', 'prompt_toolkit.clipboard.in_memory', 'prompt_toolkit.completion', 'prompt_toolkit.completion.base', 'prompt_toolkit.completion.filesystem', 'prompt_toolkit.completion.word_completer', 'prompt_toolkit.completion.fuzzy_completer', 'prompt_toolkit.document', 'prompt_toolkit.history', 'prompt_toolkit.search', 'prompt_toolkit.key_binding', 'prompt_toolkit.key_binding.key_bindings', 'prompt_toolkit.keys', 'prompt_toolkit.key_binding.vi_state', 'prompt_toolkit.validation', 'prompt_toolkit.input', 'prompt_toolkit.input.base', 'prompt_toolkit.input.defaults', 'prompt_toolkit.input.typeahead', 'prompt_toolkit.key_binding.bindings', 'prompt_toolkit.key_binding.bindings.page_navigation', 'prompt_toolkit.key_binding.bindings.scroll', 'prompt_toolkit.key_binding.defaults', 'prompt_toolkit.key_binding.bindings.basic', 'prompt_toolkit.key_binding.key_processor', 'prompt_toolkit.key_binding.bindings.named_commands', 'prompt_toolkit.key_binding.bindings.completion', 'prompt_toolkit.key_binding.bindings.emacs', 'prompt_toolkit.key_binding.bindings.vi', 'prompt_toolkit.input.vt100_parser', 'prompt_toolkit.input.ansi_escape_sequences', 'prompt_toolkit.key_binding.digraphs', 'prompt_toolkit.key_binding.bindings.mouse', 'prompt_toolkit.layout', 'prompt_toolkit.layout.containers', 'prompt_toolkit.layout.controls', 'prompt_toolkit.formatted_text', 'prompt_toolkit.formatted_text.base', 'prompt_toolkit.formatted_text.html', 'xml', 'xml.dom', 'xml.dom.domreg', 'xml.dom.minidom', 'xml.dom.minicompat', 'xml.dom.xmlbuilder', 'xml.dom.NodeFilter', 'prompt_toolkit.formatted_text.ansi', 'prompt_toolkit.output', 'prompt_toolkit.output.base', 'prompt_toolkit.layout.screen', 'prompt_toolkit.output.defaults', 'prompt_toolkit.output.color_depth', 'prompt_toolkit.output.vt100', 'prompt_toolkit.styles', 'prompt_toolkit.styles.base', 'prompt_toolkit.styles.defaults', 'prompt_toolkit.styles.style', 'prompt_toolkit.styles.named_colors', 'prompt_toolkit.styles.pygments', 'prompt_toolkit.styles.style_transformation', 'colorsys', 'array', 'prompt_toolkit.formatted_text.pygments', 'prompt_toolkit.formatted_text.utils', 'prompt_toolkit.lexers', 'prompt_toolkit.lexers.base', 'prompt_toolkit.lexers.pygments', 'prompt_toolkit.mouse_events', 'prompt_toolkit.layout.processors', 'prompt_toolkit.layout.utils', 'prompt_toolkit.layout.dimension', 'prompt_toolkit.layout.margins', 'prompt_toolkit.layout.layout', 'prompt_toolkit.layout.menus', 'prompt_toolkit.renderer', 'prompt_toolkit.layout.mouse_handlers', 'prompt_toolkit.key_binding.bindings.cpr', 'prompt_toolkit.key_binding.emacs_state', 'prompt_toolkit.layout.dummy', 'prompt_toolkit.application.dummy', 'prompt_toolkit.shortcuts', 'prompt_toolkit.shortcuts.dialogs', 'prompt_toolkit.key_binding.bindings.focus', 'prompt_toolkit.widgets', 'prompt_toolkit.widgets.base', 'prompt_toolkit.widgets.toolbars', 'prompt_toolkit.widgets.dialogs', 'prompt_toolkit.widgets.menus', 'prompt_toolkit.shortcuts.prompt', 'prompt_toolkit.key_binding.bindings.auto_suggest', 'prompt_toolkit.key_binding.bindings.open_in_editor', 'prompt_toolkit.shortcuts.utils', 'prompt_toolkit.shortcuts.progress_bar', 'prompt_toolkit.shortcuts.progress_bar.base', 'prompt_toolkit.shortcuts.progress_bar.formatters', 'prompt_toolkit.patch_stdout', 'pygments.style', 'IPython.terminal.debugger', 'IPython.core.completer', 'unicodedata', 'IPython.core.latex_symbols', 'IPython.utils.generics', 'jedi', 'jedi.api', 'parso', 'parso.parser', 'parso.tree', 'parso._compatibility', 'parso.utils', 'parso.pgen2', 'parso.pgen2.generator', 'parso.pgen2.grammar_parser', 'parso.python', 'parso.python.tokenize', 'parso.python.token', 'parso.grammar', 'parso.python.diff', 'difflib', 'parso.python.parser', 'parso.python.tree', 'parso.python.prefix', 'parso.cache', 'gc', 'parso.python.errors', 'parso.normalizer', 'parso.python.pep8', 'parso.file_io', 'jedi._compatibility', 'jedi.parser_utils', 'jedi.debug', 'colorama', 'colorama.initialise', 'colorama.ansitowin32', 'colorama.ansi', 'colorama.winterm', 'colorama.win32', 'ctypes', '_ctypes', 'ctypes._endian', 'jedi.settings', 'jedi.cache', 'jedi.api.classes', 'jedi.evaluate', 'jedi.evaluate.utils', 'jedi.evaluate.imports', 'jedi.evaluate.sys_path', 'jedi.evaluate.cache', 'jedi.evaluate.base_context', 'jedi.common', 'jedi.common.context', 'jedi.evaluate.helpers', 'jedi.common.utils', 'jedi.evaluate.compiled', 'jedi.evaluate.compiled.context', 'jedi.evaluate.filters', 'jedi.evaluate.flow_analysis', 'jedi.evaluate.recursion', 'jedi.evaluate.lazy_context', 'jedi.evaluate.compiled.access', 'jedi.evaluate.compiled.getattr_static', 'jedi.evaluate.compiled.fake', 'jedi.evaluate.analysis', 'jedi.evaluate.context', 'jedi.evaluate.context.module', 'jedi.evaluate.context.klass', 'jedi.evaluate.context.function', 'jedi.evaluate.docstrings', 'jedi.evaluate.pep0484', 'jedi.evaluate.arguments', 'jedi.evaluate.context.iterable', 'jedi.evaluate.param', 'jedi.evaluate.context.asynchronous', 'jedi.evaluate.parser_cache', 'jedi.evaluate.context.instance', 'jedi.evaluate.syntax_tree', 'jedi.evaluate.finder', 'jedi.api.keywords', 'pydoc_data', 'pydoc_data.topics', 'jedi.api.interpreter', 'jedi.evaluate.compiled.mixed', 'jedi.api.helpers', 'jedi.api.completion', 'jedi.api.environment', 'filecmp', 'jedi.evaluate.compiled.subprocess', 'jedi.evaluate.compiled.subprocess.functions', 'jedi.api.exceptions', 'jedi.api.project', 'jedi.evaluate.usages', 'IPython.terminal.ptutils', 'IPython.terminal.shortcuts', 'IPython.terminal.magics', 'IPython.lib.clipboard', 'IPython.terminal.pt_inputhooks', 'IPython.terminal.prompts', 'IPython.terminal.ipapp', 'IPython.core.magics', 'IPython.core.magics.auto', 'IPython.core.magics.basic', 'IPython.core.magics.code', 'urllib.request', 'email', 'http', 'http.client', 'email.parser', 'email.feedparser', 'email.errors', 'email._policybase', 'email.header', 'email.quoprimime', 'email.base64mime', 'email.charset', 'email.encoders', 'quopri', 'email.utils', 'email._parseaddr', 'calendar', 'email.message', 'uu', 'email._encoded_words', 'email.iterators', 'urllib.error', 'urllib.response', 'IPython.core.magics.config', 'IPython.core.magics.display', 'IPython.core.magics.execution', 'timeit', 'cProfile', '_lsprof', 'profile', 'pstats', 'IPython.utils.module_paths', 'IPython.utils.timing', 'IPython.core.magics.extension', 'IPython.core.magics.history', 'IPython.core.magics.logging', 'IPython.core.magics.namespace', 'IPython.core.magics.osm', 'IPython.core.magics.packaging', 'IPython.core.magics.pylab', 'IPython.core.pylabtools', 'IPython.core.magics.script', 'IPython.lib.backgroundjobs', 'IPython.core.shellapp', 'IPython.extensions', 'IPython.extensions.storemagic', 'IPython.utils.frame', 'jupyter_client', 'jupyter_client._version', 'jupyter_client.connect', 'zmq', 'zmq.backend', 'zmq.backend.select', 'zmq.backend.cython', 'zmq.backend.cython.constants', 'cython_runtime', 'zmq.backend.cython.error', '_cython_0_29_5', 'zmq.backend.cython.message', 'zmq.error', 'zmq.backend.cython.context', 'zmq.backend.cython.socket', 'zmq.backend.cython.utils', 'zmq.backend.cython._poll', 'zmq.backend.cython._version', 'zmq.backend.cython._device', 'zmq.backend.cython._proxy_steerable', 'zmq.sugar', 'zmq.sugar.constants', 'zmq.utils', 'zmq.utils.constant_names', 'zmq.sugar.context', 'zmq.sugar.attrsettr', 'zmq.sugar.socket', 'zmq.sugar.poll', 'zmq.utils.jsonapi', 'zmq.utils.strtypes', 'zmq.sugar.frame', 'zmq.sugar.tracker', 'zmq.sugar.version', 'zmq.sugar.stopwatch', 'jupyter_client.localinterfaces', 'jupyter_core', 'jupyter_core.version', 'jupyter_core.paths', 'jupyter_client.launcher', 'traitlets.log', 'jupyter_client.client', 'jupyter_client.channels', 'jupyter_client.channelsabc', 'jupyter_client.clientabc', 'jupyter_client.manager', 'jupyter_client.kernelspec', 'jupyter_client.managerabc', 'jupyter_client.blocking', 'jupyter_client.blocking.client', 'jupyter_client.blocking.channels', 'jupyter_client.multikernelmanager', 'uuid', 'ipykernel.kernelapp', 'tornado', 'tornado.ioloop', 'numbers', 'tornado.concurrent', 'tornado.log', 'logging.handlers', 'tornado.escape', 'tornado.util', 'tornado.speedups', 'curses', '_curses', 'zmq.eventloop', 'zmq.eventloop.ioloop', 'tornado.platform', 'tornado.platform.asyncio', 'tornado.gen', 'zmq.eventloop.zmqstream', 'ipykernel.iostream', 'imp', 'jupyter_client.session', 'hmac', 'jupyter_client.jsonutil', 'dateutil', 'dateutil._version', 'dateutil.parser', 'dateutil.parser._parser', 'decimal', '_decimal', 'dateutil.relativedelta', 'dateutil._common', 'dateutil.tz', 'dateutil.tz.tz', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.parser.isoparser', '_strptime', 'jupyter_client.adapter', 'ipykernel.heartbeat', 'ipykernel.ipkernel', 'IPython.utils.tokenutil', 'ipykernel.comm', 'ipykernel.comm.manager', 'ipykernel.comm.comm', 'ipykernel.kernelbase', 'tornado.queues', 'tornado.locks', 'ipykernel.jsonutil', 'ipykernel.zmqshell', 'IPython.core.payloadpage', 'ipykernel.displayhook', 'ipykernel.parentpoller', 'encodings.idna', 'stringprep', 'faulthandler', 'ipykernel.datapub', 'ipykernel.serialize', 'ipykernel.pickleutil', 'ipykernel.codeutil', 'IPython.core.completerlib', 'storemagic', 'ipywidgets', 'ipywidgets._version', 'ipywidgets.widgets', 'ipywidgets.widgets.widget', 'ipywidgets.widgets.domwidget', 'ipywidgets.widgets.trait_types', 'ipywidgets.widgets.util', 'ipywidgets.widgets.widget_layout', 'ipywidgets.widgets.widget_style', 'ipywidgets.widgets.valuewidget', 'ipywidgets.widgets.widget_core', 'ipywidgets.widgets.widget_bool', 'ipywidgets.widgets.widget_description', 'ipywidgets.widgets.widget_button', 'ipywidgets.widgets.widget_box', 'ipywidgets.widgets.docutils', 'ipywidgets.widgets.widget_float', 'ipywidgets.widgets.widget_int', 'ipywidgets.widgets.widget_color', 'ipywidgets.widgets.widget_date', 'ipywidgets.widgets.widget_output', 'ipywidgets.widgets.widget_selection', 'ipywidgets.widgets.widget_selectioncontainer', 'ipywidgets.widgets.widget_string', 'ipywidgets.widgets.widget_controller', 'ipywidgets.widgets.interaction', 'ipywidgets.widgets.widget_link', 'ipywidgets.widgets.widget_media', 'ipywidgets.widgets.widget_templates', 'ipywidgets.widgets.widget_upload', 'jupyter_require', 'daiquiri', 'logging.config', 'socketserver', 'daiquiri.output', 'syslog', 'daiquiri.formatter', 'pythonjsonlogger', 'pythonjsonlogger.jsonlogger', 'daiquiri.handlers', 'jupyter_require.__about__', 'jupyter_require.notebook', 'csscompressor', 'jupyter_require.core', 'jupyter_require.magic', 'jupyter_nbutils', 'jupyter_nbutils.__about__', 'jupyter_nbutils.config', 'jupyter_nbutils.utils', 'nbindex', 'nbindex.floating', 'nbindex.numbered', 'nbindex.utils', 'folium', 'branca', 'branca.colormap', 'branca.element', 'jinja2', 'jinja2.environment', 'jinja2.nodes', 'jinja2.utils', 'jinja2._compat', 'markupsafe', 'markupsafe._compat', 'markupsafe._speedups', 'jinja2.defaults', 'jinja2.filters', 'jinja2.runtime', 'jinja2.exceptions', 'jinja2.tests', 'jinja2.lexer', 'jinja2.parser', 'jinja2.compiler', 'jinja2.visitor', 'jinja2.optimizer', 'jinja2.idtracking', 'jinja2.loaders', 'jinja2.bccache', 'jinja2.asyncsupport', 'jinja2.asyncfilters', 'six.moves.urllib', 'six.moves.urllib.request', 'branca.utilities', 'pkg_resources', 'zipfile', 'plistlib', 'xml.parsers', 'xml.parsers.expat', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'pkg_resources.extern', 'pkg_resources._vendor', 'pkg_resources.extern.six', 'pkg_resources._vendor.six', 'pkg_resources.extern.six.moves', 'pkg_resources._vendor.six.moves', 'pkg_resources.py31compat', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging.specifiers', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.requirements', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.six.moves.urllib', 'pkg_resources.extern.packaging.markers', 'sysconfig', 'pandas', 'numpy', 'numpy._globals', 'numpy.__config__', 'numpy.version', 'numpy._distributor_init', 'numpy.core', 'numpy.core.multiarray', 'numpy.core.overrides', 'numpy.core._multiarray_umath', 'numpy.compat', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.core.umath', 'numpy.core.numerictypes', 'numpy.core._string_helpers', 'numpy.core._type_aliases', 'numpy.core._dtype', 'numpy.core.numeric', 'numpy.core.shape_base', 'numpy.core._asarray', 'numpy.core.fromnumeric', 'numpy.core._methods', 'numpy.core._exceptions', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._add_newdocs', 'numpy.core._multiarray_tests', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'numpy._pytesttester', 'numpy.lib', 'numpy.lib.mixins', 'numpy.lib.scimath', 'numpy.lib.type_check', 'numpy.lib.ufunclike', 'numpy.lib.index_tricks', 'numpy.matrixlib', 'numpy.matrixlib.defmatrix', 'numpy.linalg', 'numpy.linalg.linalg', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.lib.function_base', 'numpy.lib.histograms', 'numpy.lib.stride_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.npyio', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.financial', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.fft', 'numpy.fft._pocketfft', 'numpy.fft._pocketfft_internal', 'numpy.fft.helper', 'numpy.polynomial', 'numpy.polynomial.polynomial', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.random', 'numpy.random._pickle', 'numpy.random.mtrand', 'numpy.random._bit_generator', '_cython_0_29_16', 'numpy.random._common', 'secrets', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.ctypeslib', 'numpy.ma', 'numpy.ma.core', 'numpy.ma.extras', 'pytz', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'pandas.compat', 'pandas.compat.numpy', 'distutils', 'distutils.version', 'pandas._libs', 'pandas._libs.tslibs', 'pandas._libs.tslibs.conversion', 'pandas._libs.tslibs.c_timestamp', 'pandas._libs.tslibs.nattype', '_cython_0_29_14', 'pandas._libs.tslibs.np_datetime', 'pandas._libs.tslibs.timezones', 'pandas._libs.tslibs.tzconversion', 'pandas._libs.tslibs.timedeltas', 'pandas._libs.tslibs.offsets', 'pandas._libs.tslibs.ccalendar', 'pandas._config', 'pandas._config.config', 'pandas._config.dates', 'pandas._config.display', 'pandas._config.localization', 'pandas._libs.tslibs.strptime', 'pandas._libs.tslibs.fields', 'pandas._libs.tslibs.parsing', 'pandas._libs.tslibs.frequencies', 'pandas._libs.tslibs.period', 'pandas._libs.tslibs.timestamps', 'pandas._libs.tslibs.resolution', 'pandas._libs.hashtable', 'pandas._libs.missing', 'pandas._libs.ops_dispatch', 'pandas._libs.lib', 'fractions', 'pandas._libs.tslib', 'pandas.core', 'pandas.core.config_init', 'pandas.core.api', 'pandas.core.dtypes', 'pandas.core.dtypes.dtypes', 'pandas._libs.interval', 'pandas._libs.algos', 'pandas._typing', 'pandas.core.dtypes.base', 'pandas.errors', 'pandas.core.dtypes.generic', 'pandas.core.dtypes.inference', 'pandas.core.dtypes.missing', 'pandas.core.dtypes.common', 'pandas.core.algorithms', 'pandas.util', 'pandas.util._decorators', 'pandas._libs.properties', 'pandas.core.util', 'pandas.core.util.hashing', 'pandas._libs.hashing', 'pandas.core.dtypes.cast', 'pandas.util._validators', 'pandas.core.common', 'pandas.core.construction', 'pandas.core.indexers', 'pandas.core.arrays', 'pandas.core.arrays.base', 'pandas.compat.numpy.function', 'pandas.core.ops', 'pandas.core.ops.array_ops', 'pandas._libs.ops', 'pandas.core.ops.missing', 'pandas.core.ops.roperator', 'pandas.core.ops.dispatch', 'pandas.core.ops.invalid', 'pandas.core.ops.common', 'pandas.core.ops.docstrings', 'pandas.core.ops.mask_ops', 'pandas.core.ops.methods', 'pandas.core.missing', 'pandas.compat._optional', 'pandas.core.sorting', 'pandas.core.arrays.boolean', 'pandas.core.nanops', 'bottleneck', 'bottleneck.reduce', 'bottleneck.nonreduce', 'bottleneck.nonreduce_axis', 'bottleneck.move', 'bottleneck.slow', 'bottleneck.slow.reduce', 'bottleneck.slow.nonreduce', 'bottleneck.slow.nonreduce_axis', 'bottleneck.slow.move', 'bottleneck.version', 'bottleneck.benchmark', 'bottleneck.benchmark.bench', 'bottleneck.benchmark.autotimeit', 'bottleneck.benchmark.bench_detailed', 'bottleneck.tests', 'bottleneck.tests.util', 'numpy.testing', 'unittest', 'unittest.result', 'unittest.util', 'unittest.case', 'unittest.suite', 'unittest.loader', 'unittest.main', 'unittest.runner', 'unittest.signals', 'numpy.testing._private', 'numpy.testing._private.utils', 'numpy.testing._private.decorators', 'numpy.testing._private.nosetester', 'pandas.core.arrays.masked', 'pandas.core.arrays.categorical', 'pandas.core.accessor', 'pandas.core.base', 'pandas.io', 'pandas.io.formats', 'pandas.io.formats.console', 'pandas.core.arrays.datetimes', 'pandas.core.arrays.datetimelike', 'pandas.tseries', 'pandas.tseries.frequencies', 'pandas.tseries.offsets', 'dateutil.easter', 'pandas.core.arrays._ranges', 'pandas.core.arrays.integer', 'pandas.core.tools', 'pandas.core.tools.numeric', 'pandas.core.arrays.interval', 'pandas.core.indexes', 'pandas.core.indexes.base', 'pandas._libs.index', 'pandas._libs.join', 'pandas.core.dtypes.concat', 'pandas.core.indexes.frozen', 'pandas.io.formats.printing', 'pandas.core.strings', 'pandas.core.arrays.numpy_', 'pandas.core.arrays.period', 'pandas.core.arrays.sparse', 'pandas.core.arrays.sparse.accessor', 'pandas.core.arrays.sparse.array', 'pandas._libs.sparse', 'pandas.core.arrays.sparse.dtype', 'pandas.core.arrays.string_', 'pandas.core.arrays.timedeltas', 'pandas.core.groupby', 'pandas.core.groupby.generic', 'pandas.core.frame', 'pandas.core.generic', 'pandas.core.indexes.api', 'pandas.core.indexes.category', 'pandas.core.indexes.extension', 'pandas.core.indexes.datetimes', 'pandas.core.indexes.datetimelike', 'pandas.core.indexes.numeric', 'pandas.core.tools.timedeltas', 'pandas.core.tools.datetimes', 'pandas.arrays', 'pandas.core.indexes.interval', 'pandas.util._exceptions', 'pandas.core.indexes.multi', 'pandas.core.indexes.timedeltas', 'pandas.core.indexes.period', 'pandas.core.indexes.range', 'pandas.core.indexing', 'pandas._libs.indexing', 'pandas.core.internals', 'pandas.core.internals.blocks', 'pandas._libs.writers', 'pandas._libs.internals', 'pandas.core.internals.managers', 'pandas.core.internals.concat', 'pandas.io.formats.format', 'pandas.io.common', 'gzip', 'mmap', 'pandas.core.internals.construction', 'pandas.core.series', 'pandas._libs.reshape', 'pandas.core.indexes.accessors', 'pandas.plotting', 'pandas.plotting._core', 'pandas.plotting._misc', 'pandas.core.window', 'pandas.core.window.ewm', 'pandas._libs.window', 'pandas._libs.window.aggregations', 'pandas.core.window.common', 'pandas.core.groupby.base', 'pandas.core.window.rolling', 'pandas.core.window.indexers', 'pandas._libs.window.indexers', 'pandas.core.window.numba_', 'pandas.core.window.expanding', 'pandas.core.groupby.groupby', 'pandas._libs.groupby', 'pandas.core.groupby.ops', 'pandas._libs.reduction', 'pandas.core.groupby.grouper', 'pandas.core.groupby.categorical', 'pandas.tseries.api', 'pandas.core.computation', 'pandas.core.computation.api', 'pandas.core.computation.eval', 'pandas.core.computation.engines', 'pandas.core.computation.align', 'pandas.core.computation.common', 'pandas.core.computation.ops', 'pandas.core.computation.scope', 'pandas.compat.chainmap', 'pandas.core.computation.expr', 'pandas.core.computation.parsing', 'pandas.core.reshape', 'pandas.core.reshape.api', 'pandas.core.reshape.concat', 'pandas.core.reshape.melt', 'pandas.core.reshape.merge', 'pandas.core.reshape.pivot', 'pandas.core.reshape.util', 'pandas.core.reshape.reshape', 'pandas.core.reshape.tile', 'pandas.api', 'pandas.api.extensions', 'pandas.api.indexers', 'pandas.api.types', 'pandas.core.dtypes.api', 'pandas.util._print_versions', 'pandas.io.api', 'pandas.io.clipboards', 'pandas.io.excel', 'pandas.io.excel._base', 'pandas._libs.parsers', 'csv', '_csv', 'pandas.io.excel._util', 'pandas.io.parsers', 'pandas.io.date_converters', 'pandas.io.excel._odfreader', 'pandas.io.excel._openpyxl', 'pandas.io.excel._xlrd', 'pandas.io.excel._pyxlsb', 'pandas.io.excel._xlsxwriter', 'pandas._libs.json', 'pandas.io.excel._xlwt', 'pandas.io.feather_format', 'pandas.io.gbq', 'pandas.io.html', 'pandas.io.json', 'pandas.io.json._json', 'pandas.io.json._normalize', 'pandas.io.json._table_schema', 'pandas.io.orc', 'pandas.io.parquet', 'pandas.io.pickle', 'pandas.compat.pickle_compat', 'pandas.io.pytables', 'pandas.core.computation.pytables', 'pandas.io.sas', 'pandas.io.sas.sasreader', 'pandas.io.spss', 'pandas.io.sql', 'pandas.io.stata', 'pandas.util._tester', 'pandas.testing', 'pandas._testing', 'pandas._libs.testing', 'pandas._version', 'encodings.unicode_escape', 'branca._version', 'folium._version', 'folium.features', 'folium.folium', 'folium.map', 'folium.utilities', 'folium.raster_layers', 'folium.vector_layers', 'requests', 'urllib3', 'urllib3.connectionpool', 'urllib3.exceptions', 'urllib3.packages', 'urllib3.packages.ssl_match_hostname', 'urllib3.packages.six', 'urllib3.packages.six.moves', 'urllib3.packages.six.moves.http_client', 'urllib3.connection', 'urllib3.util', 'urllib3.util.connection', 'urllib3.util.wait', 'urllib3.contrib', 'urllib3.contrib._appengine_environ', 'urllib3.util.request', 'urllib3.util.response', 'urllib3.util.ssl_', 'urllib3.util.timeout', 'urllib3.util.retry', 'urllib3.util.url', 'urllib3._collections', 'urllib3.request', 'urllib3.filepost', 'urllib3.fields', 'urllib3.packages.six.moves.urllib', 'urllib3.packages.six.moves.urllib.parse', 'urllib3.response', 'urllib3.util.queue', 'urllib3.poolmanager', 'chardet', 'chardet.compat', 'chardet.universaldetector', 'chardet.charsetgroupprober', 'chardet.enums', 'chardet.charsetprober', 'chardet.escprober', 'chardet.codingstatemachine', 'chardet.escsm', 'chardet.latin1prober', 'chardet.mbcsgroupprober', 'chardet.utf8prober', 'chardet.mbcssm', 'chardet.sjisprober', 'chardet.mbcharsetprober', 'chardet.chardistribution', 'chardet.euctwfreq', 'chardet.euckrfreq', 'chardet.gb2312freq', 'chardet.big5freq', 'chardet.jisfreq', 'chardet.jpcntx', 'chardet.eucjpprober', 'chardet.gb2312prober', 'chardet.euckrprober', 'chardet.cp949prober', 'chardet.big5prober', 'chardet.euctwprober', 'chardet.sbcsgroupprober', 'chardet.sbcharsetprober', 'chardet.langcyrillicmodel', 'chardet.langgreekmodel', 'chardet.langbulgarianmodel', 'chardet.langthaimodel', 'chardet.langhebrewmodel', 'chardet.hebrewprober', 'chardet.langturkishmodel', 'chardet.version', 'requests.exceptions', 'urllib3.contrib.pyopenssl', 'OpenSSL', 'OpenSSL.crypto', 'cryptography', 'cryptography.__about__', 'cryptography.x509', 'cryptography.x509.certificate_transparency', 'cryptography.x509.base', 'cryptography.utils', 'cryptography.hazmat', 'cryptography.hazmat.primitives', 'cryptography.hazmat.primitives.asymmetric', 'cryptography.hazmat.primitives.asymmetric.dsa', 'cryptography.hazmat.primitives.asymmetric.ec', 'cryptography.hazmat.primitives.asymmetric.rsa', 'cryptography.exceptions', 'cryptography.hazmat.backends', 'cryptography.hazmat.backends.interfaces', 'cryptography.x509.extensions', 'ipaddress', 'asn1crypto', 'asn1crypto.version', 'asn1crypto.keys', 'asn1crypto._elliptic_curve', 'asn1crypto._int', 'asn1crypto.util', 'asn1crypto._errors', 'asn1crypto._iri', 'asn1crypto._types', 'asn1crypto._ordereddict', 'asn1crypto._ffi', 'asn1crypto._perf', 'asn1crypto._perf._big_num_ctypes', 'ctypes.util', 'asn1crypto.algos', 'asn1crypto.core', 'asn1crypto._teletex_codec', 'asn1crypto.parser', 'cryptography.hazmat.primitives.constant_time', 'cryptography.hazmat.bindings', '_cffi_backend', '_constant_time.lib', '_constant_time', 'cryptography.hazmat.bindings._constant_time', 'cryptography.hazmat.primitives.serialization', 'cryptography.x509.general_name', 'idna', 'idna.package_data', 'idna.core', 'idna.idnadata', 'idna.intranges', 'cryptography.x509.name', 'cryptography.x509.oid', 'cryptography.hazmat.primitives.hashes', 'OpenSSL._util', 'cryptography.hazmat.bindings.openssl', 'cryptography.hazmat.bindings.openssl.binding', '_openssl.lib', '_openssl', 'cryptography.hazmat.bindings._openssl', 'cryptography.hazmat.bindings.openssl._conditional', 'OpenSSL.SSL', 'OpenSSL.version', 'cryptography.hazmat.backends.openssl', 'cryptography.hazmat.backends.openssl.backend', 'cryptography.hazmat.backends.openssl.aead', 'cryptography.hazmat.backends.openssl.ciphers', 'cryptography.hazmat.primitives.ciphers', 'cryptography.hazmat.primitives.ciphers.base', 'cryptography.hazmat.primitives.ciphers.modes', 'cryptography.hazmat.backends.openssl.cmac', 'cryptography.hazmat.primitives.mac', 'cryptography.hazmat.backends.openssl.decode_asn1', 'cryptography.hazmat.backends.openssl.dh', 'cryptography.hazmat.primitives.asymmetric.dh', 'cryptography.hazmat.backends.openssl.dsa', 'cryptography.hazmat.backends.openssl.utils', 'cryptography.hazmat.primitives.asymmetric.utils', 'cryptography.hazmat.backends.openssl.ec', 'cryptography.hazmat.backends.openssl.encode_asn1', 'cryptography.hazmat.backends.openssl.hashes', 'cryptography.hazmat.backends.openssl.hmac', 'cryptography.hazmat.backends.openssl.rsa', 'cryptography.hazmat.primitives.asymmetric.padding', 'cryptography.hazmat.backends.openssl.x25519', 'cryptography.hazmat.primitives.asymmetric.x25519', 'cryptography.hazmat.backends.openssl.x509', 'cryptography.hazmat.primitives.ciphers.algorithms', 'cryptography.hazmat.primitives.kdf', 'cryptography.hazmat.primitives.kdf.scrypt', 'urllib3.packages.backports', 'urllib3.packages.backports.makefile', 'requests.__version__', 'requests.utils', 'requests.certs', 'certifi', 'certifi.core', 'importlib.resources', 'requests._internal_utils', 'requests.compat', 'http.cookiejar', 'http.cookies', 'requests.cookies', 'requests.structures', 'requests.packages', 'requests.packages.urllib3', 'requests.packages.urllib3.connectionpool', 'requests.packages.urllib3.exceptions', 'requests.packages.urllib3.packages', 'requests.packages.urllib3.packages.ssl_match_hostname', 'requests.packages.urllib3.packages.six', 'requests.packages.urllib3.packages.six.moves', 'requests.packages.urllib3.packages.six.moves.http_client', 'requests.packages.urllib3.connection', 'requests.packages.urllib3.util', 'requests.packages.urllib3.util.connection', 'requests.packages.urllib3.util.wait', 'requests.packages.urllib3.contrib', 'requests.packages.urllib3.contrib._appengine_environ', 'requests.packages.urllib3.util.request', 'requests.packages.urllib3.util.response', 'requests.packages.urllib3.util.ssl_', 'requests.packages.urllib3.util.timeout', 'requests.packages.urllib3.util.retry', 'requests.packages.urllib3.util.url', 'requests.packages.urllib3._collections', 'requests.packages.urllib3.request', 'requests.packages.urllib3.filepost', 'requests.packages.urllib3.fields', 'requests.packages.urllib3.packages.six.moves.urllib', 'requests.packages.urllib3.packages.six.moves.urllib.parse', 'requests.packages.urllib3.response', 'requests.packages.urllib3.util.queue', 'requests.packages.urllib3.poolmanager', 'requests.packages.urllib3.contrib.pyopenssl', 'requests.packages.urllib3.packages.backports', 'requests.packages.urllib3.packages.backports.makefile', 'requests.packages.idna', 'requests.packages.idna.package_data', 'requests.packages.idna.core', 'requests.packages.idna.idnadata', 'requests.packages.idna.intranges', 'requests.packages.chardet', 'requests.packages.chardet.compat', 'requests.packages.chardet.universaldetector', 'requests.packages.chardet.charsetgroupprober', 'requests.packages.chardet.enums', 'requests.packages.chardet.charsetprober', 'requests.packages.chardet.escprober', 'requests.packages.chardet.codingstatemachine', 'requests.packages.chardet.escsm', 'requests.packages.chardet.latin1prober', 'requests.packages.chardet.mbcsgroupprober', 'requests.packages.chardet.utf8prober', 'requests.packages.chardet.mbcssm', 'requests.packages.chardet.sjisprober', 'requests.packages.chardet.mbcharsetprober', 'requests.packages.chardet.chardistribution', 'requests.packages.chardet.euctwfreq', 'requests.packages.chardet.euckrfreq', 'requests.packages.chardet.gb2312freq', 'requests.packages.chardet.big5freq', 'requests.packages.chardet.jisfreq', 'requests.packages.chardet.jpcntx', 'requests.packages.chardet.eucjpprober', 'requests.packages.chardet.gb2312prober', 'requests.packages.chardet.euckrprober', 'requests.packages.chardet.cp949prober', 'requests.packages.chardet.big5prober', 'requests.packages.chardet.euctwprober', 'requests.packages.chardet.sbcsgroupprober', 'requests.packages.chardet.sbcharsetprober', 'requests.packages.chardet.langcyrillicmodel', 'requests.packages.chardet.langgreekmodel', 'requests.packages.chardet.langbulgarianmodel', 'requests.packages.chardet.langthaimodel', 'requests.packages.chardet.langhebrewmodel', 'requests.packages.chardet.hebrewprober', 'requests.packages.chardet.langturkishmodel', 'requests.packages.chardet.version', 'requests.models', 'requests.hooks', 'requests.auth', 'requests.status_codes', 'requests.api', 'requests.sessions', 'requests.adapters', 'urllib3.contrib.socks', 'socks', 'seaborn', 'seaborn.rcmod', 'matplotlib', 'matplotlib.cbook', 'matplotlib.cbook.deprecation', 'matplotlib.rcsetup', 'matplotlib.fontconfig_pattern', 'pyparsing', 'matplotlib.colors', 'matplotlib.docstring', 'matplotlib._color_data', 'cycler', 'matplotlib._version', 'matplotlib.ft2font', 'kiwisolver']
2020-10-12 20:21:16,939 [3081] DEBUG    matplotlib:278: [JupyterRequire] CACHEDIR=/home/wfct0p/.cache/matplotlib
2020-10-12 20:21:16,944 [3081] DEBUG    matplotlib.font_manager:1348: [JupyterRequire] Using fontManager instance from /home/wfct0p/.cache/matplotlib/fontlist-v310.json
2020-10-12 20:21:17,158 [3081] DEBUG    matplotlib.pyplot:225: [JupyterRequire] Loaded backend module://ipykernel.pylab.backend_inline version unknown.
2020-10-12 20:21:17,263 [3081] DEBUG    shapely.geos:73: [JupyterRequire] Found GEOS DLL: <CDLL '/home/wfct0p/.local/lib/python3.7/site-packages/shapely/.libs/libgeos_c-5031f9ac.so.1.13.1', handle 55f4138a3ee0 at 0x7fc2ce0262e8>, using it.
2020-10-12 20:21:17,279 [3081] DEBUG    shapely.geos:38: [JupyterRequire] Trying `CDLL(libc.so.6)`
2020-10-12 20:21:17,280 [3081] DEBUG    shapely.geos:55: [JupyterRequire] Library path: 'libc.so.6'
2020-10-12 20:21:17,282 [3081] DEBUG    shapely.geos:56: [JupyterRequire] DLL: <CDLL 'libc.so.6', handle 7fc3034754f0 at 0x7fc2d312ea90>
2020-10-12 20:21:17,474 [3081] DEBUG    Fiona:143: [JupyterRequire] Set GDAL_DATA = '/opt/conda/share/gdal'
2020-10-12 20:21:17,475 [3081] DEBUG    Fiona:143: [JupyterRequire] Set PROJ_LIB = '/opt/conda/share/proj'
2020-10-12 20:21:17,602 [3081] DEBUG    matplotlib.pyplot:225: [JupyterRequire] Loaded backend module://ipykernel.pylab.backend_inline version unknown.
2020-10-12 20:21:17,608 [3081] DEBUG    matplotlib.pyplot:225: [JupyterRequire] Loaded backend module://ipykernel.pylab.backend_inline version unknown.
2020-10-12 20:21:17,620 [3081] DEBUG    fiona:287: [JupyterRequire] Creating a not-responsible GDALEnv in drivers()
2020-10-12 20:21:17,623 [3081] DEBUG    Fiona:75: [JupyterRequire] GDAL_DATA: /opt/conda/share/gdal
2020-10-12 20:21:17,625 [3081] DEBUG    Fiona:75: [JupyterRequire] PROJ_LIB: /opt/conda/share/proj
2020-10-12 20:21:17,628 [3081] DEBUG    Fiona:145: [JupyterRequire] GDAL_DATA: /opt/conda/share/gdal
2020-10-12 20:21:17,629 [3081] DEBUG    Fiona:145: [JupyterRequire] PROJ_LIB: /opt/conda/share/proj
2020-10-12 20:21:17,631 [3081] DEBUG    Fiona:153: [JupyterRequire] Userencoding: None
2020-10-12 20:21:17,642 [3081] DEBUG    Fiona:203: [JupyterRequire] Got coordinate system
2020-10-12 20:21:17,645 [3081] DEBUG    Fiona:210: [JupyterRequire] Got coordinate system
2020-10-12 20:21:17,647 [3081] DEBUG    Fiona:247: [JupyterRequire] Index: 0
2020-10-12 20:21:17,669 [3081] DEBUG    fiona.collection:404: [JupyterRequire] Flushed buffer
2020-10-12 20:21:17,672 [3081] DEBUG    fiona.collection:406: [JupyterRequire] Stopped session
2020-10-12 20:21:17,695 [3081] DEBUG    fiona:287: [JupyterRequire] Creating a not-responsible GDALEnv in drivers()
2020-10-12 20:21:17,698 [3081] DEBUG    Fiona:75: [JupyterRequire] GDAL_DATA: /opt/conda/share/gdal
2020-10-12 20:21:17,700 [3081] DEBUG    Fiona:75: [JupyterRequire] PROJ_LIB: /opt/conda/share/proj
2020-10-12 20:21:17,702 [3081] DEBUG    Fiona:145: [JupyterRequire] GDAL_DATA: /opt/conda/share/gdal
2020-10-12 20:21:17,704 [3081] DEBUG    Fiona:145: [JupyterRequire] PROJ_LIB: /opt/conda/share/proj
2020-10-12 20:21:17,706 [3081] DEBUG    Fiona:153: [JupyterRequire] Userencoding: None
2020-10-12 20:21:17,709 [3081] DEBUG    Fiona:203: [JupyterRequire] Got coordinate system
2020-10-12 20:21:17,711 [3081] DEBUG    Fiona:210: [JupyterRequire] Got coordinate system
2020-10-12 20:21:17,713 [3081] DEBUG    Fiona:247: [JupyterRequire] Index: 0
2020-10-12 20:21:17,718 [3081] DEBUG    fiona.collection:404: [JupyterRequire] Flushed buffer
2020-10-12 20:21:17,721 [3081] DEBUG    fiona.collection:406: [JupyterRequire] Stopped session
2020-10-12 20:21:24,062 [3081] DEBUG    matplotlib.font_manager:1246: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=20.0.
2020-10-12 20:21:24,065 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
2020-10-12 20:21:24,067 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
2020-10-12 20:21:24,068 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
2020-10-12 20:21:24,070 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-12 20:21:24,072 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
2020-10-12 20:21:24,074 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
2020-10-12 20:21:24,076 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2020-10-12 20:21:24,078 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
2020-10-12 20:21:24,081 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-10-12 20:21:24,083 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2020-10-12 20:21:24,086 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2020-10-12 20:21:24,088 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
2020-10-12 20:21:24,090 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 0.33499999999999996
2020-10-12 20:21:24,092 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2020-10-12 20:21:24,094 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
2020-10-12 20:21:24,096 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2020-10-12 20:21:24,098 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
2020-10-12 20:21:24,100 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2020-10-12 20:21:24,102 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-10-12 20:21:24,104 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-12 20:21:24,106 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-12 20:21:24,108 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2020-10-12 20:21:24,109 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
2020-10-12 20:21:24,111 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2020-10-12 20:21:24,113 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2020-10-12 20:21:24,115 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
2020-10-12 20:21:24,117 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2020-10-12 20:21:24,119 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
2020-10-12 20:21:24,121 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
2020-10-12 20:21:24,123 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2020-10-12 20:21:24,125 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-12 20:21:24,128 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2020-10-12 20:21:24,130 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2020-10-12 20:21:24,132 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2020-10-12 20:21:24,134 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
2020-10-12 20:21:24,135 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 1.335
2020-10-12 20:21:24,137 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
2020-10-12 20:21:24,139 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2020-10-12 20:21:24,141 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-Heavy.ttf) normal normal heavy normal>) = 10.43
2020-10-12 20:21:24,142 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-12 20:21:24,144 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-BlackItalic.ttf) italic normal black normal>) = 11.525
2020-10-12 20:21:24,145 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'GFS Baskerville' (GFSBaskerville.otf) normal normal regular normal>) = 10.05
2020-10-12 20:21:24,148 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-BoldItalic.ttf) italic normal bold condensed>) = 11.535
2020-10-12 20:21:24,151 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-BoldOblique.ttf) oblique normal bold condensed>) = 1.535
2020-10-12 20:21:24,153 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-ExtraLight.ttf) normal normal light normal>) = 0.24
2020-10-12 20:21:24,156 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-SemiboldItalic.ttf) italic normal semibold normal>) = 11.24
2020-10-12 20:21:24,158 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed.ttf) normal normal 400 condensed>) = 10.25
2020-10-12 20:21:24,160 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-Thin.ttf) normal normal 400 normal>) = 10.05
2020-10-12 20:21:24,162 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-HairlineItalic.ttf) italic normal 400 normal>) = 11.05
2020-10-12 20:21:24,164 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-Italic.ttf) italic normal 400 condensed>) = 11.25
2020-10-12 20:21:24,165 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-12 20:21:24,167 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-Light.ttf) normal normal light normal>) = 10.24
2020-10-12 20:21:24,169 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-LightItalic.ttf) italic normal light normal>) = 11.24
2020-10-12 20:21:24,171 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-Bold.ttf) normal normal bold condensed>) = 10.535
2020-10-12 20:21:24,173 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-Black.ttf) normal normal black normal>) = 10.525
2020-10-12 20:21:24,175 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-Semibold.ttf) normal normal semibold normal>) = 10.24
2020-10-12 20:21:24,176 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-Medium.ttf) normal normal medium normal>) = 10.145
2020-10-12 20:21:24,187 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-Oblique.ttf) oblique normal 400 condensed>) = 1.25
2020-10-12 20:21:24,191 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-Hairline.ttf) normal normal 400 normal>) = 10.05
2020-10-12 20:21:24,193 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-12 20:21:24,195 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
2020-10-12 20:21:24,204 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed.ttf) normal normal 400 condensed>) = 0.25
2020-10-12 20:21:24,206 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-12 20:21:24,207 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-HeavyItalic.ttf) italic normal heavy normal>) = 11.43
2020-10-12 20:21:24,209 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-MediumItalic.ttf) italic normal medium normal>) = 11.145
2020-10-12 20:21:24,211 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-ThinItalic.ttf) italic normal 400 normal>) = 11.05
2020-10-12 20:21:24,213 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-12 20:21:24,215 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Math TeX Gyre' (DejaVuMathTeXGyre.ttf) normal normal regular normal>) = 10.05
2020-10-12 20:21:24,217 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-Bold.ttf) normal normal bold condensed>) = 0.5349999999999999
2020-10-12 20:21:24,219 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'GFS Porson' (GFSPorson.otf) normal normal 400 normal>) = 10.05
2020-10-12 20:21:24,221 [3081] DEBUG    matplotlib.font_manager:1281: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=20.0 to DejaVu Sans ('/home/wfct0p/.local/lib/python3.7/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
2020-10-12 20:21:24,233 [3081] DEBUG    matplotlib.font_manager:1246: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2020-10-12 20:21:24,236 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
2020-10-12 20:21:24,238 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
2020-10-12 20:21:24,240 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
2020-10-12 20:21:24,242 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-12 20:21:24,245 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
2020-10-12 20:21:24,247 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
2020-10-12 20:21:24,249 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2020-10-12 20:21:24,251 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
2020-10-12 20:21:24,252 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-10-12 20:21:24,255 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2020-10-12 20:21:24,257 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2020-10-12 20:21:24,259 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
2020-10-12 20:21:24,261 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 0.33499999999999996
2020-10-12 20:21:24,262 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2020-10-12 20:21:24,264 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
2020-10-12 20:21:24,266 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2020-10-12 20:21:24,268 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
2020-10-12 20:21:24,271 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2020-10-12 20:21:24,274 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-10-12 20:21:24,276 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-12 20:21:24,279 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-12 20:21:24,281 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2020-10-12 20:21:24,283 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
2020-10-12 20:21:24,285 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2020-10-12 20:21:24,289 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2020-10-12 20:21:24,292 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
2020-10-12 20:21:24,294 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2020-10-12 20:21:24,297 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
2020-10-12 20:21:24,299 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
2020-10-12 20:21:24,301 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2020-10-12 20:21:24,303 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-12 20:21:24,305 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2020-10-12 20:21:24,308 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2020-10-12 20:21:24,310 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2020-10-12 20:21:24,313 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
2020-10-12 20:21:24,319 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 1.335
2020-10-12 20:21:24,321 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
2020-10-12 20:21:24,323 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2020-10-12 20:21:24,326 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-Heavy.ttf) normal normal heavy normal>) = 10.43
2020-10-12 20:21:24,328 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-12 20:21:24,330 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-BlackItalic.ttf) italic normal black normal>) = 11.525
2020-10-12 20:21:24,331 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'GFS Baskerville' (GFSBaskerville.otf) normal normal regular normal>) = 10.05
2020-10-12 20:21:24,333 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-BoldItalic.ttf) italic normal bold condensed>) = 11.535
2020-10-12 20:21:24,335 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-BoldOblique.ttf) oblique normal bold condensed>) = 1.535
2020-10-12 20:21:24,337 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-ExtraLight.ttf) normal normal light normal>) = 0.24
2020-10-12 20:21:24,341 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-SemiboldItalic.ttf) italic normal semibold normal>) = 11.24
2020-10-12 20:21:24,343 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed.ttf) normal normal 400 condensed>) = 10.25
2020-10-12 20:21:24,346 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-Thin.ttf) normal normal 400 normal>) = 10.05
2020-10-12 20:21:24,348 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-HairlineItalic.ttf) italic normal 400 normal>) = 11.05
2020-10-12 20:21:24,349 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-Italic.ttf) italic normal 400 condensed>) = 11.25
2020-10-12 20:21:24,351 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-12 20:21:24,353 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-Light.ttf) normal normal light normal>) = 10.24
2020-10-12 20:21:24,355 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-LightItalic.ttf) italic normal light normal>) = 11.24
2020-10-12 20:21:24,357 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-Bold.ttf) normal normal bold condensed>) = 10.535
2020-10-12 20:21:24,359 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-Black.ttf) normal normal black normal>) = 10.525
2020-10-12 20:21:24,361 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-Semibold.ttf) normal normal semibold normal>) = 10.24
2020-10-12 20:21:24,363 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-Medium.ttf) normal normal medium normal>) = 10.145
2020-10-12 20:21:24,364 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-Oblique.ttf) oblique normal 400 condensed>) = 1.25
2020-10-12 20:21:24,366 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-Hairline.ttf) normal normal 400 normal>) = 10.05
2020-10-12 20:21:24,368 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-12 20:21:24,370 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
2020-10-12 20:21:24,372 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed.ttf) normal normal 400 condensed>) = 0.25
2020-10-12 20:21:24,374 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-12 20:21:24,376 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-HeavyItalic.ttf) italic normal heavy normal>) = 11.43
2020-10-12 20:21:24,378 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-MediumItalic.ttf) italic normal medium normal>) = 11.145
2020-10-12 20:21:24,380 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-ThinItalic.ttf) italic normal 400 normal>) = 11.05
2020-10-12 20:21:24,381 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-12 20:21:24,383 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Math TeX Gyre' (DejaVuMathTeXGyre.ttf) normal normal regular normal>) = 10.05
2020-10-12 20:21:24,384 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-Bold.ttf) normal normal bold condensed>) = 0.5349999999999999
2020-10-12 20:21:24,388 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'GFS Porson' (GFSPorson.otf) normal normal 400 normal>) = 10.05
2020-10-12 20:21:24,391 [3081] DEBUG    matplotlib.font_manager:1281: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('/home/wfct0p/.local/lib/python3.7/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
2020-10-12 20:21:24,404 [3081] DEBUG    matplotlib.font_manager:1246: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=15.0.
2020-10-12 20:21:24,407 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
2020-10-12 20:21:24,410 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
2020-10-12 20:21:24,412 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
2020-10-12 20:21:24,415 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-12 20:21:24,420 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
2020-10-12 20:21:24,422 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
2020-10-12 20:21:24,424 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2020-10-12 20:21:24,426 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
2020-10-12 20:21:24,428 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-10-12 20:21:24,431 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2020-10-12 20:21:24,433 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2020-10-12 20:21:24,435 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
2020-10-12 20:21:24,437 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 0.33499999999999996
2020-10-12 20:21:24,439 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2020-10-12 20:21:24,441 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
2020-10-12 20:21:24,443 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2020-10-12 20:21:24,446 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
2020-10-12 20:21:24,447 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2020-10-12 20:21:24,449 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-10-12 20:21:24,452 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-12 20:21:24,455 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-12 20:21:24,457 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2020-10-12 20:21:24,459 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
2020-10-12 20:21:24,461 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2020-10-12 20:21:24,463 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2020-10-12 20:21:24,465 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
2020-10-12 20:21:24,468 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2020-10-12 20:21:24,471 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
2020-10-12 20:21:24,473 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
2020-10-12 20:21:24,475 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2020-10-12 20:21:24,479 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-12 20:21:24,480 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2020-10-12 20:21:24,482 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2020-10-12 20:21:24,484 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2020-10-12 20:21:24,486 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
2020-10-12 20:21:24,488 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 1.335
2020-10-12 20:21:24,489 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
2020-10-12 20:21:24,493 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2020-10-12 20:21:24,495 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-Heavy.ttf) normal normal heavy normal>) = 10.43
2020-10-12 20:21:24,497 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-12 20:21:24,499 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-BlackItalic.ttf) italic normal black normal>) = 11.525
2020-10-12 20:21:24,501 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'GFS Baskerville' (GFSBaskerville.otf) normal normal regular normal>) = 10.05
2020-10-12 20:21:24,502 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-BoldItalic.ttf) italic normal bold condensed>) = 11.535
2020-10-12 20:21:24,504 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-BoldOblique.ttf) oblique normal bold condensed>) = 1.535
2020-10-12 20:21:24,506 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-ExtraLight.ttf) normal normal light normal>) = 0.24
2020-10-12 20:21:24,507 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-SemiboldItalic.ttf) italic normal semibold normal>) = 11.24
2020-10-12 20:21:24,509 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed.ttf) normal normal 400 condensed>) = 10.25
2020-10-12 20:21:24,511 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-Thin.ttf) normal normal 400 normal>) = 10.05
2020-10-12 20:21:24,513 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-HairlineItalic.ttf) italic normal 400 normal>) = 11.05
2020-10-12 20:21:24,515 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-Italic.ttf) italic normal 400 condensed>) = 11.25
2020-10-12 20:21:24,517 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-12 20:21:24,520 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-Light.ttf) normal normal light normal>) = 10.24
2020-10-12 20:21:24,522 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-LightItalic.ttf) italic normal light normal>) = 11.24
2020-10-12 20:21:24,523 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-Bold.ttf) normal normal bold condensed>) = 10.535
2020-10-12 20:21:24,526 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-Black.ttf) normal normal black normal>) = 10.525
2020-10-12 20:21:24,529 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-Semibold.ttf) normal normal semibold normal>) = 10.24
2020-10-12 20:21:24,531 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-Medium.ttf) normal normal medium normal>) = 10.145
2020-10-12 20:21:24,533 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-Oblique.ttf) oblique normal 400 condensed>) = 1.25
2020-10-12 20:21:24,535 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-Hairline.ttf) normal normal 400 normal>) = 10.05
2020-10-12 20:21:24,537 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-12 20:21:24,541 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
2020-10-12 20:21:24,543 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed.ttf) normal normal 400 condensed>) = 0.25
2020-10-12 20:21:24,547 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-12 20:21:24,549 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-HeavyItalic.ttf) italic normal heavy normal>) = 11.43
2020-10-12 20:21:24,551 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-MediumItalic.ttf) italic normal medium normal>) = 11.145
2020-10-12 20:21:24,553 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-ThinItalic.ttf) italic normal 400 normal>) = 11.05
2020-10-12 20:21:24,555 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-12 20:21:24,558 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Math TeX Gyre' (DejaVuMathTeXGyre.ttf) normal normal regular normal>) = 10.05
2020-10-12 20:21:24,560 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-Bold.ttf) normal normal bold condensed>) = 0.5349999999999999
2020-10-12 20:21:24,564 [3081] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'GFS Porson' (GFSPorson.otf) normal normal 400 normal>) = 10.05
2020-10-12 20:21:24,566 [3081] DEBUG    matplotlib.font_manager:1281: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=15.0 to DejaVu Sans ('/home/wfct0p/.local/lib/python3.7/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
2020-10-12 20:21:26,952 [3081] DEBUG    fiona:287: [JupyterRequire] Creating a not-responsible GDALEnv in drivers()
2020-10-12 20:21:26,955 [3081] DEBUG    Fiona:75: [JupyterRequire] GDAL_DATA: /opt/conda/share/gdal
2020-10-12 20:21:26,956 [3081] DEBUG    Fiona:75: [JupyterRequire] PROJ_LIB: /opt/conda/share/proj
2020-10-12 20:21:26,958 [3081] DEBUG    Fiona:145: [JupyterRequire] GDAL_DATA: /opt/conda/share/gdal
2020-10-12 20:21:26,960 [3081] DEBUG    Fiona:145: [JupyterRequire] PROJ_LIB: /opt/conda/share/proj
2020-10-12 20:21:26,962 [3081] DEBUG    Fiona:153: [JupyterRequire] Userencoding: None
2020-10-12 20:21:26,965 [3081] DEBUG    Fiona:203: [JupyterRequire] Got coordinate system
2020-10-12 20:21:26,967 [3081] DEBUG    Fiona:210: [JupyterRequire] Got coordinate system
2020-10-12 20:21:26,969 [3081] DEBUG    Fiona:247: [JupyterRequire] Index: 0
2020-10-12 20:21:26,989 [3081] DEBUG    fiona.collection:404: [JupyterRequire] Flushed buffer
2020-10-12 20:21:26,991 [3081] DEBUG    fiona.collection:406: [JupyterRequire] Stopped session
2020-10-12 20:21:26,993 [3081] DEBUG    fiona:287: [JupyterRequire] Creating a not-responsible GDALEnv in drivers()
2020-10-12 20:21:26,995 [3081] DEBUG    Fiona:75: [JupyterRequire] GDAL_DATA: /opt/conda/share/gdal
2020-10-12 20:21:26,997 [3081] DEBUG    Fiona:75: [JupyterRequire] PROJ_LIB: /opt/conda/share/proj
2020-10-12 20:21:26,998 [3081] DEBUG    Fiona:145: [JupyterRequire] GDAL_DATA: /opt/conda/share/gdal
2020-10-12 20:21:27,002 [3081] DEBUG    Fiona:145: [JupyterRequire] PROJ_LIB: /opt/conda/share/proj
2020-10-12 20:21:27,004 [3081] DEBUG    Fiona:153: [JupyterRequire] Userencoding: None
2020-10-12 20:21:27,007 [3081] DEBUG    Fiona:203: [JupyterRequire] Got coordinate system
2020-10-12 20:21:27,009 [3081] DEBUG    Fiona:210: [JupyterRequire] Got coordinate system
2020-10-12 20:21:27,010 [3081] DEBUG    Fiona:247: [JupyterRequire] Index: 0
2020-10-12 20:21:27,014 [3081] DEBUG    fiona.collection:404: [JupyterRequire] Flushed buffer
2020-10-12 20:21:27,016 [3081] DEBUG    fiona.collection:406: [JupyterRequire] Stopped session
2020-10-12 20:21:27,040 [3081] WARNING  py.warnings:99: [JupyterRequire] /home/wfct0p/.local/lib/python3.7/site-packages/pyproj/crs/crs.py:53: FutureWarning: '+init=<authority>:<code>' syntax is deprecated. '<authority>:<code>' is the preferred initialization method. When making the change, be mindful of axis order changes: https://pyproj4.github.io/pyproj/stable/gotchas.html#axis-order-changes-in-proj-6
  return _prepare_from_string(" ".join(pjargs))

2020-10-12 20:21:27,215 [3081] WARNING  py.warnings:99: [JupyterRequire] /home/wfct0p/.local/lib/python3.7/site-packages/pyproj/crs/crs.py:53: FutureWarning: '+init=<authority>:<code>' syntax is deprecated. '<authority>:<code>' is the preferred initialization method. When making the change, be mindful of axis order changes: https://pyproj4.github.io/pyproj/stable/gotchas.html#axis-order-changes-in-proj-6
  return _prepare_from_string(" ".join(pjargs))

2020-10-12 20:21:27,379 [3081] WARNING  py.warnings:99: [JupyterRequire] /home/wfct0p/.local/lib/python3.7/site-packages/pyproj/crs/crs.py:53: FutureWarning: '+init=<authority>:<code>' syntax is deprecated. '<authority>:<code>' is the preferred initialization method. When making the change, be mindful of axis order changes: https://pyproj4.github.io/pyproj/stable/gotchas.html#axis-order-changes-in-proj-6
  return _prepare_from_string(" ".join(pjargs))

2020-10-12 20:22:03,588 [3081] WARNING  py.warnings:99: [JupyterRequire] /home/wfct0p/.local/lib/python3.7/site-packages/pyproj/crs/crs.py:53: FutureWarning: '+init=<authority>:<code>' syntax is deprecated. '<authority>:<code>' is the preferred initialization method. When making the change, be mindful of axis order changes: https://pyproj4.github.io/pyproj/stable/gotchas.html#axis-order-changes-in-proj-6
  return _prepare_from_string(" ".join(pjargs))

2020-10-12 20:22:03,591 [3081] WARNING  py.warnings:99: [JupyterRequire] /home/wfct0p/.local/lib/python3.7/site-packages/pyproj/crs/crs.py:294: FutureWarning: '+init=<authority>:<code>' syntax is deprecated. '<authority>:<code>' is the preferred initialization method. When making the change, be mindful of axis order changes: https://pyproj4.github.io/pyproj/stable/gotchas.html#axis-order-changes-in-proj-6
  projstring = _prepare_from_string(" ".join((projstring, projkwargs)))

2020-10-12 20:22:03,629 [3081] WARNING  py.warnings:99: [JupyterRequire] /home/wfct0p/.local/lib/python3.7/site-packages/pyproj/crs/crs.py:53: FutureWarning: '+init=<authority>:<code>' syntax is deprecated. '<authority>:<code>' is the preferred initialization method. When making the change, be mindful of axis order changes: https://pyproj4.github.io/pyproj/stable/gotchas.html#axis-order-changes-in-proj-6
  return _prepare_from_string(" ".join(pjargs))

2020-10-12 20:22:03,633 [3081] WARNING  py.warnings:99: [JupyterRequire] /home/wfct0p/.local/lib/python3.7/site-packages/pyproj/crs/crs.py:294: FutureWarning: '+init=<authority>:<code>' syntax is deprecated. '<authority>:<code>' is the preferred initialization method. When making the change, be mindful of axis order changes: https://pyproj4.github.io/pyproj/stable/gotchas.html#axis-order-changes-in-proj-6
  projstring = _prepare_from_string(" ".join((projstring, projkwargs)))

2020-10-12 20:23:40,064 [3081] WARNING  py.warnings:99: [JupyterRequire] /opt/conda/lib/python3.7/site-packages/seaborn/_decorators.py:43: FutureWarning: Pass the following variable as a keyword arg: y. From version 0.12, the only valid positional argument will be `data`, and passing other arguments without an explicit keyword will result in an error or misinterpretation.
  FutureWarning

2020-10-12 20:23:40,068 [3081] WARNING  py.warnings:99: [JupyterRequire] /opt/conda/lib/python3.7/site-packages/seaborn/distributions.py:1659: FutureWarning: The `bw` parameter is deprecated in favor of `bw_method` and `bw_adjust`. Using scott for `bw_method`, but please see the docs for the new parameters and update your code.
  warnings.warn(msg, FutureWarning)

2020-10-12 20:23:40,872 [3081] WARNING  py.warnings:99: [JupyterRequire] /opt/conda/lib/python3.7/site-packages/seaborn/_decorators.py:43: FutureWarning: Pass the following variable as a keyword arg: y. From version 0.12, the only valid positional argument will be `data`, and passing other arguments without an explicit keyword will result in an error or misinterpretation.
  FutureWarning

2020-10-12 20:23:40,876 [3081] WARNING  py.warnings:99: [JupyterRequire] /opt/conda/lib/python3.7/site-packages/seaborn/distributions.py:1659: FutureWarning: The `bw` parameter is deprecated in favor of `bw_method` and `bw_adjust`. Using scott for `bw_method`, but please see the docs for the new parameters and update your code.
  warnings.warn(msg, FutureWarning)

2020-10-12 20:23:40,880 [3081] WARNING  py.warnings:99: [JupyterRequire] /opt/conda/lib/python3.7/site-packages/seaborn/distributions.py:1678: UserWarning: `shade_lowest` is now deprecated in favor of `thresh`. Setting `thresh=0.05`, but please update your code.
  warnings.warn(msg, UserWarning)

2020-10-12 20:23:41,713 [3081] DEBUG    matplotlib.colorbar:607: [JupyterRequire] locator: <matplotlib.ticker.FixedLocator object at 0x7fc2e76288d0>
2020-10-12 20:23:41,715 [3081] DEBUG    matplotlib.colorbar:657: [JupyterRequire] Using fixed locator on colorbar
2020-10-12 20:23:41,728 [3081] DEBUG    matplotlib.colorbar:822: [JupyterRequire] Setting pcolormesh
2020-10-12 20:24:34,175 [28998] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2020-10-12 20:24:34,176 [28998] DEBUG    root:93: [JupyterRequire] Initializing comms.
2020-10-12 20:24:34,178 [28998] INFO     root:247: [JupyterRequire] Initializing comms.
2020-10-12 20:24:34,184 [28998] DEBUG    root:197: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2020-10-12 20:24:34,186 [28998] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2020-10-12 20:24:34,188 [28998] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2020-10-12 20:25:11,583 [3081] DEBUG    urllib3.connectionpool:813: [JupyterRequire] Starting new HTTPS connection (1): api.openstreetmap.org:443
2020-10-12 20:25:12,711 [3081] DEBUG    urllib3.connectionpool:393: [JupyterRequire] https://api.openstreetmap.org:443 "GET /api/0.6/map?bbox=-0.139780,51.509956,-0.131512,51.516682 HTTP/1.1" 200 None
2020-10-12 20:25:15,426 [3081] WARNING  py.warnings:99: [JupyterRequire] /opt/conda/lib/python3.7/site-packages/ipykernel_launcher.py:4: DeprecationWarning: This method will be removed in future versions.  Use 'list(elem)' or iteration over elem instead.
  after removing the cwd from sys.path.

2020-10-12 20:25:15,464 [3081] WARNING  py.warnings:99: [JupyterRequire] /opt/conda/lib/python3.7/site-packages/ipykernel_launcher.py:5: DeprecationWarning: This method will be removed in future versions.  Use 'list(elem)' or iteration over elem instead.
  """

2020-10-12 20:25:33,780 [3081] WARNING  py.warnings:99: [JupyterRequire] /opt/conda/lib/python3.7/site-packages/geopandas/tools/sjoin.py:61: UserWarning: CRS of frames being joined does not match!(None != {'init': 'epsg:4326'})
  "(%s != %s)" % (left_df.crs, right_df.crs)

2020-10-12 20:25:41,396 [3081] WARNING  py.warnings:99: [JupyterRequire] /opt/conda/lib/python3.7/site-packages/geopandas/tools/sjoin.py:61: UserWarning: CRS of frames being joined does not match!(None != {'init': 'epsg:4326'})
  "(%s != %s)" % (left_df.crs, right_df.crs)

2020-10-12 20:25:42,710 [3081] WARNING  py.warnings:99: [JupyterRequire] /opt/conda/lib/python3.7/site-packages/geopandas/tools/sjoin.py:61: UserWarning: CRS of frames being joined does not match!(None != {'init': 'epsg:4326'})
  "(%s != %s)" % (left_df.crs, right_df.crs)

2020-10-12 20:26:50,189 [3171] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2020-10-12 20:26:50,189 [3171] DEBUG    root:93: [JupyterRequire] Initializing comms.
2020-10-12 20:26:50,192 [3171] INFO     root:247: [JupyterRequire] Initializing comms.
2020-10-12 20:26:50,197 [3171] DEBUG    root:197: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2020-10-12 20:26:50,200 [3171] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2020-10-12 20:26:50,202 [3171] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2020-10-12 20:26:50,990 [3171] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2020-10-12 20:26:50,990 [3171] DEBUG    root:93: [JupyterRequire] Initializing comms.
2020-10-12 20:26:50,992 [3171] INFO     root:247: [JupyterRequire] Initializing comms.
2020-10-12 20:26:50,996 [3171] DEBUG    root:197: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2020-10-12 20:26:50,999 [3171] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2020-10-12 20:26:51,001 [3171] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2020-10-12 20:26:56,562 [3171] DEBUG    shapely.geos:73: [JupyterRequire] Found GEOS DLL: <CDLL '/home/wfct0p/.local/lib/python3.7/site-packages/shapely/.libs/libgeos_c-5031f9ac.so.1.13.1', handle 56554f11ba50 at 0x7fc480fcc400>, using it.
2020-10-12 20:26:56,576 [3171] DEBUG    shapely.geos:38: [JupyterRequire] Trying `CDLL(libc.so.6)`
2020-10-12 20:26:56,577 [3171] DEBUG    shapely.geos:55: [JupyterRequire] Library path: 'libc.so.6'
2020-10-12 20:26:56,579 [3171] DEBUG    shapely.geos:56: [JupyterRequire] DLL: <CDLL 'libc.so.6', handle 7fc4cfce84f0 at 0x7fc480fccf28>
2020-10-12 20:26:56,744 [3171] DEBUG    Fiona:143: [JupyterRequire] Set GDAL_DATA = '/opt/conda/share/gdal'
2020-10-12 20:26:56,745 [3171] DEBUG    Fiona:143: [JupyterRequire] Set PROJ_LIB = '/opt/conda/share/proj'
2020-12-01 07:23:07,405 [9814] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2020-12-01 07:23:07,405 [9814] DEBUG    root:93: [JupyterRequire] Initializing comms.
2020-12-01 07:23:07,427 [9814] INFO     root:247: [JupyterRequire] Initializing comms.
2020-12-01 07:23:07,433 [9814] DEBUG    root:197: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2020-12-01 07:23:07,436 [9814] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2020-12-01 07:23:07,438 [9814] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2020-12-01 07:23:09,844 [9814] ERROR    root:221: [JupyterRequire] Invalid alias: The name clear can't be aliased because it is another magic command.
2020-12-01 07:23:09,849 [9814] ERROR    root:221: [JupyterRequire] Invalid alias: The name more can't be aliased because it is another magic command.
2020-12-01 07:23:09,852 [9814] ERROR    root:221: [JupyterRequire] Invalid alias: The name less can't be aliased because it is another magic command.
2020-12-01 07:23:09,855 [9814] ERROR    root:221: [JupyterRequire] Invalid alias: The name man can't be aliased because it is another magic command.
2020-12-07 18:38:10,609 [11400] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2020-12-07 18:38:10,609 [11400] DEBUG    root:93: [JupyterRequire] Initializing comms.
2020-12-07 18:38:10,628 [11400] INFO     root:247: [JupyterRequire] Initializing comms.
2020-12-07 18:38:10,634 [11400] DEBUG    root:197: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2020-12-07 18:38:10,636 [11400] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2020-12-07 18:38:10,639 [11400] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2020-12-09 15:15:37,753 [11400] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2020-12-09 15:15:37,754 [11400] DEBUG    root:93: [JupyterRequire] Initializing comms.
2020-12-09 15:15:37,793 [11400] INFO     root:247: [JupyterRequire] Initializing comms.
2020-12-09 15:15:37,799 [11400] DEBUG    root:197: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2020-12-09 15:15:37,801 [11400] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2020-12-09 15:15:37,803 [11400] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2021-02-20 09:46:26,709 [10614] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2021-02-20 09:46:26,709 [10614] DEBUG    root:93: [JupyterRequire] Initializing comms.
2021-02-20 09:46:26,740 [10614] INFO     root:247: [JupyterRequire] Initializing comms.
2021-02-20 09:46:26,747 [10614] DEBUG    root:197: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2021-02-20 09:46:26,751 [10614] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2021-02-20 09:46:26,755 [10614] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2021-02-20 09:46:27,284 [10614] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2021-02-20 09:46:27,284 [10614] DEBUG    root:93: [JupyterRequire] Initializing comms.
2021-02-20 09:46:27,286 [10614] INFO     root:247: [JupyterRequire] Initializing comms.
2021-02-20 09:46:27,291 [10614] DEBUG    root:197: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2021-02-20 09:46:27,296 [10614] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2021-02-20 09:46:27,299 [10614] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2021-02-20 09:46:32,211 [10629] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2021-02-20 09:46:32,212 [10629] DEBUG    root:93: [JupyterRequire] Initializing comms.
2021-02-20 09:46:32,215 [10629] INFO     root:247: [JupyterRequire] Initializing comms.
2021-02-20 09:46:32,220 [10629] DEBUG    root:197: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2021-02-20 09:46:32,223 [10629] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2021-02-20 09:46:32,225 [10629] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2021-02-20 09:46:50,700 [10629] ERROR    root:221: [JupyterRequire] Invalid alias: The name clear can't be aliased because it is another magic command.
2021-02-20 09:46:50,703 [10629] ERROR    root:221: [JupyterRequire] Invalid alias: The name more can't be aliased because it is another magic command.
2021-02-20 09:46:50,706 [10629] ERROR    root:221: [JupyterRequire] Invalid alias: The name less can't be aliased because it is another magic command.
2021-02-20 09:46:50,710 [10629] ERROR    root:221: [JupyterRequire] Invalid alias: The name man can't be aliased because it is another magic command.
2021-02-20 09:46:51,019 [10614] ERROR    root:221: [JupyterRequire] Invalid alias: The name clear can't be aliased because it is another magic command.
2021-02-20 09:46:51,024 [10614] ERROR    root:221: [JupyterRequire] Invalid alias: The name more can't be aliased because it is another magic command.
2021-02-20 09:46:51,028 [10614] ERROR    root:221: [JupyterRequire] Invalid alias: The name less can't be aliased because it is another magic command.
2021-02-20 09:46:51,031 [10614] ERROR    root:221: [JupyterRequire] Invalid alias: The name man can't be aliased because it is another magic command.
2021-02-20 09:49:49,826 [10664] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2021-02-20 09:49:49,826 [10664] DEBUG    root:93: [JupyterRequire] Initializing comms.
2021-02-20 09:49:49,832 [10664] INFO     root:247: [JupyterRequire] Initializing comms.
2021-02-20 09:49:49,846 [10664] DEBUG    root:197: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2021-02-20 09:49:49,853 [10664] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2021-02-20 09:49:49,860 [10664] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2021-02-20 09:50:33,649 [10664] ERROR    root:221: [JupyterRequire] Invalid alias: The name clear can't be aliased because it is another magic command.
2021-02-20 09:50:33,651 [10664] ERROR    root:221: [JupyterRequire] Invalid alias: The name more can't be aliased because it is another magic command.
2021-02-20 09:50:33,655 [10664] ERROR    root:221: [JupyterRequire] Invalid alias: The name less can't be aliased because it is another magic command.
2021-02-20 09:50:33,658 [10664] ERROR    root:221: [JupyterRequire] Invalid alias: The name man can't be aliased because it is another magic command.
